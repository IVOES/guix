common/src/gx_accordion_menu_event_process.c:562:15: style: The scope of the variable 'menu_list' can be reduced. [variableScope]
GX_MENU_LIST *menu_list;
              ^
common/src/gx_accordion_menu_event_process.c:561:21: style: Variable 'child' is assigned a value that is never used. [unreadVariable]
GX_WIDGET    *child = GX_NULL;
                    ^
common/src/gx_animation_drag_event_process.c:92:20: style: The scope of the variable 'size' can be reduced. [variableScope]
GX_RECTANGLE      *size;
                   ^
common/src/gx_animation_drag_event_process.c:95:20: style: The scope of the variable 'stackptr' can be reduced. [variableScope]
GX_WIDGET        **stackptr;
                   ^
common/src/gx_animation_drag_tracking.c:93:14: style: The scope of the variable 'parent' can be reduced. [variableScope]
GX_WIDGET   *parent;
             ^
common/src/gx_animation_drag_tracking_start.c:89:22: style: The scope of the variable 'active_display_area_set' can be reduced. [variableScope]
VOID               (*active_display_area_set)(INT layer, GX_RECTANGLE *size);
                     ^
common/src/gx_animation_stop.c:124:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_binres_language_table_load.c:572:21: style: The scope of the variable 'get_data' can be reduced. [variableScope]
GX_UBYTE           *get_data;
                    ^
common/src/gx_canvas_alpha_set.c:76:8: style: The scope of the variable 'alpha_set' can be reduced. [variableScope]
VOID (*alpha_set)(INT layer, GX_UBYTE alpha);
       ^
common/src/gx_canvas_create.c:153:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_canvas_delete.c:113:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_canvas_hide.c:77:16: style: The scope of the variable 'hide_function' can be reduced. [variableScope]
VOID         (*hide_function)(INT layer);
               ^
common/src/gx_canvas_offset_set.c:83:8: style: The scope of the variable 'offset_function' can be reduced. [variableScope]
VOID (*offset_function)(INT layer, GX_VALUE x, GX_VALUE y);
       ^
common/src/gx_canvas_pixel_draw.c:96:17: style: Variable 'brush_alpha' is assigned a value that is never used. [unreadVariable]
    brush_alpha = context -> gx_draw_context_brush.gx_brush_alpha;
                ^
common/src/gx_canvas_show.c:74:8: style: The scope of the variable 'show_function' can be reduced. [variableScope]
VOID (*show_function)(INT layer);
       ^
common/src/gx_context_brush_define.c:80:18: style: The scope of the variable 'brush' can be reduced. [variableScope]
GX_BRUSH        *brush;
                 ^
common/src/gx_display_driver_1555xrgb_canvas_blend.c:94:14: style: The scope of the variable 'read' can be reduced. [variableScope]
USHORT      *read;
             ^
common/src/gx_display_driver_1555xrgb_canvas_blend.c:96:14: style: The scope of the variable 'write' can be reduced. [variableScope]
USHORT      *write;
             ^
common/src/gx_display_driver_1555xrgb_pixel_blend.c:95:10: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT  *put;
         ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:519:25: style: Condition '!a' is always true [knownConditionTrueFalse]
                    if (!a)
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:465:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:519:25: note: Condition '!a' is always true
                    if (!a)
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:524:25: style: Condition '!b' is always true [knownConditionTrueFalse]
                    if (!b)
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:466:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:524:25: note: Condition '!b' is always true
                    if (!b)
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:529:25: style: Condition '!c' is always true [knownConditionTrueFalse]
                    if (!c)
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:467:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:529:25: note: Condition '!c' is always true
                    if (!c)
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:534:25: style: Condition '!d' is always true [knownConditionTrueFalse]
                    if (!d)
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:468:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_display_driver_1555xrgb_pixelmap_rotate.c:534:25: note: Condition '!d' is always true
                    if (!d)
                        ^
common/src/gx_display_driver_16bpp_canvas_copy.c:80:14: style: The scope of the variable 'read' can be reduced. [variableScope]
USHORT      *read;
             ^
common/src/gx_display_driver_16bpp_canvas_copy.c:81:14: style: The scope of the variable 'write' can be reduced. [variableScope]
USHORT      *write;
             ^
common/src/gx_display_driver_16bpp_mouse_capture.c:75:16: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT        *put;
               ^
common/src/gx_display_driver_16bpp_mouse_capture.c:77:16: style: The scope of the variable 'get' can be reduced. [variableScope]
USHORT        *get;
               ^
common/src/gx_display_driver_16bpp_mouse_capture.c:78:16: style: The scope of the variable 'map' can be reduced. [variableScope]
GX_PIXELMAP   *map;
               ^
common/src/gx_display_driver_16bpp_mouse_capture.c:81:16: style: The scope of the variable 'canvas' can be reduced. [variableScope]
GX_CANVAS     *canvas;
               ^
common/src/gx_display_driver_16bpp_mouse_restore.c:76:14: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT      *put;
             ^
common/src/gx_display_driver_16bpp_mouse_restore.c:77:14: style: The scope of the variable 'get' can be reduced. [variableScope]
USHORT      *get;
             ^
common/src/gx_display_driver_16bpp_mouse_restore.c:78:14: style: The scope of the variable 'canvas' can be reduced. [variableScope]
GX_CANVAS   *canvas;
             ^
common/src/gx_display_driver_16bpp_pixelmap_blend.c:81:15: style: The scope of the variable 'get' can be reduced. [variableScope]
USHORT       *get;
              ^
common/src/gx_display_driver_16bpp_pixelmap_blend.c:160:15: style: The scope of the variable 'get' can be reduced. [variableScope]
USHORT       *get;
              ^
common/src/gx_display_driver_16bpp_pixelmap_blend.c:162:15: style: The scope of the variable 'getalpha' can be reduced. [variableScope]
GX_UBYTE     *getalpha;
              ^
common/src/gx_display_driver_16bpp_pixelmap_draw.c:82:18: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT          *put;
                 ^
common/src/gx_display_driver_16bpp_pixelmap_draw.c:248:18: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT          *put;
                 ^
common/src/gx_display_driver_16bpp_pixelmap_draw.c:583:20: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT            *put;
                   ^
common/src/gx_display_driver_16bpp_pixelmap_draw.c:673:20: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT            *put;
                   ^
common/src/gx_display_driver_16bpp_pixelmap_draw.c:768:20: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT            *put;
                   ^
common/src/gx_display_driver_16bpp_pixelmap_draw.c:970:20: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT            *put;
                   ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:519:25: style: Condition '!a' is always true [knownConditionTrueFalse]
                    if (!a)
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:465:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:519:25: note: Condition '!a' is always true
                    if (!a)
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:524:25: style: Condition '!b' is always true [knownConditionTrueFalse]
                    if (!b)
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:466:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:524:25: note: Condition '!b' is always true
                    if (!b)
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:529:25: style: Condition '!c' is always true [knownConditionTrueFalse]
                    if (!c)
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:467:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:529:25: note: Condition '!c' is always true
                    if (!c)
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:534:25: style: Condition '!d' is always true [knownConditionTrueFalse]
                    if (!d)
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:468:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_display_driver_16bpp_pixelmap_rotate.c:534:25: note: Condition '!d' is always true
                    if (!d)
                        ^
common/src/gx_display_driver_16bpp_rotated_canvas_copy.c:78:14: style: The scope of the variable 'read' can be reduced. [variableScope]
USHORT      *read;
             ^
common/src/gx_display_driver_16bpp_rotated_canvas_copy.c:79:14: style: The scope of the variable 'write' can be reduced. [variableScope]
USHORT      *write;
             ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_blend.c:79:15: style: The scope of the variable 'get' can be reduced. [variableScope]
USHORT       *get;
              ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_blend.c:172:15: style: The scope of the variable 'get' can be reduced. [variableScope]
USHORT       *get;
              ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_blend.c:174:15: style: The scope of the variable 'getalpha' can be reduced. [variableScope]
GX_UBYTE     *getalpha;
              ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_draw.c:267:18: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT          *put;
                 ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_draw.c:637:20: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT            *put;
                   ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_draw.c:743:20: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT            *put;
                   ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_draw.c:853:20: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT            *put;
                   ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_draw.c:1073:20: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT            *put;
                   ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_draw.c:89:42: style: Variable 'rotated_clip.gx_rectangle_bottom' is assigned a value that is never used. [unreadVariable]
        rotated_clip.gx_rectangle_bottom = (GX_VALUE)(context -> gx_draw_context_canvas -> gx_canvas_x_resolution - clip -> gx_rectangle_left - 1);
                                         ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_draw.c:97:42: style: Variable 'rotated_clip.gx_rectangle_bottom' is assigned a value that is never used. [unreadVariable]
        rotated_clip.gx_rectangle_bottom = clip -> gx_rectangle_right;
                                         ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:564:25: style: Condition '!a' is always true [knownConditionTrueFalse]
                    if (!a)
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:510:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:564:25: note: Condition '!a' is always true
                    if (!a)
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:569:25: style: Condition '!b' is always true [knownConditionTrueFalse]
                    if (!b)
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:511:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:569:25: note: Condition '!b' is always true
                    if (!b)
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:574:25: style: Condition '!c' is always true [knownConditionTrueFalse]
                    if (!c)
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:512:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:574:25: note: Condition '!c' is always true
                    if (!c)
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:579:25: style: Condition '!d' is always true [knownConditionTrueFalse]
                    if (!d)
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:513:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_display_driver_16bpp_rotated_pixelmap_rotate.c:579:25: note: Condition '!d' is always true
                    if (!d)
                        ^
common/src/gx_display_driver_16bpp_rotated_simple_line_draw.c:228:30: style: Variable 'cury' is assigned a value that is never used. [unreadVariable]
                        cury += y_sign;
                             ^
common/src/gx_display_driver_16bpp_rotated_simple_line_draw.c:258:31: style: Variable 'nexty' is assigned a value that is never used. [unreadVariable]
                        nexty -= y_sign;
                              ^
common/src/gx_display_driver_16bpp_rotated_simple_line_draw.c:291:31: style: Variable 'nextx' is assigned a value that is never used. [unreadVariable]
                        nextx -= x_sign;
                              ^
common/src/gx_display_driver_16bpp_rotated_simple_line_draw.c:323:30: style: Variable 'curx' is assigned a value that is never used. [unreadVariable]
                        curx += x_sign;
                             ^
common/src/gx_display_driver_16bpp_simple_line_draw.c:198:30: style: Variable 'cury' is assigned a value that is never used. [unreadVariable]
                        cury += y_sign;
                             ^
common/src/gx_display_driver_16bpp_simple_line_draw.c:228:31: style: Variable 'nexty' is assigned a value that is never used. [unreadVariable]
                        nexty -= y_sign;
                              ^
common/src/gx_display_driver_16bpp_simple_line_draw.c:261:31: style: Variable 'nextx' is assigned a value that is never used. [unreadVariable]
                        nextx -= x_sign;
                              ^
common/src/gx_display_driver_16bpp_simple_line_draw.c:293:30: style: Variable 'curx' is assigned a value that is never used. [unreadVariable]
                        curx += x_sign;
                             ^
common/src/gx_display_driver_16bpp_vertical_pattern_line_draw.c:75:9: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT *put;
        ^
common/src/gx_display_driver_1bpp_canvas_copy.c:78:14: style: The scope of the variable 'read' can be reduced. [variableScope]
GX_UBYTE    *read;
             ^
common/src/gx_display_driver_1bpp_canvas_copy.c:79:14: style: The scope of the variable 'write' can be reduced. [variableScope]
GX_UBYTE    *write;
             ^
common/src/gx_display_driver_1bpp_glyph_1bpp_draw.c:88:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_1bpp_horizontal_line_draw.c:77:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_1bpp_horizontal_pixelmap_line_draw.c:202:14: style: Redundant initialization for 'pixelmap'. The initialized value is overwritten before it is read. [redundantInitialization]
    pixelmap = info -> pixelmap;
             ^
common/src/gx_display_driver_1bpp_horizontal_pixelmap_line_draw.c:200:26: note: pixelmap is initialized
GX_PIXELMAP    *pixelmap = info -> pixelmap;
                         ^
common/src/gx_display_driver_1bpp_horizontal_pixelmap_line_draw.c:202:14: note: pixelmap is overwritten
    pixelmap = info -> pixelmap;
             ^
common/src/gx_display_driver_1bpp_horizontal_pixelmap_line_draw.c:82:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_1bpp_horizontal_pixelmap_line_draw.c:192:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_1bpp_horizontal_pixelmap_line_draw.c:310:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_1bpp_horizontal_pixelmap_line_draw.c:473:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_1bpp_mouse_capture.c:75:16: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE      *put;
               ^
common/src/gx_display_driver_1bpp_mouse_capture.c:78:16: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE      *get;
               ^
common/src/gx_display_driver_1bpp_mouse_capture.c:79:16: style: The scope of the variable 'map' can be reduced. [variableScope]
GX_PIXELMAP   *map;
               ^
common/src/gx_display_driver_1bpp_mouse_capture.c:84:16: style: The scope of the variable 'canvas' can be reduced. [variableScope]
GX_CANVAS     *canvas;
               ^
common/src/gx_display_driver_1bpp_mouse_restore.c:76:14: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE    *put;
             ^
common/src/gx_display_driver_1bpp_mouse_restore.c:77:14: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE    *get;
             ^
common/src/gx_display_driver_1bpp_mouse_restore.c:81:14: style: The scope of the variable 'canvas' can be reduced. [variableScope]
GX_CANVAS   *canvas;
             ^
common/src/gx_display_driver_1bpp_pixelmap_draw.c:78:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_1bpp_pixelmap_draw.c:189:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_1bpp_pixelmap_draw.c:307:19: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE         *put;
                  ^
common/src/gx_display_driver_1bpp_pixelmap_draw.c:459:19: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE         *put;
                  ^
common/src/gx_display_driver_1bpp_pixelmap_draw.c:342:11: style: Variable 'count' is assigned a value that is never used. [unreadVariable]
    count = 0;
          ^
common/src/gx_display_driver_1bpp_pixelmap_draw.c:494:11: style: Variable 'count' is assigned a value that is never used. [unreadVariable]
    count = 0;
          ^
common/src/gx_display_driver_1bpp_pixelmap_rotate.c:85:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE     *put;
              ^
common/src/gx_display_driver_1bpp_pixelmap_rotate.c:238:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE     *put;
              ^
common/src/gx_display_driver_1bpp_simple_line_draw.c:196:30: style: Variable 'cury' is assigned a value that is never used. [unreadVariable]
                        cury += y_sign;
                             ^
common/src/gx_display_driver_1bpp_simple_line_draw.c:236:31: style: Variable 'nexty' is assigned a value that is never used. [unreadVariable]
                        nexty -= y_sign;
                              ^
common/src/gx_display_driver_1bpp_simple_line_draw.c:279:31: style: Variable 'nextx' is assigned a value that is never used. [unreadVariable]
                        nextx -= x_sign;
                              ^
common/src/gx_display_driver_1bpp_simple_line_draw.c:321:30: style: Variable 'curx' is assigned a value that is never used. [unreadVariable]
                        curx += x_sign;
                             ^
common/src/gx_display_driver_1bpp_vertical_line_draw.c:76:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_1bpp_vertical_pattern_line_draw.c:76:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_24xrgb_canvas_blend.c:93:14: style: The scope of the variable 'read' can be reduced. [variableScope]
ULONG       *read;
             ^
common/src/gx_display_driver_24xrgb_canvas_blend.c:95:14: style: The scope of the variable 'write' can be reduced. [variableScope]
ULONG       *write;
             ^
common/src/gx_display_driver_24xrgb_mouse_capture.c:75:16: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR      *put;
               ^
common/src/gx_display_driver_24xrgb_mouse_capture.c:77:16: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_COLOR      *get;
               ^
common/src/gx_display_driver_24xrgb_mouse_capture.c:78:16: style: The scope of the variable 'map' can be reduced. [variableScope]
GX_PIXELMAP   *map;
               ^
common/src/gx_display_driver_24xrgb_mouse_restore.c:76:12: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR  *put;
           ^
common/src/gx_display_driver_24xrgb_mouse_restore.c:77:12: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_COLOR  *get;
           ^
common/src/gx_display_driver_24xrgb_pixel_blend.c:96:10: style: The scope of the variable 'put' can be reduced. [variableScope]
ULONG   *put;
         ^
common/src/gx_display_driver_24xrgb_pixel_blend.c:137:24: error: Signed integer overflow for expression '0xff<<24'. [integerOverflow]
        *put = (ULONG)(ASSEMBLECOLOR(fred, fgreen, fblue));
                       ^
common/src/gx_display_driver_24xrgb_rotated_canvas_blend.c:78:14: style: The scope of the variable 'read' can be reduced. [variableScope]
ULONG       *read;
             ^
common/src/gx_display_driver_24xrgb_rotated_canvas_blend.c:80:14: style: The scope of the variable 'write' can be reduced. [variableScope]
ULONG       *write;
             ^
common/src/gx_display_driver_24xrgb_rotated_pixel_blend.c:78:10: style: The scope of the variable 'put' can be reduced. [variableScope]
ULONG   *put;
         ^
common/src/gx_display_driver_24xrgb_rotated_setup.c:77:41: style: Variable 'display->gx_display_mouse_capture' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_mouse_capture = GX_NULL;
                                        ^
common/src/gx_display_driver_24xrgb_rotated_setup.c:75:41: note: display->gx_display_mouse_capture is assigned
    display -> gx_display_mouse_capture = GX_NULL;
                                        ^
common/src/gx_display_driver_24xrgb_rotated_setup.c:77:41: note: display->gx_display_mouse_capture is overwritten
    display -> gx_display_mouse_capture = GX_NULL;
                                        ^
common/src/gx_display_driver_24xrgb_rotated_setup.c:78:41: style: Variable 'display->gx_display_mouse_restore' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_mouse_restore = GX_NULL;
                                        ^
common/src/gx_display_driver_24xrgb_rotated_setup.c:76:41: note: display->gx_display_mouse_restore is assigned
    display -> gx_display_mouse_restore = GX_NULL;
                                        ^
common/src/gx_display_driver_24xrgb_rotated_setup.c:78:41: note: display->gx_display_mouse_restore is overwritten
    display -> gx_display_mouse_restore = GX_NULL;
                                        ^
common/src/gx_display_driver_24xrgb_setup.c:100:64: style: Variable 'display->gx_display_driver_drawing_initiate' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_24xrgb_setup.c:82:64: note: display->gx_display_driver_drawing_initiate is assigned
    display -> gx_display_driver_drawing_initiate              = GX_NULL;
                                                               ^
common/src/gx_display_driver_24xrgb_setup.c:100:64: note: display->gx_display_driver_drawing_initiate is overwritten
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_24xrgb_setup.c:101:64: style: Variable 'display->gx_display_driver_drawing_complete' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_24xrgb_setup.c:83:64: note: display->gx_display_driver_drawing_complete is assigned
    display -> gx_display_driver_drawing_complete              = GX_NULL;
                                                               ^
common/src/gx_display_driver_24xrgb_setup.c:101:64: note: display->gx_display_driver_drawing_complete is overwritten
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_32argb_pixel_blend.c:92:10: style: The scope of the variable 'put' can be reduced. [variableScope]
ULONG   *put;
         ^
common/src/gx_display_driver_32argb_pixelmap_blend.c:87:15: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_COLOR     *get;
              ^
common/src/gx_display_driver_32argb_pixelmap_draw.c:320:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR          *put;
                   ^
common/src/gx_display_driver_32argb_pixelmap_draw.c:494:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR     *put;
              ^
common/src/gx_display_driver_32argb_pixelmap_draw.c:495:15: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_COLOR     *get;
              ^
common/src/gx_display_driver_32argb_rotated_pixel_blend.c:74:10: style: The scope of the variable 'put' can be reduced. [variableScope]
ULONG   *put;
         ^
common/src/gx_display_driver_32argb_rotated_setup.c:77:41: style: Variable 'display->gx_display_mouse_capture' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_mouse_capture = GX_NULL;
                                        ^
common/src/gx_display_driver_32argb_rotated_setup.c:75:41: note: display->gx_display_mouse_capture is assigned
    display -> gx_display_mouse_capture = GX_NULL;
                                        ^
common/src/gx_display_driver_32argb_rotated_setup.c:77:41: note: display->gx_display_mouse_capture is overwritten
    display -> gx_display_mouse_capture = GX_NULL;
                                        ^
common/src/gx_display_driver_32argb_rotated_setup.c:78:41: style: Variable 'display->gx_display_mouse_restore' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_mouse_restore = GX_NULL;
                                        ^
common/src/gx_display_driver_32argb_rotated_setup.c:76:41: note: display->gx_display_mouse_restore is assigned
    display -> gx_display_mouse_restore = GX_NULL;
                                        ^
common/src/gx_display_driver_32argb_rotated_setup.c:78:41: note: display->gx_display_mouse_restore is overwritten
    display -> gx_display_mouse_restore = GX_NULL;
                                        ^
common/src/gx_display_driver_32argb_setup.c:99:64: style: Variable 'display->gx_display_driver_drawing_initiate' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_32argb_setup.c:81:64: note: display->gx_display_driver_drawing_initiate is assigned
    display -> gx_display_driver_drawing_initiate              = GX_NULL;
                                                               ^
common/src/gx_display_driver_32argb_setup.c:99:64: note: display->gx_display_driver_drawing_initiate is overwritten
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_32argb_setup.c:100:64: style: Variable 'display->gx_display_driver_drawing_complete' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_32argb_setup.c:82:64: note: display->gx_display_driver_drawing_complete is assigned
    display -> gx_display_driver_drawing_complete              = GX_NULL;
                                                               ^
common/src/gx_display_driver_32argb_setup.c:100:64: note: display->gx_display_driver_drawing_complete is overwritten
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_32bpp_block_move.c:81:11: style: The scope of the variable 'height' can be reduced. [variableScope]
int       height;
          ^
common/src/gx_display_driver_32bpp_canvas_copy.c:80:14: style: The scope of the variable 'read' can be reduced. [variableScope]
ULONG       *read;
             ^
common/src/gx_display_driver_32bpp_canvas_copy.c:81:14: style: The scope of the variable 'write' can be reduced. [variableScope]
ULONG       *write;
             ^
common/src/gx_display_driver_32bpp_horizontal_pixelmap_line_draw.c:635:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR          *put;
                   ^
common/src/gx_display_driver_32bpp_horizontal_pixelmap_line_draw.c:720:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR          *put;
                   ^
common/src/gx_display_driver_32bpp_pixelmap_draw.c:82:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR     *put;
              ^
common/src/gx_display_driver_32bpp_pixelmap_draw.c:83:15: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_COLOR     *get;
              ^
common/src/gx_display_driver_32bpp_pixelmap_draw.c:254:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR          *put;
                   ^
common/src/gx_display_driver_32bpp_pixelmap_draw.c:580:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR       *put;
                ^
common/src/gx_display_driver_32bpp_pixelmap_draw.c:775:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR     *put;
              ^
common/src/gx_display_driver_32bpp_pixelmap_draw.c:970:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR       *put;
                ^
common/src/gx_display_driver_32bpp_pixelmap_draw.c:1168:18: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR        *put;
                 ^
common/src/gx_display_driver_32bpp_pixelmap_draw.c:1258:18: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR        *put;
                 ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:259:25: style: Condition 'a' is always false [knownConditionTrueFalse]
                    if (a)
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:213:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:259:25: note: Condition 'a' is always false
                    if (a)
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:264:25: style: Condition 'b' is always false [knownConditionTrueFalse]
                    if (b)
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:214:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:264:25: note: Condition 'b' is always false
                    if (b)
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:269:25: style: Condition 'c' is always false [knownConditionTrueFalse]
                    if (c)
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:215:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:269:25: note: Condition 'c' is always false
                    if (c)
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:274:25: style: Condition 'd' is always false [knownConditionTrueFalse]
                    if (d)
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:216:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_display_driver_32bpp_pixelmap_rotate.c:274:25: note: Condition 'd' is always false
                    if (d)
                        ^
common/src/gx_display_driver_32bpp_rotated_block_move.c:80:14: style: The scope of the variable 'height' can be reduced. [variableScope]
int          height;
             ^
common/src/gx_display_driver_32bpp_rotated_canvas_copy.c:78:14: style: The scope of the variable 'read' can be reduced. [variableScope]
ULONG       *read;
             ^
common/src/gx_display_driver_32bpp_rotated_canvas_copy.c:79:14: style: The scope of the variable 'write' can be reduced. [variableScope]
ULONG       *write;
             ^
common/src/gx_display_driver_32bpp_rotated_horizontal_pixelmap_line_draw.c:633:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR          *put;
                   ^
common/src/gx_display_driver_32bpp_rotated_horizontal_pixelmap_line_draw.c:718:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR          *put;
                   ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_blend.c:81:15: style: The scope of the variable 'get' can be reduced. [variableScope]
ULONG        *get;
              ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_blend.c:175:15: style: The scope of the variable 'get' can be reduced. [variableScope]
ULONG        *get;
              ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_blend.c:289:15: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE     *get;
              ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_blend.c:389:15: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE     *get;
              ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:80:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR     *put;
              ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:81:15: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_COLOR     *get;
              ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:181:15: style: The scope of the variable 'get' can be reduced. [variableScope]
ULONG        *get;
              ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:290:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR          *put;
                   ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:672:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR       *put;
                ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:872:15: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE     *get;
              ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:874:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR     *put;
              ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:973:15: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE     *get;
              ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:1076:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR       *put;
                ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:1285:18: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR        *put;
                 ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_draw.c:1394:18: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_COLOR        *put;
                 ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:272:25: style: Condition 'a' is always false [knownConditionTrueFalse]
                    if (a)
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:226:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:272:25: note: Condition 'a' is always false
                    if (a)
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:277:25: style: Condition 'b' is always false [knownConditionTrueFalse]
                    if (b)
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:227:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:277:25: note: Condition 'b' is always false
                    if (b)
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:282:25: style: Condition 'c' is always false [knownConditionTrueFalse]
                    if (c)
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:228:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:282:25: note: Condition 'c' is always false
                    if (c)
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:287:25: style: Condition 'd' is always false [knownConditionTrueFalse]
                    if (d)
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:229:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_display_driver_32bpp_rotated_pixelmap_rotate.c:287:25: note: Condition 'd' is always false
                    if (d)
                        ^
common/src/gx_display_driver_32bpp_rotated_simple_line_draw.c:222:30: style: Variable 'cury' is assigned a value that is never used. [unreadVariable]
                        cury += y_sign;
                             ^
common/src/gx_display_driver_32bpp_rotated_simple_line_draw.c:252:31: style: Variable 'nexty' is assigned a value that is never used. [unreadVariable]
                        nexty -= y_sign;
                              ^
common/src/gx_display_driver_32bpp_rotated_simple_line_draw.c:285:31: style: Variable 'nextx' is assigned a value that is never used. [unreadVariable]
                        nextx -= x_sign;
                              ^
common/src/gx_display_driver_32bpp_rotated_simple_line_draw.c:317:30: style: Variable 'curx' is assigned a value that is never used. [unreadVariable]
                        curx += x_sign;
                             ^
common/src/gx_display_driver_32bpp_simple_line_draw.c:194:30: style: Variable 'cury' is assigned a value that is never used. [unreadVariable]
                        cury += y_sign;
                             ^
common/src/gx_display_driver_32bpp_simple_line_draw.c:224:31: style: Variable 'nexty' is assigned a value that is never used. [unreadVariable]
                        nexty -= y_sign;
                              ^
common/src/gx_display_driver_32bpp_simple_line_draw.c:257:31: style: Variable 'nextx' is assigned a value that is never used. [unreadVariable]
                        nextx -= x_sign;
                              ^
common/src/gx_display_driver_32bpp_simple_line_draw.c:289:30: style: Variable 'curx' is assigned a value that is never used. [unreadVariable]
                        curx += x_sign;
                             ^
common/src/gx_display_driver_32bpp_vertical_pattern_line_draw.c:75:8: style: The scope of the variable 'put' can be reduced. [variableScope]
ULONG *put;
       ^
common/src/gx_display_driver_332rgb_pixel_blend.c:93:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_332rgb_pixelmap_draw.c:83:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_332rgb_pixelmap_draw.c:161:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:410:25: style: Condition '!a' is always true [knownConditionTrueFalse]
                    if (!a)
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:356:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:410:25: note: Condition '!a' is always true
                    if (!a)
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:415:25: style: Condition '!b' is always true [knownConditionTrueFalse]
                    if (!b)
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:357:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:415:25: note: Condition '!b' is always true
                    if (!b)
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:420:25: style: Condition '!c' is always true [knownConditionTrueFalse]
                    if (!c)
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:358:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:420:25: note: Condition '!c' is always true
                    if (!c)
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:425:25: style: Condition '!d' is always true [knownConditionTrueFalse]
                    if (!d)
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:359:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_display_driver_332rgb_pixelmap_rotate.c:425:25: note: Condition '!d' is always true
                    if (!d)
                        ^
common/src/gx_display_driver_4444argb_canvas_blend.c:92:14: style: The scope of the variable 'read' can be reduced. [variableScope]
USHORT      *read;
             ^
common/src/gx_display_driver_4444argb_canvas_blend.c:94:14: style: The scope of the variable 'write' can be reduced. [variableScope]
USHORT      *write;
             ^
common/src/gx_display_driver_4444argb_horizontal_pixelmap_line_draw.c:654:18: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT          *put;
                 ^
common/src/gx_display_driver_4444argb_horizontal_pixelmap_line_draw.c:885:18: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT          *put;
                 ^
common/src/gx_display_driver_4444argb_pixel_blend.c:99:10: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT  *put;
         ^
common/src/gx_display_driver_4444argb_pixelmap_draw.c:172:15: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT       *put;
              ^
common/src/gx_display_driver_4444argb_pixelmap_draw.c:397:19: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT           *put;
                  ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:262:25: style: Condition '!a' is always true [knownConditionTrueFalse]
                    if (!a)
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:208:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:262:25: note: Condition '!a' is always true
                    if (!a)
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:267:25: style: Condition '!b' is always true [knownConditionTrueFalse]
                    if (!b)
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:209:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:267:25: note: Condition '!b' is always true
                    if (!b)
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:272:25: style: Condition '!c' is always true [knownConditionTrueFalse]
                    if (!c)
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:210:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:272:25: note: Condition '!c' is always true
                    if (!c)
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:277:25: style: Condition '!d' is always true [knownConditionTrueFalse]
                    if (!d)
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:211:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:277:25: note: Condition '!d' is always true
                    if (!d)
                        ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:166:10: style: Variable 'yres' is reassigned a value before the old one has been used. [redundantAssignment]
    yres = GX_FIXED_VAL_TO_INT((cy - srcyres) * cosv + (cx - srcxres) * sinv) + xres;
         ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:161:10: note: yres is assigned
    yres = GX_FIXED_VAL_TO_INT(my[idxmaxy] * (srcyres + 2) * cosv + mx[idxmaxy] * (srcxres + 2) * sinv);
         ^
common/src/gx_display_driver_4444argb_pixelmap_rotate.c:166:10: note: yres is overwritten
    yres = GX_FIXED_VAL_TO_INT((cy - srcyres) * cosv + (cx - srcxres) * sinv) + xres;
         ^
common/src/gx_display_driver_4bpp_canvas_copy.c:78:14: style: The scope of the variable 'read' can be reduced. [variableScope]
GX_UBYTE    *read;
             ^
common/src/gx_display_driver_4bpp_canvas_copy.c:79:14: style: The scope of the variable 'write' can be reduced. [variableScope]
GX_UBYTE    *write;
             ^
common/src/gx_display_driver_4bpp_glyph_1bit_draw.c:94:11: style: The scope of the variable 'glyph_data' can be reduced. [variableScope]
GX_UBYTE *glyph_data;
          ^
common/src/gx_display_driver_4bpp_glyph_1bit_draw.c:103:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_4bpp_glyph_4bit_draw.c:84:21: style: The scope of the variable 'glyphdata_get' can be reduced. [variableScope]
GX_UBYTE           *glyphdata_get;
                    ^
common/src/gx_display_driver_4bpp_glyph_4bit_draw.c:88:21: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE           *put;
                    ^
common/src/gx_display_driver_4bpp_grayscale_setup.c:102:64: style: Variable 'display->gx_display_driver_drawing_initiate' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_4bpp_grayscale_setup.c:84:64: note: display->gx_display_driver_drawing_initiate is assigned
    display -> gx_display_driver_drawing_initiate              = GX_NULL;
                                                               ^
common/src/gx_display_driver_4bpp_grayscale_setup.c:102:64: note: display->gx_display_driver_drawing_initiate is overwritten
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_4bpp_grayscale_setup.c:103:64: style: Variable 'display->gx_display_driver_drawing_complete' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_4bpp_grayscale_setup.c:85:64: note: display->gx_display_driver_drawing_complete is assigned
    display -> gx_display_driver_drawing_complete              = GX_NULL;
                                                               ^
common/src/gx_display_driver_4bpp_grayscale_setup.c:103:64: note: display->gx_display_driver_drawing_complete is overwritten
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_4bpp_horizontal_line_draw.c:77:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_4bpp_horizontal_pixelmap_line_draw.c:214:14: style: Redundant initialization for 'pixelmap'. The initialized value is overwritten before it is read. [redundantInitialization]
    pixelmap = info -> pixelmap;
             ^
common/src/gx_display_driver_4bpp_horizontal_pixelmap_line_draw.c:212:26: note: pixelmap is initialized
GX_PIXELMAP    *pixelmap = info -> pixelmap;
                         ^
common/src/gx_display_driver_4bpp_horizontal_pixelmap_line_draw.c:214:14: note: pixelmap is overwritten
    pixelmap = info -> pixelmap;
             ^
common/src/gx_display_driver_4bpp_horizontal_pixelmap_line_draw.c:82:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_4bpp_horizontal_pixelmap_line_draw.c:203:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_4bpp_horizontal_pixelmap_line_draw.c:335:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_4bpp_horizontal_pixelmap_line_draw.c:548:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_4bpp_mouse_capture.c:75:16: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE      *put;
               ^
common/src/gx_display_driver_4bpp_mouse_capture.c:78:16: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE      *get;
               ^
common/src/gx_display_driver_4bpp_mouse_capture.c:79:16: style: The scope of the variable 'map' can be reduced. [variableScope]
GX_PIXELMAP   *map;
               ^
common/src/gx_display_driver_4bpp_mouse_capture.c:85:16: style: The scope of the variable 'canvas' can be reduced. [variableScope]
GX_CANVAS     *canvas;
               ^
common/src/gx_display_driver_4bpp_mouse_capture.c:83:24: style: Variable 'putmask' is assigned a value that is never used. [unreadVariable]
GX_UBYTE       putmask = 0xf0;
                       ^
common/src/gx_display_driver_4bpp_mouse_restore.c:76:13: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE   *put;
            ^
common/src/gx_display_driver_4bpp_mouse_restore.c:77:13: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE   *get;
            ^
common/src/gx_display_driver_4bpp_mouse_restore.c:82:13: style: The scope of the variable 'canvas' can be reduced. [variableScope]
GX_CANVAS  *canvas;
            ^
common/src/gx_display_driver_4bpp_pixelmap_draw.c:79:27: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE                 *put;
                          ^
common/src/gx_display_driver_4bpp_pixelmap_draw.c:191:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_4bpp_pixelmap_draw.c:316:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_4bpp_pixelmap_draw.c:522:21: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE           *put;
                    ^
common/src/gx_display_driver_4bpp_pixelmap_draw.c:372:11: style: Variable 'count' is assigned a value that is never used. [unreadVariable]
    count = 0;
          ^
common/src/gx_display_driver_4bpp_pixelmap_rotate.c:85:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE     *put;
              ^
common/src/gx_display_driver_4bpp_pixelmap_rotate.c:245:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE     *put;
              ^
common/src/gx_display_driver_4bpp_simple_line_draw.c:113:21: style: Variable 'color' is assigned a value that is never used. [unreadVariable]
GX_UBYTE      color = linecolor;
                    ^
common/src/gx_display_driver_4bpp_simple_line_draw.c:195:30: style: Variable 'cury' is assigned a value that is never used. [unreadVariable]
                        cury += y_sign;
                             ^
common/src/gx_display_driver_4bpp_simple_line_draw.c:237:31: style: Variable 'nexty' is assigned a value that is never used. [unreadVariable]
                        nexty -= y_sign;
                              ^
common/src/gx_display_driver_4bpp_simple_line_draw.c:282:31: style: Variable 'nextx' is assigned a value that is never used. [unreadVariable]
                        nextx -= x_sign;
                              ^
common/src/gx_display_driver_4bpp_simple_line_draw.c:326:30: style: Variable 'curx' is assigned a value that is never used. [unreadVariable]
                        curx += x_sign;
                             ^
common/src/gx_display_driver_4bpp_vertical_line_draw.c:76:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_4bpp_vertical_pattern_line_draw.c:78:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_565rgb_canvas_blend.c:93:14: style: The scope of the variable 'read' can be reduced. [variableScope]
USHORT      *read;
             ^
common/src/gx_display_driver_565rgb_canvas_blend.c:95:14: style: The scope of the variable 'write' can be reduced. [variableScope]
USHORT      *write;
             ^
common/src/gx_display_driver_565rgb_horizontal_pixelmap_line_draw.c:594:9: style: Variable 'get' is reassigned a value before the old one has been used. [redundantAssignment]
    get = (GX_CONST USHORT *)info -> current_pixel_ptr;
        ^
common/src/gx_display_driver_565rgb_horizontal_pixelmap_line_draw.c:585:22: note: get is assigned
GX_CONST USHORT *get = GX_NULL;
                     ^
common/src/gx_display_driver_565rgb_horizontal_pixelmap_line_draw.c:594:9: note: get is overwritten
    get = (GX_CONST USHORT *)info -> current_pixel_ptr;
        ^
common/src/gx_display_driver_565rgb_horizontal_pixelmap_line_draw.c:586:18: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT          *put;
                 ^
common/src/gx_display_driver_565rgb_horizontal_pixelmap_line_draw.c:773:18: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT          *put;
                 ^
common/src/gx_display_driver_565rgb_pixel_blend.c:95:10: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT  *put;
         ^
common/src/gx_display_driver_565rgb_rotated_canvas_blend.c:91:14: style: The scope of the variable 'read' can be reduced. [variableScope]
USHORT      *read;
             ^
common/src/gx_display_driver_565rgb_rotated_canvas_blend.c:93:14: style: The scope of the variable 'write' can be reduced. [variableScope]
USHORT      *write;
             ^
common/src/gx_display_driver_565rgb_rotated_horizontal_pixelmap_line_draw.c:563:9: style: Variable 'get' is reassigned a value before the old one has been used. [redundantAssignment]
    get = (GX_CONST USHORT *)info -> current_pixel_ptr;
        ^
common/src/gx_display_driver_565rgb_rotated_horizontal_pixelmap_line_draw.c:554:22: note: get is assigned
GX_CONST USHORT *get = GX_NULL;
                     ^
common/src/gx_display_driver_565rgb_rotated_horizontal_pixelmap_line_draw.c:563:9: note: get is overwritten
    get = (GX_CONST USHORT *)info -> current_pixel_ptr;
        ^
common/src/gx_display_driver_565rgb_rotated_horizontal_pixelmap_line_draw.c:555:18: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT          *put;
                 ^
common/src/gx_display_driver_565rgb_rotated_horizontal_pixelmap_line_draw.c:733:18: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT          *put;
                 ^
common/src/gx_display_driver_565rgb_rotated_pixel_blend.c:93:10: style: The scope of the variable 'put' can be reduced. [variableScope]
USHORT  *put;
         ^
common/src/gx_display_driver_565rgb_rotated_setup.c:79:64: style: Variable 'display->gx_display_mouse_capture' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_mouse_capture                        = GX_NULL;
                                                               ^
common/src/gx_display_driver_565rgb_rotated_setup.c:77:64: note: display->gx_display_mouse_capture is assigned
    display -> gx_display_mouse_capture                        = GX_NULL;
                                                               ^
common/src/gx_display_driver_565rgb_rotated_setup.c:79:64: note: display->gx_display_mouse_capture is overwritten
    display -> gx_display_mouse_capture                        = GX_NULL;
                                                               ^
common/src/gx_display_driver_565rgb_rotated_setup.c:80:64: style: Variable 'display->gx_display_mouse_restore' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_mouse_restore                        = GX_NULL;
                                                               ^
common/src/gx_display_driver_565rgb_rotated_setup.c:78:64: note: display->gx_display_mouse_restore is assigned
    display -> gx_display_mouse_restore                        = GX_NULL;
                                                               ^
common/src/gx_display_driver_565rgb_rotated_setup.c:80:64: note: display->gx_display_mouse_restore is overwritten
    display -> gx_display_mouse_restore                        = GX_NULL;
                                                               ^
common/src/gx_display_driver_565rgb_setup.c:101:64: style: Variable 'display->gx_display_driver_drawing_initiate' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_565rgb_setup.c:83:64: note: display->gx_display_driver_drawing_initiate is assigned
    display -> gx_display_driver_drawing_initiate              = GX_NULL;
                                                               ^
common/src/gx_display_driver_565rgb_setup.c:101:64: note: display->gx_display_driver_drawing_initiate is overwritten
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_565rgb_setup.c:102:64: style: Variable 'display->gx_display_driver_drawing_complete' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_565rgb_setup.c:84:64: note: display->gx_display_driver_drawing_complete is assigned
    display -> gx_display_driver_drawing_complete              = GX_NULL;
                                                               ^
common/src/gx_display_driver_565rgb_setup.c:102:64: note: display->gx_display_driver_drawing_complete is overwritten
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_8bit_palette_rotated_setup.c:81:41: style: Variable 'display->gx_display_mouse_capture' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_mouse_capture = GX_NULL;
                                        ^
common/src/gx_display_driver_8bit_palette_rotated_setup.c:79:41: note: display->gx_display_mouse_capture is assigned
    display -> gx_display_mouse_capture = GX_NULL;
                                        ^
common/src/gx_display_driver_8bit_palette_rotated_setup.c:81:41: note: display->gx_display_mouse_capture is overwritten
    display -> gx_display_mouse_capture = GX_NULL;
                                        ^
common/src/gx_display_driver_8bit_palette_rotated_setup.c:82:41: style: Variable 'display->gx_display_mouse_restore' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_mouse_restore = GX_NULL;
                                        ^
common/src/gx_display_driver_8bit_palette_rotated_setup.c:80:41: note: display->gx_display_mouse_restore is assigned
    display -> gx_display_mouse_restore = GX_NULL;
                                        ^
common/src/gx_display_driver_8bit_palette_rotated_setup.c:82:41: note: display->gx_display_mouse_restore is overwritten
    display -> gx_display_mouse_restore = GX_NULL;
                                        ^
common/src/gx_display_driver_8bit_palette_setup.c:104:64: style: Variable 'display->gx_display_driver_drawing_initiate' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_8bit_palette_setup.c:86:64: note: display->gx_display_driver_drawing_initiate is assigned
    display -> gx_display_driver_drawing_initiate              = GX_NULL;
                                                               ^
common/src/gx_display_driver_8bit_palette_setup.c:104:64: note: display->gx_display_driver_drawing_initiate is overwritten
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_8bit_palette_setup.c:105:64: style: Variable 'display->gx_display_driver_drawing_complete' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_8bit_palette_setup.c:87:64: note: display->gx_display_driver_drawing_complete is assigned
    display -> gx_display_driver_drawing_complete              = GX_NULL;
                                                               ^
common/src/gx_display_driver_8bit_palette_setup.c:105:64: note: display->gx_display_driver_drawing_complete is overwritten
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_8bpp_block_move.c:85:20: style: Condition 'xshift>0' is always true [knownConditionTrueFalse]
        if (xshift > 0)
                   ^
common/src/gx_display_driver_8bpp_block_move.c:83:9: note: Assuming condition 'xshift' is true
    if (xshift)
        ^
common/src/gx_display_driver_8bpp_block_move.c:85:20: note: Condition 'xshift>0' is always true
        if (xshift > 0)
                   ^
common/src/gx_display_driver_8bpp_block_move.c:81:11: style: The scope of the variable 'height' can be reduced. [variableScope]
int       height;
          ^
common/src/gx_display_driver_8bpp_canvas_copy.c:80:14: style: The scope of the variable 'read' can be reduced. [variableScope]
GX_UBYTE    *read;
             ^
common/src/gx_display_driver_8bpp_canvas_copy.c:81:14: style: The scope of the variable 'write' can be reduced. [variableScope]
GX_UBYTE    *write;
             ^
common/src/gx_display_driver_8bpp_glyph_3bit_draw.c:81:11: style: The scope of the variable 'glyph_data' can be reduced. [variableScope]
GX_UBYTE *glyph_data;
          ^
common/src/gx_display_driver_8bpp_glyph_3bit_draw.c:91:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_8bpp_glyph_3bit_draw.c:171:16: style: Variable 'put' is assigned a value that is never used. [unreadVariable]
            put++;
               ^
common/src/gx_display_driver_8bpp_glyph_4bit_draw.c:81:11: style: The scope of the variable 'glyph_data' can be reduced. [variableScope]
GX_UBYTE *glyph_data;
          ^
common/src/gx_display_driver_8bpp_glyph_4bit_draw.c:91:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_8bpp_glyph_4bit_draw.c:158:16: style: Variable 'put' is assigned a value that is never used. [unreadVariable]
            put++;
               ^
common/src/gx_display_driver_8bpp_horizontal_pixelmap_line_draw.c:565:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_horizontal_pixelmap_line_draw.c:650:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_horizontal_pixelmap_line_draw.c:783:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_horizontal_pixelmap_line_draw.c:875:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_mouse_capture.c:75:16: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE      *put;
               ^
common/src/gx_display_driver_8bpp_mouse_capture.c:77:16: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE      *get;
               ^
common/src/gx_display_driver_8bpp_mouse_capture.c:78:16: style: The scope of the variable 'map' can be reduced. [variableScope]
GX_PIXELMAP   *map;
               ^
common/src/gx_display_driver_8bpp_mouse_capture.c:81:16: style: The scope of the variable 'canvas' can be reduced. [variableScope]
GX_CANVAS     *canvas;
               ^
common/src/gx_display_driver_8bpp_mouse_restore.c:76:16: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE      *put;
               ^
common/src/gx_display_driver_8bpp_mouse_restore.c:77:16: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE      *get;
               ^
common/src/gx_display_driver_8bpp_mouse_restore.c:78:16: style: The scope of the variable 'canvas' can be reduced. [variableScope]
GX_CANVAS     *canvas;
               ^
common/src/gx_display_driver_8bpp_pixelmap_blend.c:82:15: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE     *get;
              ^
common/src/gx_display_driver_8bpp_pixelmap_blend.c:162:15: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE     *get;
              ^
common/src/gx_display_driver_8bpp_pixelmap_blend.c:164:15: style: The scope of the variable 'getalpha' can be reduced. [variableScope]
GX_UBYTE     *getalpha;
              ^
common/src/gx_display_driver_8bpp_pixelmap_draw.c:78:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_8bpp_pixelmap_draw.c:162:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_8bpp_pixelmap_draw.c:328:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_8bpp_pixelmap_draw.c:420:17: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE       *put;
                ^
common/src/gx_display_driver_8bpp_pixelmap_rotate.c:85:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE     *put;
              ^
common/src/gx_display_driver_8bpp_pixelmap_rotate.c:215:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE     *put;
              ^
common/src/gx_display_driver_8bpp_rotated_block_move.c:79:14: style: The scope of the variable 'height' can be reduced. [variableScope]
int          height;
             ^
common/src/gx_display_driver_8bpp_rotated_canvas_copy.c:78:14: style: The scope of the variable 'read' can be reduced. [variableScope]
GX_UBYTE    *read;
             ^
common/src/gx_display_driver_8bpp_rotated_canvas_copy.c:79:14: style: The scope of the variable 'write' can be reduced. [variableScope]
GX_UBYTE    *write;
             ^
common/src/gx_display_driver_8bpp_rotated_glyph_1bit_draw.c:96:11: style: The scope of the variable 'glyph_data' can be reduced. [variableScope]
GX_UBYTE *glyph_data;
          ^
common/src/gx_display_driver_8bpp_rotated_glyph_1bit_draw.c:105:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_8bpp_rotated_glyph_3bit_draw.c:79:11: style: The scope of the variable 'glyph_data' can be reduced. [variableScope]
GX_UBYTE *glyph_data;
          ^
common/src/gx_display_driver_8bpp_rotated_glyph_3bit_draw.c:89:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_8bpp_rotated_glyph_3bit_draw.c:191:16: style: Variable 'put' is assigned a value that is never used. [unreadVariable]
            put++;
               ^
common/src/gx_display_driver_8bpp_rotated_glyph_4bit_draw.c:79:11: style: The scope of the variable 'glyph_data' can be reduced. [variableScope]
GX_UBYTE *glyph_data;
          ^
common/src/gx_display_driver_8bpp_rotated_glyph_4bit_draw.c:89:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_8bpp_rotated_glyph_4bit_draw.c:177:16: style: Variable 'put' is assigned a value that is never used. [unreadVariable]
            put++;
               ^
common/src/gx_display_driver_8bpp_rotated_horizontal_line_draw.c:74:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_8bpp_rotated_horizontal_pixelmap_line_draw.c:77:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_rotated_horizontal_pixelmap_line_draw.c:162:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_rotated_horizontal_pixelmap_line_draw.c:295:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_rotated_horizontal_pixelmap_line_draw.c:386:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_rotated_pixelmap_draw.c:75:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_rotated_pixelmap_draw.c:172:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_rotated_pixelmap_draw.c:333:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_rotated_pixelmap_draw.c:438:20: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE          *put;
                   ^
common/src/gx_display_driver_8bpp_rotated_pixelmap_draw.c:175:26: style: Variable 'pixel' is assigned a value that is never used. [unreadVariable]
GX_UBYTE           pixel = 0;
                         ^
common/src/gx_display_driver_8bpp_rotated_pixelmap_draw.c:441:26: style: Variable 'pixel' is assigned a value that is never used. [unreadVariable]
GX_UBYTE           pixel = 0;
                         ^
common/src/gx_display_driver_8bpp_rotated_pixelmap_rotate.c:80:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE     *put;
              ^
common/src/gx_display_driver_8bpp_rotated_pixelmap_rotate.c:241:15: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE     *put;
              ^
common/src/gx_display_driver_8bpp_rotated_simple_line_draw.c:108:10: style: Redundant initialization for 'clip'. The initialized value is overwritten before it is read. [redundantInitialization]
    clip = context -> gx_draw_context_clip;
         ^
common/src/gx_display_driver_8bpp_rotated_simple_line_draw.c:102:20: note: clip is initialized
GX_RECTANGLE *clip = context -> gx_draw_context_clip;
                   ^
common/src/gx_display_driver_8bpp_rotated_simple_line_draw.c:108:10: note: clip is overwritten
    clip = context -> gx_draw_context_clip;
         ^
common/src/gx_display_driver_8bpp_rotated_simple_line_draw.c:210:30: style: Variable 'cury' is assigned a value that is never used. [unreadVariable]
                        cury += y_sign;
                             ^
common/src/gx_display_driver_8bpp_rotated_simple_line_draw.c:240:31: style: Variable 'nexty' is assigned a value that is never used. [unreadVariable]
                        nexty -= y_sign;
                              ^
common/src/gx_display_driver_8bpp_rotated_simple_line_draw.c:273:31: style: Variable 'nextx' is assigned a value that is never used. [unreadVariable]
                        nextx -= x_sign;
                              ^
common/src/gx_display_driver_8bpp_rotated_simple_line_draw.c:305:30: style: Variable 'curx' is assigned a value that is never used. [unreadVariable]
                        curx += x_sign;
                             ^
common/src/gx_display_driver_8bpp_rotated_vertical_line_draw.c:74:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_8bpp_rotated_vertical_pattern_line_draw.c:74:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_8bpp_simple_line_draw.c:207:30: style: Variable 'cury' is assigned a value that is never used. [unreadVariable]
                        cury += y_sign;
                             ^
common/src/gx_display_driver_8bpp_simple_line_draw.c:237:31: style: Variable 'nexty' is assigned a value that is never used. [unreadVariable]
                        nexty -= y_sign;
                              ^
common/src/gx_display_driver_8bpp_simple_line_draw.c:270:31: style: Variable 'nextx' is assigned a value that is never used. [unreadVariable]
                        nextx -= x_sign;
                              ^
common/src/gx_display_driver_8bpp_simple_line_draw.c:302:30: style: Variable 'curx' is assigned a value that is never used. [unreadVariable]
                        curx += x_sign;
                             ^
common/src/gx_display_driver_8bpp_vertical_pattern_line_draw.c:75:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_display_driver_generic_circle_fill.c:195:11: style: Variable 'error' is assigned a value that is never used. [unreadVariable]
    error = 0;
          ^
common/src/gx_display_driver_generic_drawing_complete.c:75:17: style: The scope of the variable 'mouse_canvas' can be reduced. [variableScope]
GX_CANVAS      *mouse_canvas;
                ^
common/src/gx_display_driver_generic_drawing_initiate.c:76:17: style: The scope of the variable 'mouse_canvas' can be reduced. [variableScope]
GX_CANVAS      *mouse_canvas;
                ^
common/src/gx_display_driver_generic_ellipse_fill.c:211:11: style: Variable 'error' is assigned a value that is never used. [unreadVariable]
    error = 0;
          ^
common/src/gx_display_driver_generic_ellipse_fill.c:224:21: style: Variable 'realval' is assigned a value that is never used. [unreadVariable]
            realval = bb - bb * x * x / aa;
                    ^
common/src/gx_display_driver_generic_ellipse_fill.c:255:19: style: Variable 'error' is assigned a value that is never used. [unreadVariable]
            error -= 255;
                  ^
common/src/gx_display_driver_generic_mouse_draw.c:75:18: style: The scope of the variable 'map' can be reduced. [variableScope]
GX_PIXELMAP     *map;
                 ^
common/src/gx_display_driver_generic_rotated_arc_fill.c:182:15: style: Variable 'skip_line' is assigned a value that is never used. [unreadVariable]
    skip_line = 0;
              ^
common/src/gx_display_driver_generic_rotated_circle_fill.c:163:11: style: Variable 'error' is assigned a value that is never used. [unreadVariable]
    error = 0;
          ^
common/src/gx_display_driver_generic_rotated_ellipse_fill.c:179:11: style: Variable 'error' is assigned a value that is never used. [unreadVariable]
    error = 0;
          ^
common/src/gx_display_driver_generic_rotated_ellipse_fill.c:193:19: style: Variable 'error' is assigned a value that is never used. [unreadVariable]
            error = (y << 8) - (INT)(_gx_utility_math_sqrt((UINT)(realval << 10)) << 3);
                  ^
common/src/gx_display_driver_generic_wide_line_points_calculate.c:103:18: style: The scope of the variable 'aliased_line' can be reduced. [variableScope]
VOID           (*aliased_line)(GX_DRAW_CONTEXT *context, GX_FIXED_VAL x1, GX_FIXED_VAL y1, GX_FIXED_VAL x2, GX_FIXED_VAL y2);
                 ^
common/src/gx_display_driver_monochrome_setup.c:100:64: style: Variable 'display->gx_display_driver_drawing_initiate' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_monochrome_setup.c:82:64: note: display->gx_display_driver_drawing_initiate is assigned
    display -> gx_display_driver_drawing_initiate              = GX_NULL;
                                                               ^
common/src/gx_display_driver_monochrome_setup.c:100:64: note: display->gx_display_driver_drawing_initiate is overwritten
    display -> gx_display_driver_drawing_initiate              = _gx_display_driver_generic_drawing_initiate;
                                                               ^
common/src/gx_display_driver_monochrome_setup.c:101:64: style: Variable 'display->gx_display_driver_drawing_complete' is reassigned a value before the old one has been used. [redundantAssignment]
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_driver_monochrome_setup.c:83:64: note: display->gx_display_driver_drawing_complete is assigned
    display -> gx_display_driver_drawing_complete              = GX_NULL;
                                                               ^
common/src/gx_display_driver_monochrome_setup.c:101:64: note: display->gx_display_driver_drawing_complete is overwritten
    display -> gx_display_driver_drawing_complete              = _gx_display_driver_generic_drawing_complete;
                                                               ^
common/src/gx_display_language_table_set.c:81:21: style: The scope of the variable 'root' can be reduced. [variableScope]
GX_WINDOW_ROOT     *root;
                    ^
common/src/gx_drop_list_create.c:108:51: style: Variable 'drop_list->gx_widget_event_process_function' is reassigned a value before the old one has been used. [redundantAssignment]
    drop_list -> gx_widget_event_process_function = (UINT (*)(GX_WIDGET *, GX_EVENT *))_gx_drop_list_event_process;
                                                  ^
common/src/gx_drop_list_create.c:103:51: note: drop_list->gx_widget_event_process_function is assigned
    drop_list -> gx_widget_event_process_function = (UINT (*)(GX_WIDGET *, GX_EVENT *))_gx_drop_list_event_process;
                                                  ^
common/src/gx_drop_list_create.c:108:51: note: drop_list->gx_widget_event_process_function is overwritten
    drop_list -> gx_widget_event_process_function = (UINT (*)(GX_WIDGET *, GX_EVENT *))_gx_drop_list_event_process;
                                                  ^
common/src/gx_generic_scroll_wheel_draw.c:87:14: style: The scope of the variable 'child' can be reduced. [variableScope]
GX_WIDGET   *child;
             ^
common/src/gx_horizontal_list_event_process.c:110:15: style: The scope of the variable 'stackptr' can be reduced. [variableScope]
GX_WIDGET   **stackptr;
              ^
common/src/gx_horizontal_list_event_process.c:111:15: style: The scope of the variable 'stacktop' can be reduced. [variableScope]
GX_WIDGET   **stacktop;
              ^
common/src/gx_horizontal_list_scroll.c:197:15: style: The scope of the variable 'last_child' can be reduced. [variableScope]
GX_WIDGET    *last_child;
              ^
common/src/gx_horizontal_list_scroll_info_get.c:77:21: style: The scope of the variable 'topchild' can be reduced. [variableScope]
GX_WIDGET          *topchild;
                    ^
common/src/gx_image_reader_create.c:98:54: style: Variable 'image_reader->gx_image_reader_putauxdata' is reassigned a value before the old one has been used. [redundantAssignment]
    image_reader -> gx_image_reader_putauxdata       = GX_NULL;
                                                     ^
common/src/gx_image_reader_create.c:89:54: note: image_reader->gx_image_reader_putauxdata is assigned
    image_reader -> gx_image_reader_putauxdata       = GX_NULL;
                                                     ^
common/src/gx_image_reader_create.c:98:54: note: image_reader->gx_image_reader_putauxdata is overwritten
    image_reader -> gx_image_reader_putauxdata       = GX_NULL;
                                                     ^
common/src/gx_image_reader_jpeg_decode.c:912:19: style: The scope of the variable 'output_data' can be reduced. [variableScope]
GX_VALUE         *output_data;
                  ^
common/src/gx_image_reader_jpeg_decode.c:917:19: style: The scope of the variable 'base' can be reduced. [variableScope]
int16_t const    *base;
                  ^
common/src/gx_image_reader_jpeg_decode.c:320:25: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
INT               index = 0;
                        ^
common/src/gx_image_reader_jpeg_decode.c:321:24: style: Variable 'code' is assigned a value that is never used. [unreadVariable]
USHORT            code = 0;
                       ^
common/src/gx_image_reader_jpeg_decode.c:705:17: style: Variable 'i_bits' is assigned a value that is never used. [unreadVariable]
UINT     i_bits = 0;
                ^
common/src/gx_image_reader_pixel_read_callback_set.c:132:11: style: The scope of the variable 'pal' can be reduced. [variableScope]
GX_COLOR *pal;
          ^
common/src/gx_image_reader_pixel_read_callback_set.c:228:11: style: The scope of the variable 'pal' can be reduced. [variableScope]
GX_COLOR *pal;
          ^
common/src/gx_image_reader_pixel_read_callback_set.c:325:11: style: The scope of the variable 'pal' can be reduced. [variableScope]
GX_COLOR *pal;
          ^
common/src/gx_image_reader_pixel_read_callback_set.c:420:11: style: The scope of the variable 'palette' can be reduced. [variableScope]
GX_COLOR *palette;
          ^
common/src/gx_image_reader_pixel_read_callback_set.c:1078:11: style: The scope of the variable 'pAlpha' can be reduced. [variableScope]
GX_UBYTE *pAlpha;
          ^
common/src/gx_image_reader_pixel_read_callback_set.c:1147:11: style: The scope of the variable 'pAlpha' can be reduced. [variableScope]
GX_UBYTE *pAlpha;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:77:11: style: The scope of the variable 'palpha' can be reduced. [variableScope]
GX_UBYTE *palpha;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:134:11: style: The scope of the variable 'pLine' can be reduced. [variableScope]
GX_UBYTE *pLine;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:201:11: style: The scope of the variable 'pLine' can be reduced. [variableScope]
GX_COLOR *pLine;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:259:11: style: The scope of the variable 'pLine' can be reduced. [variableScope]
GX_COLOR *pLine;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:325:11: style: The scope of the variable 'pLine' can be reduced. [variableScope]
GX_COLOR *pLine;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:384:11: style: The scope of the variable 'pLine' can be reduced. [variableScope]
USHORT   *pLine;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:385:11: style: The scope of the variable 'pAlpha' can be reduced. [variableScope]
GX_UBYTE *pAlpha;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:466:11: style: The scope of the variable 'pAlpha' can be reduced. [variableScope]
GX_UBYTE *pAlpha;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:534:11: style: The scope of the variable 'pLine' can be reduced. [variableScope]
USHORT   *pLine;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:535:11: style: The scope of the variable 'pAlpha' can be reduced. [variableScope]
GX_UBYTE *pAlpha;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:614:11: style: The scope of the variable 'pLine' can be reduced. [variableScope]
USHORT   *pLine;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:615:11: style: The scope of the variable 'pAlpha' can be reduced. [variableScope]
GX_UBYTE *pAlpha;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:697:11: style: The scope of the variable 'pAlpha' can be reduced. [variableScope]
GX_UBYTE *pAlpha;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:765:9: style: The scope of the variable 'pLine' can be reduced. [variableScope]
USHORT *pLine;
        ^
common/src/gx_image_reader_pixel_write_callback_set.c:830:9: style: The scope of the variable 'pLine' can be reduced. [variableScope]
USHORT *pLine;
        ^
common/src/gx_image_reader_pixel_write_callback_set.c:895:11: style: The scope of the variable 'pLine' can be reduced. [variableScope]
GX_UBYTE *pLine;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:975:11: style: The scope of the variable 'pLine' can be reduced. [variableScope]
GX_UBYTE *pLine;
          ^
common/src/gx_image_reader_pixel_write_callback_set.c:976:11: style: The scope of the variable 'pAuxData' can be reduced. [variableScope]
GX_UBYTE *pAuxData;
          ^
common/src/gx_line_chart_data_draw.c:98:34: style: Variable 'chart_bound.gx_rectangle_top' is assigned a value that is never used. [unreadVariable]
    chart_bound.gx_rectangle_top = (GX_VALUE)(chart_bound.gx_rectangle_top + chart_info -> gx_line_chart_top_margin);
                                 ^
common/src/gx_multi_line_text_button_text_draw.c:95:16: style: The scope of the variable 'line' can be reduced. [variableScope]
GX_STRING     *line;
               ^
common/src/gx_multi_line_text_input_char_insert.c:202:15: style: Variable 'glyph_len' is assigned a value that is never used. [unreadVariable]
    glyph_len = 1;
              ^
common/src/gx_multi_line_text_input_cursor_pos_calculate.c:256:33: style: Variable 'string.gx_string_length' is reassigned a value before the old one has been used. [redundantAssignment]
        string.gx_string_length = glyph_len;
                                ^
common/src/gx_multi_line_text_input_cursor_pos_calculate.c:244:33: note: string.gx_string_length is assigned
        string.gx_string_length = end_index - index;
                                ^
common/src/gx_multi_line_text_input_cursor_pos_calculate.c:256:33: note: string.gx_string_length is overwritten
        string.gx_string_length = glyph_len;
                                ^
common/src/gx_multi_line_text_input_draw.c:101:23: style: The scope of the variable 'canvas' can be reduced. [variableScope]
GX_CANVAS            *canvas;
                      ^
common/src/gx_multi_line_text_input_mark_previous.c:116:21: style: Variable 'cursor_line' is assigned a value that is never used. [unreadVariable]
        cursor_line = (UINT)(cursor_line - text_input -> gx_multi_line_text_view_first_cache_line);
                    ^
common/src/gx_multi_line_text_input_text_select.c:112:20: style: Variable 'start_mark' is assigned a value that is never used. [unreadVariable]
        start_mark = input -> gx_multi_line_text_input_start_mark;
                   ^
common/src/gx_multi_line_text_input_text_set.c:285:65: style: Variable 'text_input->gx_multi_line_text_view_text.gx_string_length' is reassigned a value before the old one has been used. [redundantAssignment]
    text_input -> gx_multi_line_text_view_text.gx_string_length = copy_size;
                                                                ^
common/src/gx_multi_line_text_input_text_set.c:276:69: note: text_input->gx_multi_line_text_view_text.gx_string_length is assigned
        text_input -> gx_multi_line_text_view_text.gx_string_length = copy_size;
                                                                    ^
common/src/gx_multi_line_text_input_text_set.c:285:65: note: text_input->gx_multi_line_text_view_text.gx_string_length is overwritten
    text_input -> gx_multi_line_text_view_text.gx_string_length = copy_size;
                                                                ^
common/src/gx_multi_line_text_view_display_info_get.c:93:25: style: Variable 'current_index' is assigned a value that is never used. [unreadVariable]
UINT      current_index = start_index;
                        ^
common/src/gx_multi_line_text_view_display_info_get.c:166:27: style: Variable 'current_index' is assigned a value that is never used. [unreadVariable]
            current_index += glyph_len;
                          ^
common/src/gx_radial_slider_event_process.c:295:24: style: The scope of the variable 'point' can be reduced. [variableScope]
GX_POINT              *point;
                       ^
common/src/gx_rich_text_view_tag_enter.c:216:34: style: Variable 'string.gx_string_ptr' is assigned a value that is never used. [unreadVariable]
            string.gx_string_ptr += 3;
                                 ^
common/src/gx_rich_text_view_tag_enter.c:237:34: style: Variable 'string.gx_string_ptr' is assigned a value that is never used. [unreadVariable]
            string.gx_string_ptr += 3;
                                 ^
common/src/gx_rich_text_view_tag_enter.c:258:34: style: Variable 'string.gx_string_ptr' is assigned a value that is never used. [unreadVariable]
            string.gx_string_ptr += 3;
                                 ^
common/src/gx_screen_stack_pop.c:74:12: style: The scope of the variable 'screen' can be reduced. [variableScope]
GX_WIDGET *screen;
           ^
common/src/gx_screen_stack_pop.c:75:12: style: The scope of the variable 'parent' can be reduced. [variableScope]
GX_WIDGET *parent;
           ^
common/src/gx_scroll_wheel_gradient_create.c:85:13: style: The scope of the variable 'display' can be reduced. [variableScope]
GX_DISPLAY *display;
            ^
common/src/gx_scroll_wheel_scroll.c:85:17: style: Variable 'y_shift' is assigned a value that is never used. [unreadVariable]
        y_shift = wheel -> gx_scroll_wheel_selected_yshift + shift;
                ^
common/src/gx_scrollbar_reset.c:82:12: style: The scope of the variable 'win' can be reduced. [variableScope]
GX_WINDOW *win;
           ^
common/src/gx_single_line_text_input_mark_previous.c:108:29: style: Variable 'string.gx_string_length' is assigned a value that is never used. [unreadVariable]
    string.gx_string_length = text_input -> gx_single_line_text_input_string_size;
                            ^
common/src/gx_single_line_text_input_right_arrow.c:165:34: style: Variable 'string.gx_string_ptr' is reassigned a value before the old one has been used. [redundantAssignment]
            string.gx_string_ptr = string_buffer + insert_pos;
                                 ^
common/src/gx_single_line_text_input_right_arrow.c:147:34: note: string.gx_string_ptr is assigned
            string.gx_string_ptr = string_buffer + insert_pos;
                                 ^
common/src/gx_single_line_text_input_right_arrow.c:165:34: note: string.gx_string_ptr is overwritten
            string.gx_string_ptr = string_buffer + insert_pos;
                                 ^
common/src/gx_sprite_draw.c:87:18: style: The scope of the variable 'frame' can be reduced. [variableScope]
GX_SPRITE_FRAME *frame;
                 ^
common/src/gx_string_scroll_wheel_text_get.c:79:27: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
UINT               status = GX_SUCCESS;
                          ^
common/src/gx_system_canvas_refresh.c:236:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_system_dirty_list_remove.c:75:16: style: The scope of the variable 'dirty_entry' can be reduced. [variableScope]
GX_DIRTY_AREA *dirty_entry;
               ^
common/src/gx_system_dirty_partial_add.c:107:9: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
        GX_EXIT_CRITICAL
        ^
common/src/gx_system_event_fold.c:128:5: error: There is an unknown macro here somewhere. Configuration is required. If TX_RESTORE is a macro then please configure it. [unknownMacro]
    TX_RESTORE
    ^
common/src/gx_system_event_remove.c:79:11: style: The scope of the variable 'pSrc' can be reduced. [variableScope]
ULONG    *pSrc;
          ^
common/src/gx_system_event_remove.c:80:11: style: Unused variable: pQueue [unusedVariable]
TX_QUEUE *pQueue;
          ^
common/src/gx_system_initialize.c:90:6: style: Unused variable: status [unusedVariable]
UINT status;
     ^
common/src/gx_system_input_capture.c:103:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_system_input_release.c:141:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_system_private_string.c:76:11: style: The scope of the variable 'byte' can be reduced. [variableScope]
GX_UBYTE *byte;
          ^
common/src/gx_system_private_string.c:543:11: style: The scope of the variable 'temp' can be reduced. [variableScope]
GX_UBYTE *temp;
          ^
common/src/gx_system_private_string.c:228:11: style: The scope of the variable 'byte' can be reduced. [variableScope]
GX_UBYTE *byte;
          ^
common/src/gx_system_private_string.c:616:11: style: The scope of the variable 'temp' can be reduced. [variableScope]
GX_UBYTE *temp;
          ^
common/src/gx_system_root_view_add.c:81:18: style: Variable 'win' is assigned a value that is never used. [unreadVariable]
GX_WINDOW   *win = GX_NULL;
                 ^
common/src/gx_system_screen_stack_pop.c:74:12: style: The scope of the variable 'screen' can be reduced. [variableScope]
GX_WIDGET *screen;
           ^
common/src/gx_system_screen_stack_pop.c:75:12: style: The scope of the variable 'parent' can be reduced. [variableScope]
GX_WIDGET *parent;
           ^
common/src/gx_system_thread_entry.c:88:13: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
UINT status = GX_FAILURE;
            ^
common/src/gx_system_thread_entry.c:136:0: information: Skipping configuration 'GX_THREAD_AWAKE' since the value of 'GX_THREAD_AWAKE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            GX_THREAD_AWAKE
^
common/src/gx_system_thread_entry.c:128:0: information: Skipping configuration 'GX_THREAD_SLEEPING' since the value of 'GX_THREAD_SLEEPING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            GX_THREAD_SLEEPING
^
common/src/gx_system_timer_start.c:116:13: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
            GX_EXIT_CRITICAL
            ^
common/src/gx_system_timer_stop.c:84:11: style: Unused variable: search [unusedVariable]
GX_TIMER *search;
          ^
common/src/gx_system_timer_update.c:79:12: style: Unused variable: current_timer [unusedVariable]
GX_TIMER  *current_timer;
           ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:582:25: style: Condition '!a' is always true [knownConditionTrueFalse]
                    if (!a)
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:528:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:582:25: note: Condition '!a' is always true
                    if (!a)
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:587:25: style: Condition '!b' is always true [knownConditionTrueFalse]
                    if (!b)
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:529:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:587:25: note: Condition '!b' is always true
                    if (!b)
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:592:25: style: Condition '!c' is always true [knownConditionTrueFalse]
                    if (!c)
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:530:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:592:25: note: Condition '!c' is always true
                    if (!c)
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:597:25: style: Condition '!d' is always true [knownConditionTrueFalse]
                    if (!d)
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:531:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_utility_1555xrgb_pixelmap_rotate.c:597:25: note: Condition '!d' is always true
                    if (!d)
                        ^
common/src/gx_utility_1bpp_pixelmap_resize.c:83:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_utility_1bpp_pixelmap_resize.c:213:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_utility_1bpp_pixelmap_rotate.c:85:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_utility_32argb_pixelmap_rotate.c:260:25: style: Condition 'a' is always false [knownConditionTrueFalse]
                    if (a)
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:214:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:260:25: note: Condition 'a' is always false
                    if (a)
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:265:25: style: Condition 'b' is always false [knownConditionTrueFalse]
                    if (b)
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:215:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:265:25: note: Condition 'b' is always false
                    if (b)
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:270:25: style: Condition 'c' is always false [knownConditionTrueFalse]
                    if (c)
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:216:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:270:25: note: Condition 'c' is always false
                    if (c)
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:275:25: style: Condition 'd' is always false [knownConditionTrueFalse]
                    if (d)
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:217:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_utility_32argb_pixelmap_rotate.c:275:25: note: Condition 'd' is always false
                    if (d)
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:573:25: style: Condition '!a' is always true [knownConditionTrueFalse]
                    if (!a)
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:519:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:573:25: note: Condition '!a' is always true
                    if (!a)
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:578:25: style: Condition '!b' is always true [knownConditionTrueFalse]
                    if (!b)
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:520:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:578:25: note: Condition '!b' is always true
                    if (!b)
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:583:25: style: Condition '!c' is always true [knownConditionTrueFalse]
                    if (!c)
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:521:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:583:25: note: Condition '!c' is always true
                    if (!c)
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:588:25: style: Condition '!d' is always true [knownConditionTrueFalse]
                    if (!d)
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:522:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_utility_332rgb_pixelmap_rotate.c:588:25: note: Condition '!d' is always true
                    if (!d)
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:274:25: style: Condition '!a' is always true [knownConditionTrueFalse]
                    if (!a)
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:220:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:274:25: note: Condition '!a' is always true
                    if (!a)
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:279:25: style: Condition '!b' is always true [knownConditionTrueFalse]
                    if (!b)
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:221:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:279:25: note: Condition '!b' is always true
                    if (!b)
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:284:25: style: Condition '!c' is always true [knownConditionTrueFalse]
                    if (!c)
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:222:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:284:25: note: Condition '!c' is always true
                    if (!c)
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:289:25: style: Condition '!d' is always true [knownConditionTrueFalse]
                    if (!d)
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:223:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_utility_4444argb_pixelmap_rotate.c:289:25: note: Condition '!d' is always true
                    if (!d)
                        ^
common/src/gx_utility_4bpp_pixelmap_resize.c:84:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_utility_4bpp_pixelmap_resize.c:216:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_utility_4bpp_pixelmap_resize.c:218:11: style: The scope of the variable 'putaux' can be reduced. [variableScope]
GX_UBYTE *putaux;
          ^
common/src/gx_utility_4bpp_pixelmap_rotate.c:85:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_utility_4bpp_pixelmap_rotate.c:105:11: style: The scope of the variable 'putaux' can be reduced. [variableScope]
GX_UBYTE *putaux;
          ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:579:25: style: Condition '!a' is always true [knownConditionTrueFalse]
                    if (!a)
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:525:25: note: Assignment 'a=0', assigned value is 0
                    a = 0;
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:579:25: note: Condition '!a' is always true
                    if (!a)
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:584:25: style: Condition '!b' is always true [knownConditionTrueFalse]
                    if (!b)
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:526:25: note: Assignment 'b=0', assigned value is 0
                    b = 0;
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:584:25: note: Condition '!b' is always true
                    if (!b)
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:589:25: style: Condition '!c' is always true [knownConditionTrueFalse]
                    if (!c)
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:527:25: note: Assignment 'c=0', assigned value is 0
                    c = 0;
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:589:25: note: Condition '!c' is always true
                    if (!c)
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:594:25: style: Condition '!d' is always true [knownConditionTrueFalse]
                    if (!d)
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:528:25: note: Assignment 'd=0', assigned value is 0
                    d = 0;
                        ^
common/src/gx_utility_565rgb_pixelmap_rotate.c:594:25: note: Condition '!d' is always true
                    if (!d)
                        ^
common/src/gx_utility_8bpp_pixelmap_rotate.c:85:11: style: The scope of the variable 'put' can be reduced. [variableScope]
GX_UBYTE *put;
          ^
common/src/gx_utility_bidi_paragraph_reorder.c:1752:29: warning: The address of local variable 'bracket_pair' might be accessed at non-zero index. [objectIndex]
            if (bracket_pair[run_index] > bracket_pair[text_index])
                            ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Address of variable taken here.
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Calling function '_gx_utility_bidi_bracket_pair_search', 3rd argument '&bracket_pair' value is lifetime=bracket_pair
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1752:29: note: The address of local variable 'bracket_pair' might be accessed at non-zero index.
            if (bracket_pair[run_index] > bracket_pair[text_index])
                            ^
common/src/gx_utility_bidi_paragraph_reorder.c:1754:36: warning: The address of local variable 'bracket_pair' might be accessed at non-zero index. [objectIndex]
                temp = bracket_pair[run_index];
                                   ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Address of variable taken here.
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Calling function '_gx_utility_bidi_bracket_pair_search', 3rd argument '&bracket_pair' value is lifetime=bracket_pair
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1754:36: note: The address of local variable 'bracket_pair' might be accessed at non-zero index.
                temp = bracket_pair[run_index];
                                   ^
common/src/gx_utility_bidi_paragraph_reorder.c:1755:29: warning: The address of local variable 'bracket_pair' might be accessed at non-zero index. [objectIndex]
                bracket_pair[run_index] = bracket_pair[text_index];
                            ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Address of variable taken here.
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Calling function '_gx_utility_bidi_bracket_pair_search', 3rd argument '&bracket_pair' value is lifetime=bracket_pair
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1755:29: note: The address of local variable 'bracket_pair' might be accessed at non-zero index.
                bracket_pair[run_index] = bracket_pair[text_index];
                            ^
common/src/gx_utility_bidi_paragraph_reorder.c:1756:29: warning: The address of local variable 'bracket_pair' might be accessed at non-zero index. [objectIndex]
                bracket_pair[text_index] = temp;
                            ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Address of variable taken here.
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Calling function '_gx_utility_bidi_bracket_pair_search', 3rd argument '&bracket_pair' value is lifetime=bracket_pair
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1756:29: note: The address of local variable 'bracket_pair' might be accessed at non-zero index.
                bracket_pair[text_index] = temp;
                            ^
common/src/gx_utility_bidi_paragraph_reorder.c:1758:36: warning: The address of local variable 'bracket_pair' might be accessed at non-zero index. [objectIndex]
                temp = bracket_pair[run_index + 1];
                                   ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Address of variable taken here.
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Calling function '_gx_utility_bidi_bracket_pair_search', 3rd argument '&bracket_pair' value is lifetime=bracket_pair
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1758:36: note: The address of local variable 'bracket_pair' might be accessed at non-zero index.
                temp = bracket_pair[run_index + 1];
                                   ^
common/src/gx_utility_bidi_paragraph_reorder.c:1759:29: warning: The address of local variable 'bracket_pair' might be accessed at non-zero index. [objectIndex]
                bracket_pair[run_index + 1] = bracket_pair[text_index + 1];
                            ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Address of variable taken here.
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Calling function '_gx_utility_bidi_bracket_pair_search', 3rd argument '&bracket_pair' value is lifetime=bracket_pair
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1759:29: note: The address of local variable 'bracket_pair' might be accessed at non-zero index.
                bracket_pair[run_index + 1] = bracket_pair[text_index + 1];
                            ^
common/src/gx_utility_bidi_paragraph_reorder.c:1760:29: warning: The address of local variable 'bracket_pair' might be accessed at non-zero index. [objectIndex]
                bracket_pair[text_index + 1] = temp;
                            ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Address of variable taken here.
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1840:67: note: Calling function '_gx_utility_bidi_bracket_pair_search', 3rd argument '&bracket_pair' value is lifetime=bracket_pair
    status = _gx_utility_bidi_bracket_pair_search(context, entry, &bracket_pair, &bracket_pair_count);
                                                                  ^
common/src/gx_utility_bidi_paragraph_reorder.c:1760:29: note: The address of local variable 'bracket_pair' might be accessed at non-zero index.
                bracket_pair[text_index + 1] = temp;
                            ^
common/src/gx_utility_bidi_paragraph_reorder.c:916:15: style: The scope of the variable 'unit' can be reduced. [variableScope]
GX_BIDI_UNIT *unit;
              ^
common/src/gx_utility_bidi_paragraph_reorder.c:1054:22: style: The scope of the variable 'unit' can be reduced. [variableScope]
GX_BIDI_UNIT        *unit;
                     ^
common/src/gx_utility_bidi_paragraph_reorder.c:1254:15: style: The scope of the variable 'unit' can be reduced. [variableScope]
GX_BIDI_UNIT *unit;
              ^
common/src/gx_utility_bidi_paragraph_reorder.c:1427:15: style: The scope of the variable 'unit' can be reduced. [variableScope]
GX_BIDI_UNIT *unit;
              ^
common/src/gx_utility_bidi_paragraph_reorder.c:1514:15: style: The scope of the variable 'unit' can be reduced. [variableScope]
GX_BIDI_UNIT *unit;
              ^
common/src/gx_utility_bidi_paragraph_reorder.c:1581:15: style: The scope of the variable 'unit' can be reduced. [variableScope]
GX_BIDI_UNIT *unit;
              ^
common/src/gx_utility_bidi_paragraph_reorder.c:2154:15: style: The scope of the variable 'unit' can be reduced. [variableScope]
GX_BIDI_UNIT *unit;
              ^
common/src/gx_utility_bidi_paragraph_reorder.c:2233:15: style: The scope of the variable 'unit' can be reduced. [variableScope]
GX_BIDI_UNIT *unit;
              ^
common/src/gx_utility_bidi_paragraph_reorder.c:2448:15: style: The scope of the variable 'unit' can be reduced. [variableScope]
GX_BIDI_UNIT *unit;
              ^
common/src/gx_utility_canvas_to_bmp.c:342:11: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_COLOR *get;
          ^
common/src/gx_utility_canvas_to_bmp.c:406:9: style: The scope of the variable 'get' can be reduced. [variableScope]
USHORT *get;
        ^
common/src/gx_utility_canvas_to_bmp.c:477:11: style: The scope of the variable 'get' can be reduced. [variableScope]
GX_UBYTE *get;
          ^
common/src/gx_utility_string_to_alphamap.c:307:11: style: The scope of the variable 'read_data' can be reduced. [variableScope]
GX_UBYTE *read_data;
          ^
common/src/gx_utility_string_to_alphamap.c:309:11: style: The scope of the variable 'write_data' can be reduced. [variableScope]
GX_UBYTE *write_data;
          ^
common/src/gx_utility_string_to_alphamap.c:411:11: style: The scope of the variable 'read_data' can be reduced. [variableScope]
GX_UBYTE *read_data;
          ^
common/src/gx_utility_string_to_alphamap.c:413:11: style: The scope of the variable 'write_data' can be reduced. [variableScope]
GX_UBYTE *write_data;
          ^
common/src/gx_utility_string_to_alphamap.c:651:11: style: The scope of the variable 'read_data' can be reduced. [variableScope]
GX_UBYTE *read_data;
          ^
common/src/gx_utility_string_to_alphamap.c:653:11: style: The scope of the variable 'write_data' can be reduced. [variableScope]
GX_UBYTE *write_data;
          ^
common/src/gx_utility_string_to_alphamap.c:532:11: style: The scope of the variable 'read_data' can be reduced. [variableScope]
GX_UBYTE *read_data;
          ^
common/src/gx_utility_string_to_alphamap.c:534:11: style: The scope of the variable 'write_data' can be reduced. [variableScope]
GX_UBYTE *write_data;
          ^
common/src/gx_utility_string_to_alphamap.c:819:11: style: The scope of the variable 'read_data' can be reduced. [variableScope]
GX_UBYTE *read_data;
          ^
common/src/gx_utility_string_to_alphamap.c:821:11: style: The scope of the variable 'write_data' can be reduced. [variableScope]
GX_UBYTE *write_data;
          ^
common/src/gx_vertical_list_event_process.c:106:15: style: The scope of the variable 'stackptr' can be reduced. [variableScope]
GX_WIDGET   **stackptr;
              ^
common/src/gx_vertical_list_event_process.c:107:15: style: The scope of the variable 'stacktop' can be reduced. [variableScope]
GX_WIDGET   **stacktop;
              ^
common/src/gx_vertical_list_scroll.c:196:15: style: The scope of the variable 'last_child' can be reduced. [variableScope]
GX_WIDGET    *last_child;
              ^
common/src/gx_vertical_list_scroll_info_get.c:77:12: style: The scope of the variable 'topchild' can be reduced. [variableScope]
GX_WIDGET *topchild;
           ^
common/src/gx_widget_attach.c:92:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_widget_back_attach.c:91:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_widget_block_move.c:136:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_widget_create.c:143:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_widget_delete.c:181:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_widget_detach.c:93:5: error: There is an unknown macro here somewhere. Configuration is required. If GX_EXIT_CRITICAL is a macro then please configure it. [unknownMacro]
    GX_EXIT_CRITICAL
    ^
common/src/gx_widget_focus_next.c:75:12: style: The scope of the variable 'next' can be reduced. [variableScope]
GX_WIDGET *next;
           ^
common/src/gx_widget_focus_previous.c:74:12: style: The scope of the variable 'previous' can be reduced. [variableScope]
GX_WIDGET *previous;
           ^
common/src/gx_widget_hide.c:76:12: style: The scope of the variable 'win' can be reduced. [variableScope]
GX_WINDOW *win;
           ^
common/src/gx_widget_hide.c:77:12: style: The scope of the variable 'next' can be reduced. [variableScope]
GX_WIDGET *next;
           ^
common/src/gx_widget_resize.c:89:17: style: The scope of the variable 'win' can be reduced. [variableScope]
GX_WINDOW      *win;
                ^
common/src/gx_widget_resize.c:90:17: style: The scope of the variable 'root' can be reduced. [variableScope]
GX_WINDOW_ROOT *root;
                ^
common/src/gx_widget_show.c:80:12: style: The scope of the variable 'win' can be reduced. [variableScope]
GX_WINDOW *win;
           ^
common/src/gx_widget_string_get.c:150:13: style: The scope of the variable 'display' can be reduced. [variableScope]
GX_DISPLAY *display;
            ^
common/src/gx_widget_string_get.c:81:13: style: The scope of the variable 'display' can be reduced. [variableScope]
GX_DISPLAY *display;
            ^
common/src/gx_widget_transparent_pixelmap_detect.c:73:14: style: The scope of the variable 'map' can be reduced. [variableScope]
GX_PIXELMAP *map;
             ^
common/src/gx_window_execute.c:76:13: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
UINT status = GX_SUCCESS;
            ^
common/src/gx_window_root_delete.c:76:17: style: The scope of the variable 'previous' can be reduced. [variableScope]
GX_WINDOW_ROOT *previous;
                ^
common/src/gx_window_scroll_info_get.c:134:47: style: Variable 'return_scroll_info->gx_scroll_increment' is reassigned a value before the old one has been used. [redundantAssignment]
    return_scroll_info -> gx_scroll_increment = (GX_VALUE)(return_scroll_info -> gx_scroll_maximum - return_scroll_info -> gx_scroll_minimum) / 10;
                                              ^
common/src/gx_window_scroll_info_get.c:83:47: note: return_scroll_info->gx_scroll_increment is assigned
    return_scroll_info -> gx_scroll_increment = 1;
                                              ^
common/src/gx_window_scroll_info_get.c:134:47: note: return_scroll_info->gx_scroll_increment is overwritten
    return_scroll_info -> gx_scroll_increment = (GX_VALUE)(return_scroll_info -> gx_scroll_maximum - return_scroll_info -> gx_scroll_minimum) / 10;
                                              ^
common/src/gx_window_view_update_detect.c:77:17: style: The scope of the variable 'root' can be reduced. [variableScope]
GX_WINDOW_ROOT *root;
                ^
common/src/gx_window_view_update_detect.c:78:17: style: The scope of the variable 'parent' can be reduced. [variableScope]
GX_WIDGET      *parent;
                ^
common/src/gxe_canvas_line_draw.c:79:18: style: Unused variable: context [unusedVariable]
GX_DRAW_CONTEXT *context;
                 ^
common/src/gxe_system_canvas_refresh.c:76:6: style: Unused variable: status [unusedVariable]
UINT status;
     ^
common/src/gxe_system_initialize.c:74:6: style: Unused variable: status [unusedVariable]
UINT status;
     ^
common/src/gxe_system_memory_allocator_set.c:78:6: style: Unused variable: status [unusedVariable]
UINT status;
     ^
common/src/gxe_system_start.c:73:6: style: Unused variable: status [unusedVariable]
UINT status;
     ^
ports/win32/src/gx_win32_display_driver.c:881:8: style: The scope of the variable 'pRead' can be reduced. [variableScope]
ULONG *pRead;
       ^
ports/win32/src/gx_win32_display_driver.c:882:8: style: The scope of the variable 'pWrite' can be reduced. [variableScope]
ULONG *pWrite;
       ^
ports/win32/src/gx_win32_display_driver.c:971:9: style: The scope of the variable 'pRead' can be reduced. [variableScope]
USHORT *pRead;
        ^
ports/win32/src/gx_win32_display_driver.c:972:9: style: The scope of the variable 'pWrite' can be reduced. [variableScope]
USHORT *pWrite;
        ^
ports/win32/src/gx_win32_display_driver.c:1066:11: style: The scope of the variable 'pRead' can be reduced. [variableScope]
GX_UBYTE *pRead;
          ^
ports/win32/src/gx_win32_display_driver.c:1067:11: style: The scope of the variable 'pWrite' can be reduced. [variableScope]
GX_UBYTE *pWrite;
          ^
ports/win32/src/gx_win32_display_driver.c:1164:13: style: The scope of the variable 'read_start' can be reduced. [variableScope]
UCHAR      *read_start;
            ^
ports/win32/src/gx_win32_display_driver.c:1165:13: style: The scope of the variable 'write_start' can be reduced. [variableScope]
UCHAR      *write_start;
            ^
ports/win32/src/gx_win32_display_driver.c:1291:31: style: The scope of the variable 'memptr' can be reduced. [variableScope]
VOID                         *memptr;
                              ^
ports/win32/src/gx_win32_display_driver.c:588:12: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
    status = RegOpenKeyExA(HKEY_LOCAL_MACHINE, "Software\\Microsoft\\Azure_RTOS\\GUIX\\InstallDir", 0, READ_CONTROL | KEY_QUERY_VALUE, &key);
           ^
ports/win32/src/gx_win32_display_driver.c:1411:9: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    err = GetLastError();
        ^
ports/win32/src/gx_win32_display_driver_332rgb.c:70:33: style: Variable 'g' is assigned a value that is never used. [unreadVariable]
INT                           g = 0;
                                ^
ports/win32/src/gx_win32_display_driver_332rgb.c:71:33: style: Variable 'b' is assigned a value that is never used. [unreadVariable]
INT                           b = 0;
                                ^
samples/demo_guix_calculator/demo_guix_calculator.c:71:54: style:inconclusive: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'key'. [funcArgNamesDifferent]
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON *key)
                                                     ^
samples/demo_guix_calculator/guix_calculator_specifications.h:164:54: note: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'key'.
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON *widget);
                                                     ^
samples/demo_guix_calculator/demo_guix_calculator.c:71:54: note: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'key'.
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON *key)
                                                     ^
samples/demo_guix_calculator/demo_guix_calculator.c:125:42: style:inconclusive: Function 'calculator_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT calculator_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                         ^
samples/demo_guix_calculator/guix_calculator_specifications.h:163:42: note: Function 'calculator_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT calculator_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                         ^
samples/demo_guix_calculator/demo_guix_calculator.c:125:42: note: Function 'calculator_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT calculator_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                         ^
samples/demo_guix_calculator/evaluate.c:250:8: style: The scope of the variable 'temp' can be reduced. [variableScope]
double temp;
       ^
samples/demo_guix_calculator/evaluate.c:233:8: style: Local variable 'result' shadows outer variable [shadowVariable]
double result = 1;
       ^
samples/demo_guix_calculator/evaluate.c:9:9: note: Shadowed declaration
GX_CHAR result[128];
        ^
samples/demo_guix_calculator/evaluate.c:233:8: note: Shadow variable
double result = 1;
       ^
samples/demo_guix_calculator/guix_calculator_specifications.c:991:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_calculator/guix_calculator_specifications.h:195:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_calculator/guix_calculator_specifications.c:991:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_car_infotainment/audio.c:86:44: style:inconclusive: Function 'audio_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT audio_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:475:44: note: Function 'audio_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT audio_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                           ^
samples/demo_guix_car_infotainment/audio.c:86:44: note: Function 'audio_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT audio_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_car_infotainment/base.c:132:36: style:inconclusive: Function 'base_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT base_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                   ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:471:36: note: Function 'base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT base_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                   ^
samples/demo_guix_car_infotainment/base.c:132:36: note: Function 'base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT base_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                   ^
samples/demo_guix_car_infotainment/base.c:182:43: style:inconclusive: Function 'screen_base_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT screen_base_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:470:43: note: Function 'screen_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT screen_base_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_car_infotainment/base.c:182:43: note: Function 'screen_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT screen_base_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_car_infotainment/climate.c:106:46: style:inconclusive: Function 'climate_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT climate_screen_event_process(GX_WINDOW *window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:477:46: note: Function 'climate_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT climate_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                             ^
samples/demo_guix_car_infotainment/climate.c:106:46: note: Function 'climate_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT climate_screen_event_process(GX_WINDOW *window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_car_infotainment/climate.c:163:57: style:inconclusive: Function 'custom_progress_bar_event_process' argument 1 names different: declaration 'widget' definition 'bar'. [funcArgNamesDifferent]
UINT custom_progress_bar_event_process(GX_PROGRESS_BAR *bar, GX_EVENT *event_ptr)
                                                        ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:478:57: note: Function 'custom_progress_bar_event_process' argument 1 names different: declaration 'widget' definition 'bar'.
UINT custom_progress_bar_event_process(GX_PROGRESS_BAR *widget, GX_EVENT *event_ptr);
                                                        ^
samples/demo_guix_car_infotainment/climate.c:163:57: note: Function 'custom_progress_bar_event_process' argument 1 names different: declaration 'widget' definition 'bar'.
UINT custom_progress_bar_event_process(GX_PROGRESS_BAR *bar, GX_EVENT *event_ptr)
                                                        ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment.c:209:43: style:inconclusive: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:480:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment.c:209:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment.c:356:54: style:inconclusive: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'. [funcArgNamesDifferent]
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON* button)
                                                     ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:469:54: note: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON *widget);
                                                     ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment.c:356:54: note: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON* button)
                                                     ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment.c:389:43: style:inconclusive: Function 'radial_slider_draw' argument 1 names different: declaration 'widget' definition 'slider'. [funcArgNamesDifferent]
VOID radial_slider_draw(GX_RADIAL_SLIDER* slider)
                                          ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:481:43: note: Function 'radial_slider_draw' argument 1 names different: declaration 'widget' definition 'slider'.
VOID radial_slider_draw(GX_RADIAL_SLIDER *widget);
                                          ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment.c:389:43: note: Function 'radial_slider_draw' argument 1 names different: declaration 'widget' definition 'slider'.
VOID radial_slider_draw(GX_RADIAL_SLIDER* slider)
                                          ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.c:73:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.c:110:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.c:136:19: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
GX_STUDIO_WIDGET *widget_define;
                  ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.c:7201:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:519:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.c:7201:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_car_infotainment/phone.c:63:44: style:inconclusive: Function 'phone_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT phone_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:476:44: note: Function 'phone_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT phone_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                           ^
samples/demo_guix_car_infotainment/phone.c:63:44: note: Function 'phone_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT phone_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_car_infotainment/vehicle.c:96:46: style:inconclusive: Function 'vehicle_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT vehicle_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                             ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:479:46: note: Function 'vehicle_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT vehicle_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                             ^
samples/demo_guix_car_infotainment/vehicle.c:96:46: note: Function 'vehicle_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT vehicle_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                             ^
samples/demo_guix_car_infotainment/video.c:55:44: style:inconclusive: Function 'video_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT video_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:472:44: note: Function 'video_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT video_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                           ^
samples/demo_guix_car_infotainment/video.c:55:44: note: Function 'video_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT video_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_car_infotainment/video.c:98:60: style:inconclusive: Function 'video_screen_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'. [funcArgNamesDifferent]
VOID video_screen_pixelmap_button_draw(GX_PIXELMAP_BUTTON *button)
                                                           ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:473:60: note: Function 'video_screen_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID video_screen_pixelmap_button_draw(GX_PIXELMAP_BUTTON *widget);
                                                           ^
samples/demo_guix_car_infotainment/video.c:98:60: note: Function 'video_screen_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID video_screen_pixelmap_button_draw(GX_PIXELMAP_BUTTON *button)
                                                           ^
samples/demo_guix_car_infotainment/volume_screen_base.c:118:50: style:inconclusive: Function 'volume_screen_base_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT volume_screen_base_event_process(GX_WINDOW *window, GX_EVENT* event_ptr)
                                                 ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:467:50: note: Function 'volume_screen_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT volume_screen_base_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                 ^
samples/demo_guix_car_infotainment/volume_screen_base.c:118:50: note: Function 'volume_screen_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT volume_screen_base_event_process(GX_WINDOW *window, GX_EVENT* event_ptr)
                                                 ^
samples/demo_guix_car_infotainment/volume_screen_base.c:159:57: style:inconclusive: Function 'volume_progress_bar_event_process' argument 1 names different: declaration 'widget' definition 'bar'. [funcArgNamesDifferent]
UINT volume_progress_bar_event_process(GX_PROGRESS_BAR *bar, GX_EVENT* event_ptr)
                                                        ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:468:57: note: Function 'volume_progress_bar_event_process' argument 1 names different: declaration 'widget' definition 'bar'.
UINT volume_progress_bar_event_process(GX_PROGRESS_BAR *widget, GX_EVENT *event_ptr);
                                                        ^
samples/demo_guix_car_infotainment/volume_screen_base.c:159:57: note: Function 'volume_progress_bar_event_process' argument 1 names different: declaration 'widget' definition 'bar'.
UINT volume_progress_bar_event_process(GX_PROGRESS_BAR *bar, GX_EVENT* event_ptr)
                                                        ^
samples/demo_guix_car_infotainment/volume_screen_base.c:164:39: style: Local variable 'base' shadows outer variable [shadowVariable]
    VOLUME_SCREEN_BASE_CONTROL_BLOCK *base;
                                      ^
samples/demo_guix_car_infotainment/demo_guix_car_infotainment_specifications.h:456:27: note: Shadowed declaration
extern BASE_CONTROL_BLOCK base;
                          ^
samples/demo_guix_car_infotainment/volume_screen_base.c:164:39: note: Shadow variable
    VOLUME_SCREEN_BASE_CONTROL_BLOCK *base;
                                      ^
samples/demo_guix_home_automation/demo_guix_home_automation.c:171:43: style:inconclusive: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:697:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_home_automation/demo_guix_home_automation.c:171:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_home_automation/demo_guix_home_automation.c:239:34: style:inconclusive: Function 'main_screen_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID main_screen_draw(GX_WINDOW *window)
                                 ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:698:34: note: Function 'main_screen_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID main_screen_draw(GX_WINDOW *widget);
                                 ^
samples/demo_guix_home_automation/demo_guix_home_automation.c:239:34: note: Function 'main_screen_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID main_screen_draw(GX_WINDOW *window)
                                 ^
samples/demo_guix_home_automation/demo_guix_home_automation.c:422:50: style:inconclusive: Function 'custom_radial_slider_draw' argument 1 names different: declaration 'widget' definition 'slider'. [funcArgNamesDifferent]
VOID custom_radial_slider_draw(GX_RADIAL_SLIDER *slider)
                                                 ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:688:50: note: Function 'custom_radial_slider_draw' argument 1 names different: declaration 'widget' definition 'slider'.
VOID custom_radial_slider_draw(GX_RADIAL_SLIDER *widget);
                                                 ^
samples/demo_guix_home_automation/demo_guix_home_automation.c:422:50: note: Function 'custom_radial_slider_draw' argument 1 names different: declaration 'widget' definition 'slider'.
VOID custom_radial_slider_draw(GX_RADIAL_SLIDER *slider)
                                                 ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.c:87:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.c:124:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.c:150:19: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
GX_STUDIO_WIDGET *widget_define;
                  ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.c:10301:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:735:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.c:10301:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_home_automation/lights.c:363:43: style:inconclusive: Function 'lights_base_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT lights_base_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:690:43: note: Function 'lights_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT lights_base_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_home_automation/lights.c:363:43: note: Function 'lights_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT lights_base_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_home_automation/locks.c:470:36: style: The scope of the variable 'lock_controller' can be reduced. [variableScope]
    CONTROLLER_BASE_CONTROL_BLOCK *lock_controller;
                                   ^
samples/demo_guix_home_automation/locks.c:510:36: style: The scope of the variable 'lock_controller' can be reduced. [variableScope]
    CONTROLLER_BASE_CONTROL_BLOCK* lock_controller;
                                   ^
samples/demo_guix_home_automation/locks.c:352:44: style:inconclusive: Function 'locks_page_1_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT locks_page_1_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:692:44: note: Function 'locks_page_1_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT locks_page_1_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                           ^
samples/demo_guix_home_automation/locks.c:352:44: note: Function 'locks_page_1_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT locks_page_1_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_home_automation/locks.c:375:47: style:inconclusive: Function 'locks_door_base_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT locks_door_base_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                              ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:693:47: note: Function 'locks_door_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT locks_door_base_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                              ^
samples/demo_guix_home_automation/locks.c:375:47: note: Function 'locks_door_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT locks_door_base_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                              ^
samples/demo_guix_home_automation/passcode_screen.c:120:47: style:inconclusive: Function 'passcode_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT passcode_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                              ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:694:47: note: Function 'passcode_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT passcode_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                              ^
samples/demo_guix_home_automation/passcode_screen.c:120:47: note: Function 'passcode_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT passcode_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                              ^
samples/demo_guix_home_automation/screen_base.c:305:16: style: The scope of the variable 'pagination' can be reduced. [variableScope]
    GX_WIDGET *pagination;
               ^
samples/demo_guix_home_automation/screen_base.c:343:17: style: The scope of the variable 'screen' can be reduced. [variableScope]
    GX_WIDGET  *screen;
                ^
samples/demo_guix_home_automation/screen_base.c:344:17: style: The scope of the variable 'pagination' can be reduced. [variableScope]
    GX_WIDGET  *pagination;
                ^
samples/demo_guix_home_automation/screen_base.c:637:41: style:inconclusive: Function 'slide_win_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT slide_win_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                        ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:696:41: note: Function 'slide_win_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT slide_win_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                        ^
samples/demo_guix_home_automation/screen_base.c:637:41: note: Function 'slide_win_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT slide_win_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                        ^
samples/demo_guix_home_automation/screen_base.c:660:43: style:inconclusive: Function 'screen_base_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT screen_base_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:695:43: note: Function 'screen_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT screen_base_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_home_automation/screen_base.c:660:43: note: Function 'screen_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT screen_base_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_home_automation/thermostat.c:328:47: style:inconclusive: Function 'thermostat_base_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT thermostat_base_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                              ^
samples/demo_guix_home_automation/demo_guix_home_automation_specifications.h:686:47: note: Function 'thermostat_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT thermostat_base_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                              ^
samples/demo_guix_home_automation/thermostat.c:328:47: note: Function 'thermostat_base_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT thermostat_base_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                              ^
samples/demo_guix_home_automation/weather.c:110:24: style: The scope of the variable 'seven_day_info' can be reduced. [variableScope]
    WEATHER_7DAY_INFO *seven_day_info;
                       ^
samples/demo_guix_industrial/complete_window.c:38:47: style:inconclusive: Function 'complete_window_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT complete_window_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                              ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.h:333:47: note: Function 'complete_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT complete_window_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                              ^
samples/demo_guix_industrial/complete_window.c:38:47: note: Function 'complete_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT complete_window_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                              ^
samples/demo_guix_industrial/demo_guix_industrial.c:157:34: style:inconclusive: Function 'main_screen_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID main_screen_draw(GX_WINDOW *window)
                                 ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.h:341:34: note: Function 'main_screen_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID main_screen_draw(GX_WINDOW *widget);
                                 ^
samples/demo_guix_industrial/demo_guix_industrial.c:157:34: note: Function 'main_screen_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID main_screen_draw(GX_WINDOW *window)
                                 ^
samples/demo_guix_industrial/demo_guix_industrial.c:221:43: style:inconclusive: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.h:340:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_industrial/demo_guix_industrial.c:221:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_industrial/demo_guix_industrial.c:441:43: style:inconclusive: Function 'mode_button_draw' argument 1 names different: declaration 'widget' definition 'button'. [funcArgNamesDifferent]
VOID mode_button_draw(GX_PIXELMAP_BUTTON *button)
                                          ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.h:342:43: note: Function 'mode_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID mode_button_draw(GX_PIXELMAP_BUTTON *widget);
                                          ^
samples/demo_guix_industrial/demo_guix_industrial.c:441:43: note: Function 'mode_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID mode_button_draw(GX_PIXELMAP_BUTTON *button)
                                          ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.c:71:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.c:108:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.c:134:19: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
GX_STUDIO_WIDGET *widget_define;
                  ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.c:5147:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.h:377:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.c:5147:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_industrial/sequence_window.c:375:9: style: The scope of the variable 'ms' can be reduced. [variableScope]
    int ms;
        ^
samples/demo_guix_industrial/sequence_window.c:414:20: style: The scope of the variable 'pinfo' can be reduced. [variableScope]
    PROGRESS_INFO *pinfo;
                   ^
samples/demo_guix_industrial/sequence_window.c:186:47: style:inconclusive: Function 'sequence_window_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT sequence_window_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                              ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.h:334:47: note: Function 'sequence_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT sequence_window_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                              ^
samples/demo_guix_industrial/sequence_window.c:186:47: note: Function 'sequence_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT sequence_window_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                              ^
samples/demo_guix_industrial/sequence_window.c:223:30: style:inconclusive: Function 'task_icon_draw' argument 1 names different: declaration 'widget' definition 'icon'. [funcArgNamesDifferent]
VOID task_icon_draw(GX_ICON *icon)
                             ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.h:337:30: note: Function 'task_icon_draw' argument 1 names different: declaration 'widget' definition 'icon'.
VOID task_icon_draw(GX_ICON *widget);
                             ^
samples/demo_guix_industrial/sequence_window.c:223:30: note: Function 'task_icon_draw' argument 1 names different: declaration 'widget' definition 'icon'.
VOID task_icon_draw(GX_ICON *icon)
                             ^
samples/demo_guix_industrial/sequence_window.c:271:33: style:inconclusive: Function 'task_title_draw' argument 1 names different: declaration 'widget' definition 'prompt'. [funcArgNamesDifferent]
VOID task_title_draw(GX_PROMPT *prompt)
                                ^
samples/demo_guix_industrial/demo_guix_industrial_specifications.h:338:33: note: Function 'task_title_draw' argument 1 names different: declaration 'widget' definition 'prompt'.
VOID task_title_draw(GX_PROMPT *widget);
                                ^
samples/demo_guix_industrial/sequence_window.c:271:33: note: Function 'task_title_draw' argument 1 names different: declaration 'widget' definition 'prompt'.
VOID task_title_draw(GX_PROMPT *prompt)
                                ^
samples/demo_guix_industrial/sequence_window.c:337:19: style:inconclusive: Function 'task_set' argument 1 names different: declaration 'new_mode' definition 'new_task_id'. [funcArgNamesDifferent]
VOID task_set(int new_task_id)
                  ^
samples/demo_guix_industrial/sequence_window.c:158:19: note: Function 'task_set' argument 1 names different: declaration 'new_mode' definition 'new_task_id'.
VOID task_set(int new_mode);
                  ^
samples/demo_guix_industrial/sequence_window.c:337:19: note: Function 'task_set' argument 1 names different: declaration 'new_mode' definition 'new_task_id'.
VOID task_set(int new_task_id)
                  ^
samples/demo_guix_keyboard/demo_guix_keyboard.c:245:66: style:inconclusive: Function 'PopulateKeyboardButtons' argument 2 names different: declaration 'layout' definition 'entry'. [funcArgNamesDifferent]
VOID PopulateKeyboardButtons(GX_WINDOW *frame, KEY_LAYOUT_ENTRY *entry)
                                                                 ^
samples/demo_guix_keyboard/demo_guix_keyboard.c:86:67: note: Function 'PopulateKeyboardButtons' argument 2 names different: declaration 'layout' definition 'entry'.
VOID  PopulateKeyboardButtons(GX_WINDOW *frame, KEY_LAYOUT_ENTRY *layout);
                                                                  ^
samples/demo_guix_keyboard/demo_guix_keyboard.c:245:66: note: Function 'PopulateKeyboardButtons' argument 2 names different: declaration 'layout' definition 'entry'.
VOID PopulateKeyboardButtons(GX_WINDOW *frame, KEY_LAYOUT_ENTRY *entry)
                                                                 ^
samples/demo_guix_keyboard/demo_guix_keyboard.c:257:46: style:inconclusive: Function 'keyboard_frame_event_handler' argument 1 names different: declaration 'widget' definition 'frame'. [funcArgNamesDifferent]
UINT keyboard_frame_event_handler(GX_WINDOW *frame, GX_EVENT *event_ptr)
                                             ^
samples/demo_guix_keyboard/guix_keyboard_specifications.h:124:46: note: Function 'keyboard_frame_event_handler' argument 1 names different: declaration 'widget' definition 'frame'.
UINT keyboard_frame_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                             ^
samples/demo_guix_keyboard/demo_guix_keyboard.c:257:46: note: Function 'keyboard_frame_event_handler' argument 1 names different: declaration 'widget' definition 'frame'.
UINT keyboard_frame_event_handler(GX_WINDOW *frame, GX_EVENT *event_ptr)
                                             ^
samples/demo_guix_keyboard/demo_guix_keyboard.c:281:59: style:inconclusive: Function 'input_field_event_process' argument 1 names different: declaration 'widget' definition 'text_input'. [funcArgNamesDifferent]
UINT input_field_event_process(GX_SINGLE_LINE_TEXT_INPUT *text_input, GX_EVENT *event_ptr)
                                                          ^
samples/demo_guix_keyboard/guix_keyboard_specifications.h:123:59: note: Function 'input_field_event_process' argument 1 names different: declaration 'widget' definition 'text_input'.
UINT input_field_event_process(GX_SINGLE_LINE_TEXT_INPUT *widget, GX_EVENT *event_ptr);
                                                          ^
samples/demo_guix_keyboard/demo_guix_keyboard.c:281:59: note: Function 'input_field_event_process' argument 1 names different: declaration 'widget' definition 'text_input'.
UINT input_field_event_process(GX_SINGLE_LINE_TEXT_INPUT *text_input, GX_EVENT *event_ptr)
                                                          ^
samples/demo_guix_keyboard/guix_keyboard_specifications.c:363:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_keyboard/guix_keyboard_specifications.h:155:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_keyboard/guix_keyboard_specifications.c:363:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_medical/demo_guix_medical.c:87:40: style:inconclusive: Function 'template_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT template_event_handler(GX_WINDOW* window, GX_EVENT* event_ptr)
                                       ^
samples/demo_guix_medical/guix_medical_specifications.h:494:40: note: Function 'template_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT template_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                       ^
samples/demo_guix_medical/demo_guix_medical.c:87:40: note: Function 'template_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT template_event_handler(GX_WINDOW* window, GX_EVENT* event_ptr)
                                       ^
samples/demo_guix_medical/demo_guix_medical.c:90:25: style: Local variable 'template' shadows outer variable [shadowVariable]
TEMPLATE_CONTROL_BLOCK *template = (TEMPLATE_CONTROL_BLOCK *)window;
                        ^
samples/demo_guix_medical/guix_medical_specifications.h:483:31: note: Shadowed declaration
extern TEMPLATE_CONTROL_BLOCK template;
                              ^
samples/demo_guix_medical/demo_guix_medical.c:90:25: note: Shadow variable
TEMPLATE_CONTROL_BLOCK *template = (TEMPLATE_CONTROL_BLOCK *)window;
                        ^
samples/demo_guix_medical/guix_medical_specifications.c:70:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
samples/demo_guix_medical/guix_medical_specifications.c:107:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
samples/demo_guix_medical/guix_medical_specifications.c:133:19: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
GX_STUDIO_WIDGET *widget_define;
                  ^
samples/demo_guix_medical/guix_medical_specifications.c:8887:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_medical/guix_medical_specifications.h:532:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_medical/guix_medical_specifications.c:8887:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_medical/patients.c:263:47: style:inconclusive: Function 'patients_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT patients_screen_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                              ^
samples/demo_guix_medical/guix_medical_specifications.h:490:47: note: Function 'patients_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT patients_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                              ^
samples/demo_guix_medical/patients.c:263:47: note: Function 'patients_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT patients_screen_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                              ^
samples/demo_guix_medical/patients.c:263:65: style:inconclusive: Function 'patients_screen_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'. [funcArgNamesDifferent]
UINT patients_screen_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                                                ^
samples/demo_guix_medical/guix_medical_specifications.h:490:65: note: Function 'patients_screen_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT patients_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                                ^
samples/demo_guix_medical/patients.c:263:65: note: Function 'patients_screen_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT patients_screen_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                                                ^
samples/demo_guix_medical/schedule.c:159:47: style:inconclusive: Function 'schedule_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT schedule_screen_event_handler(GX_WINDOW* window, GX_EVENT* myevent)
                                              ^
samples/demo_guix_medical/guix_medical_specifications.h:488:47: note: Function 'schedule_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT schedule_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                              ^
samples/demo_guix_medical/schedule.c:159:47: note: Function 'schedule_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT schedule_screen_event_handler(GX_WINDOW* window, GX_EVENT* myevent)
                                              ^
samples/demo_guix_medical/schedule.c:159:65: style:inconclusive: Function 'schedule_screen_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'. [funcArgNamesDifferent]
UINT schedule_screen_event_handler(GX_WINDOW* window, GX_EVENT* myevent)
                                                                ^
samples/demo_guix_medical/guix_medical_specifications.h:488:65: note: Function 'schedule_screen_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT schedule_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                                ^
samples/demo_guix_medical/schedule.c:159:65: note: Function 'schedule_screen_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT schedule_screen_event_handler(GX_WINDOW* window, GX_EVENT* myevent)
                                                                ^
samples/demo_guix_medical/schedule.c:224:35: style:inconclusive: Function 'schedule_win_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID schedule_win_draw(GX_WINDOW *window)
                                  ^
samples/demo_guix_medical/guix_medical_specifications.h:489:35: note: Function 'schedule_win_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID schedule_win_draw(GX_WINDOW *widget);
                                  ^
samples/demo_guix_medical/schedule.c:224:35: note: Function 'schedule_win_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID schedule_win_draw(GX_WINDOW *window)
                                  ^
samples/demo_guix_medical/vitals.c:371:45: style:inconclusive: Function 'vitals_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT vitals_screen_event_process(GX_WINDOW *window, GX_EVENT *myevent)
                                            ^
samples/demo_guix_medical/guix_medical_specifications.h:492:45: note: Function 'vitals_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT vitals_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                            ^
samples/demo_guix_medical/vitals.c:371:45: note: Function 'vitals_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT vitals_screen_event_process(GX_WINDOW *window, GX_EVENT *myevent)
                                            ^
samples/demo_guix_medical/vitals.c:371:63: style:inconclusive: Function 'vitals_screen_event_process' argument 2 names different: declaration 'event_ptr' definition 'myevent'. [funcArgNamesDifferent]
UINT vitals_screen_event_process(GX_WINDOW *window, GX_EVENT *myevent)
                                                              ^
samples/demo_guix_medical/guix_medical_specifications.h:492:63: note: Function 'vitals_screen_event_process' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT vitals_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                              ^
samples/demo_guix_medical/vitals.c:371:63: note: Function 'vitals_screen_event_process' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT vitals_screen_event_process(GX_WINDOW *window, GX_EVENT *myevent)
                                                              ^
samples/demo_guix_shapes/demo_guix_shapes.c:137:44: style:inconclusive: Function 'ShapesScreen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT ShapesScreen_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                           ^
samples/demo_guix_shapes/guix_shapes_specifications.h:238:44: note: Function 'ShapesScreen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT ShapesScreen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                           ^
samples/demo_guix_shapes/demo_guix_shapes.c:137:44: note: Function 'ShapesScreen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT ShapesScreen_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                           ^
samples/demo_guix_shapes/demo_guix_shapes.c:137:62: style:inconclusive: Function 'ShapesScreen_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'. [funcArgNamesDifferent]
UINT ShapesScreen_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                                             ^
samples/demo_guix_shapes/guix_shapes_specifications.h:238:62: note: Function 'ShapesScreen_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT ShapesScreen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                             ^
samples/demo_guix_shapes/demo_guix_shapes.c:137:62: note: Function 'ShapesScreen_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT ShapesScreen_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                                             ^
samples/demo_guix_shapes/demo_guix_shapes.c:309:31: style:inconclusive: Function 'graphics_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID graphics_draw(GX_WINDOW *window)
                              ^
samples/demo_guix_shapes/guix_shapes_specifications.h:239:31: note: Function 'graphics_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID graphics_draw(GX_WINDOW *widget);
                              ^
samples/demo_guix_shapes/demo_guix_shapes.c:309:31: note: Function 'graphics_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID graphics_draw(GX_WINDOW *window)
                              ^
samples/demo_guix_shapes/guix_shapes_specifications.c:1620:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_shapes/guix_shapes_specifications.h:273:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_shapes/guix_shapes_specifications.c:1620:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_shapes/text_rotation_window.c:55:34: style:inconclusive: Function 'text_window_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
void text_window_draw(GX_WINDOW *window)
                                 ^
samples/demo_guix_shapes/guix_shapes_specifications.h:237:34: note: Function 'text_window_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID text_window_draw(GX_WINDOW *widget);
                                 ^
samples/demo_guix_shapes/text_rotation_window.c:55:34: note: Function 'text_window_draw' argument 1 names different: declaration 'widget' definition 'window'.
void text_window_draw(GX_WINDOW *window)
                                 ^
samples/demo_guix_shapes/text_rotation_window.c:208:52: style:inconclusive: Function 'Text_Rotation_Window_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT Text_Rotation_Window_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                                   ^
samples/demo_guix_shapes/guix_shapes_specifications.h:236:52: note: Function 'Text_Rotation_Window_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT Text_Rotation_Window_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                   ^
samples/demo_guix_shapes/text_rotation_window.c:208:52: note: Function 'Text_Rotation_Window_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT Text_Rotation_Window_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                                   ^
samples/demo_guix_shapes/text_rotation_window.c:208:70: style:inconclusive: Function 'Text_Rotation_Window_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'. [funcArgNamesDifferent]
UINT Text_Rotation_Window_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                                                     ^
samples/demo_guix_shapes/guix_shapes_specifications.h:236:70: note: Function 'Text_Rotation_Window_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT Text_Rotation_Window_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                                     ^
samples/demo_guix_shapes/text_rotation_window.c:208:70: note: Function 'Text_Rotation_Window_event_handler' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT Text_Rotation_Window_event_handler(GX_WINDOW *window, GX_EVENT *myevent)
                                                                     ^
samples/demo_guix_simple/guix_simple_specifications.c:381:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_simple/guix_simple_specifications.h:148:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_simple/guix_simple_specifications.c:381:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_smart_watch/demo_guix_smart_watch.c:259:17: style: The scope of the variable 'screen_list' can be reduced. [variableScope]
    GX_WIDGET** screen_list;
                ^
samples/demo_guix_smart_watch/demo_guix_smart_watch.c:754:43: style:inconclusive: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:529:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_smart_watch/demo_guix_smart_watch.c:754:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.c:7047:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:589:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.c:7047:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_smart_watch/page_1_message_screen.c:154:46: style:inconclusive: Function 'message_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT message_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:534:46: note: Function 'message_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT message_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                             ^
samples/demo_guix_smart_watch/page_1_message_screen.c:154:46: note: Function 'message_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT message_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_smart_watch/page_1_music_screen.c:161:44: style:inconclusive: Function 'music_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT music_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                           ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:532:44: note: Function 'music_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT music_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                           ^
samples/demo_guix_smart_watch/page_1_music_screen.c:161:44: note: Function 'music_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT music_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                           ^
samples/demo_guix_smart_watch/page_1_music_screen.c:203:54: style:inconclusive: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'. [funcArgNamesDifferent]
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON* button)
                                                     ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:533:54: note: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON *widget);
                                                     ^
samples/demo_guix_smart_watch/page_1_music_screen.c:203:54: note: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON* button)
                                                     ^
samples/demo_guix_smart_watch/page_1_weather_screen.c:69:46: style:inconclusive: Function 'weather_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT weather_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:530:46: note: Function 'weather_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT weather_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                             ^
samples/demo_guix_smart_watch/page_1_weather_screen.c:69:46: note: Function 'weather_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT weather_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_smart_watch/page_1_weather_screen_template.c:91:55: style:inconclusive: Function 'weather_screen_template_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT weather_screen_template_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                                      ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:536:55: note: Function 'weather_screen_template_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT weather_screen_template_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                      ^
samples/demo_guix_smart_watch/page_1_weather_screen_template.c:91:55: note: Function 'weather_screen_template_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT weather_screen_template_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                                      ^
samples/demo_guix_smart_watch/page_2_clock_3_screen.c:46:46: style:inconclusive: Function 'clock_3_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT clock_3_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:547:46: note: Function 'clock_3_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT clock_3_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                             ^
samples/demo_guix_smart_watch/page_2_clock_3_screen.c:46:46: note: Function 'clock_3_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT clock_3_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_smart_watch/page_2_clock_3_screen.c:86:37: style:inconclusive: Function 'clock_3_screen_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID clock_3_screen_draw(GX_WINDOW *window)
                                    ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:548:37: note: Function 'clock_3_screen_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID clock_3_screen_draw(GX_WINDOW *widget);
                                    ^
samples/demo_guix_smart_watch/page_2_clock_3_screen.c:86:37: note: Function 'clock_3_screen_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID clock_3_screen_draw(GX_WINDOW *window)
                                    ^
samples/demo_guix_smart_watch/page_2_clock_4_screen.c:70:46: style:inconclusive: Function 'clock_4_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT clock_4_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:549:46: note: Function 'clock_4_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT clock_4_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                             ^
samples/demo_guix_smart_watch/page_2_clock_4_screen.c:70:46: note: Function 'clock_4_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT clock_4_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_smart_watch/page_2_clock_5_screen.c:84:46: style:inconclusive: Function 'clock_5_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT clock_5_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:545:46: note: Function 'clock_5_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT clock_5_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                             ^
samples/demo_guix_smart_watch/page_2_clock_5_screen.c:84:46: note: Function 'clock_5_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT clock_5_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                             ^
samples/demo_guix_smart_watch/page_2_clock_5_screen.c:142:37: style:inconclusive: Function 'clock_5_screen_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID clock_5_screen_draw(GX_WINDOW* window)
                                    ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:546:37: note: Function 'clock_5_screen_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID clock_5_screen_draw(GX_WINDOW *widget);
                                    ^
samples/demo_guix_smart_watch/page_2_clock_5_screen.c:142:37: note: Function 'clock_5_screen_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID clock_5_screen_draw(GX_WINDOW* window)
                                    ^
samples/demo_guix_smart_watch/page_2_clock_screen_template.c:161:53: style:inconclusive: Function 'clock_screen_template_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT clock_screen_template_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                                    ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:535:53: note: Function 'clock_screen_template_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT clock_screen_template_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                    ^
samples/demo_guix_smart_watch/page_2_clock_screen_template.c:161:53: note: Function 'clock_screen_template_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT clock_screen_template_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                                    ^
samples/demo_guix_smart_watch/page_2_home_screen.c:127:43: style:inconclusive: Function 'home_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT home_screen_event_handler(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:550:43: note: Function 'home_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT home_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_smart_watch/page_2_home_screen.c:127:43: note: Function 'home_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT home_screen_event_handler(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
samples/demo_guix_smart_watch/page_3_calories_screen.c:62:47: style:inconclusive: Function 'calories_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT calories_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                              ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:542:47: note: Function 'calories_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT calories_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                              ^
samples/demo_guix_smart_watch/page_3_calories_screen.c:62:47: note: Function 'calories_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT calories_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                              ^
samples/demo_guix_smart_watch/page_3_ekg_screen.c:64:42: style:inconclusive: Function 'ekg_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT ekg_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                         ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:538:42: note: Function 'ekg_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT ekg_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                         ^
samples/demo_guix_smart_watch/page_3_ekg_screen.c:64:42: note: Function 'ekg_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT ekg_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                         ^
samples/demo_guix_smart_watch/page_3_fitness_screen.c:162:46: style:inconclusive: Function 'fitness_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT fitness_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                             ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:543:46: note: Function 'fitness_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT fitness_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                             ^
samples/demo_guix_smart_watch/page_3_fitness_screen.c:162:46: note: Function 'fitness_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT fitness_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                             ^
samples/demo_guix_smart_watch/page_3_fitness_screen.c:215:39: style:inconclusive: Function 'ekg_waveform_win_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID ekg_waveform_win_draw(GX_WINDOW* window)
                                      ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:544:39: note: Function 'ekg_waveform_win_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID ekg_waveform_win_draw(GX_WINDOW *widget);
                                      ^
samples/demo_guix_smart_watch/page_3_fitness_screen.c:215:39: note: Function 'ekg_waveform_win_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID ekg_waveform_win_draw(GX_WINDOW* window)
                                      ^
samples/demo_guix_smart_watch/page_3_run_screen.c:84:42: style:inconclusive: Function 'run_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT run_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                         ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:541:42: note: Function 'run_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT run_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                         ^
samples/demo_guix_smart_watch/page_3_run_screen.c:84:42: note: Function 'run_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT run_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                         ^
samples/demo_guix_smart_watch/page_3_stand_screen.c:66:44: style:inconclusive: Function 'stand_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT stand_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                           ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:540:44: note: Function 'stand_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT stand_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                           ^
samples/demo_guix_smart_watch/page_3_stand_screen.c:66:44: note: Function 'stand_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT stand_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                           ^
samples/demo_guix_smart_watch/page_3_yoga_screen.c:57:43: style:inconclusive: Function 'yoga_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT yoga_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:539:43: note: Function 'yoga_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT yoga_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_smart_watch/page_3_yoga_screen.c:57:43: note: Function 'yoga_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT yoga_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
samples/demo_guix_smart_watch/screen_template.c:69:47: style:inconclusive: Function 'screen_template_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT screen_template_event_process(GX_WINDOW *window, GX_EVENT* event_ptr)
                                              ^
samples/demo_guix_smart_watch/guix_smart_watch_specifications.h:537:47: note: Function 'screen_template_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT screen_template_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                              ^
samples/demo_guix_smart_watch/screen_template.c:69:47: note: Function 'screen_template_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT screen_template_event_process(GX_WINDOW *window, GX_EVENT* event_ptr)
                                              ^
samples/demo_guix_sprite/demo_guix_sprite.c:120:9: style: The scope of the variable 'width' can be reduced. [variableScope]
    int width;
        ^
samples/demo_guix_sprite/demo_guix_sprite.c:121:9: style: The scope of the variable 'height' can be reduced. [variableScope]
    int height;
        ^
samples/demo_guix_sprite/demo_guix_sprite.c:177:14: style: The scope of the variable 'win_width' can be reduced. [variableScope]
int          win_width;
             ^
samples/demo_guix_sprite/demo_guix_sprite.c:178:14: style: The scope of the variable 'win_height' can be reduced. [variableScope]
int          win_height;
             ^
samples/demo_guix_sprite/demo_guix_sprite.c:179:14: style: The scope of the variable 'xpos' can be reduced. [variableScope]
int          xpos;
             ^
samples/demo_guix_sprite/demo_guix_sprite.c:180:14: style: The scope of the variable 'ypos' can be reduced. [variableScope]
int          ypos;
             ^
samples/demo_guix_sprite/demo_guix_sprite.c:146:40: style:inconclusive: Function 'MainWindowEventProcess' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT MainWindowEventProcess(GX_WINDOW *window, GX_EVENT *myevent)
                                       ^
samples/demo_guix_sprite/guix_sprite_specifications.h:138:40: note: Function 'MainWindowEventProcess' argument 1 names different: declaration 'widget' definition 'window'.
UINT MainWindowEventProcess(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                       ^
samples/demo_guix_sprite/demo_guix_sprite.c:146:40: note: Function 'MainWindowEventProcess' argument 1 names different: declaration 'widget' definition 'window'.
UINT MainWindowEventProcess(GX_WINDOW *window, GX_EVENT *myevent)
                                       ^
samples/demo_guix_sprite/demo_guix_sprite.c:146:58: style:inconclusive: Function 'MainWindowEventProcess' argument 2 names different: declaration 'event_ptr' definition 'myevent'. [funcArgNamesDifferent]
UINT MainWindowEventProcess(GX_WINDOW *window, GX_EVENT *myevent)
                                                         ^
samples/demo_guix_sprite/guix_sprite_specifications.h:138:58: note: Function 'MainWindowEventProcess' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT MainWindowEventProcess(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                         ^
samples/demo_guix_sprite/demo_guix_sprite.c:146:58: note: Function 'MainWindowEventProcess' argument 2 names different: declaration 'event_ptr' definition 'myevent'.
UINT MainWindowEventProcess(GX_WINDOW *window, GX_EVENT *myevent)
                                                         ^
samples/demo_guix_sprite/demo_guix_sprite.c:174:32: style:inconclusive: Function 'MainWindowDraw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID MainWindowDraw(GX_WINDOW *window)
                               ^
samples/demo_guix_sprite/guix_sprite_specifications.h:139:32: note: Function 'MainWindowDraw' argument 1 names different: declaration 'widget' definition 'window'.
VOID MainWindowDraw(GX_WINDOW *widget);
                               ^
samples/demo_guix_sprite/demo_guix_sprite.c:174:32: note: Function 'MainWindowDraw' argument 1 names different: declaration 'widget' definition 'window'.
VOID MainWindowDraw(GX_WINDOW *window)
                               ^
samples/demo_guix_sprite/guix_sprite_specifications.c:608:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_sprite/guix_sprite_specifications.h:171:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_sprite/guix_sprite_specifications.c:608:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_thermostat/demo_guix_thermostat.c:80:54: style:inconclusive: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'. [funcArgNamesDifferent]
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON *button)
                                                     ^
samples/demo_guix_thermostat/guix_thermostat_specifications.h:137:54: note: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON *widget);
                                                     ^
samples/demo_guix_thermostat/demo_guix_thermostat.c:80:54: note: Function 'custom_pixelmap_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_pixelmap_button_draw(GX_PIXELMAP_BUTTON *button)
                                                     ^
samples/demo_guix_thermostat/guix_thermostat_specifications.c:478:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_thermostat/guix_thermostat_specifications.h:169:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_thermostat/guix_thermostat_specifications.c:478:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_washing_machine/demo_guix_washing_machine.c:194:43: style:inconclusive: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:276:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_washing_machine/demo_guix_washing_machine.c:194:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
samples/demo_guix_washing_machine/demo_guix_washing_machine.c:304:31: style:inconclusive: Function 'btn_text_draw' argument 1 names different: declaration 'widget' definition 'prompt'. [funcArgNamesDifferent]
VOID btn_text_draw(GX_PROMPT *prompt)
                              ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:277:31: note: Function 'btn_text_draw' argument 1 names different: declaration 'widget' definition 'prompt'.
VOID btn_text_draw(GX_PROMPT *widget);
                              ^
samples/demo_guix_washing_machine/demo_guix_washing_machine.c:304:31: note: Function 'btn_text_draw' argument 1 names different: declaration 'widget' definition 'prompt'.
VOID btn_text_draw(GX_PROMPT *prompt)
                              ^
samples/demo_guix_washing_machine/demo_guix_washing_machine.c:321:47: style:inconclusive: Function 'btn_numeric_text_draw' argument 1 names different: declaration 'widget' definition 'prompt'. [funcArgNamesDifferent]
VOID btn_numeric_text_draw(GX_NUMERIC_PROMPT* prompt)
                                              ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:278:47: note: Function 'btn_numeric_text_draw' argument 1 names different: declaration 'widget' definition 'prompt'.
VOID btn_numeric_text_draw(GX_NUMERIC_PROMPT *widget);
                                              ^
samples/demo_guix_washing_machine/demo_guix_washing_machine.c:321:47: note: Function 'btn_numeric_text_draw' argument 1 names different: declaration 'widget' definition 'prompt'.
VOID btn_numeric_text_draw(GX_NUMERIC_PROMPT* prompt)
                                              ^
samples/demo_guix_washing_machine/demo_guix_washing_machine.c:402:52: style:inconclusive: Function 'wash_cycle_progress_bar_draw' argument 1 names different: declaration 'widget' definition 'progress_bar'. [funcArgNamesDifferent]
VOID wash_cycle_progress_bar_draw(GX_PROGRESS_BAR* progress_bar)
                                                   ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:279:52: note: Function 'wash_cycle_progress_bar_draw' argument 1 names different: declaration 'widget' definition 'progress_bar'.
VOID wash_cycle_progress_bar_draw(GX_PROGRESS_BAR *widget);
                                                   ^
samples/demo_guix_washing_machine/demo_guix_washing_machine.c:402:52: note: Function 'wash_cycle_progress_bar_draw' argument 1 names different: declaration 'widget' definition 'progress_bar'.
VOID wash_cycle_progress_bar_draw(GX_PROGRESS_BAR* progress_bar)
                                                   ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.c:2343:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:317:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.c:2343:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_washing_machine/mode_select.c:204:50: style:inconclusive: Function 'mode_select_window_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT mode_select_window_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                                 ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:268:50: note: Function 'mode_select_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT mode_select_window_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                 ^
samples/demo_guix_washing_machine/mode_select.c:204:50: note: Function 'mode_select_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT mode_select_window_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                                 ^
samples/demo_guix_washing_machine/temperature.c:31:50: style:inconclusive: Function 'temperature_window_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT temperature_window_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                                 ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:270:50: note: Function 'temperature_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT temperature_window_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                 ^
samples/demo_guix_washing_machine/temperature.c:31:50: note: Function 'temperature_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT temperature_window_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                                 ^
samples/demo_guix_washing_machine/temperature.c:67:41: style:inconclusive: Function 'temperature_window_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID temperature_window_draw(GX_WINDOW* window)
                                        ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:271:41: note: Function 'temperature_window_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID temperature_window_draw(GX_WINDOW *widget);
                                        ^
samples/demo_guix_washing_machine/temperature.c:67:41: note: Function 'temperature_window_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID temperature_window_draw(GX_WINDOW* window)
                                        ^
samples/demo_guix_washing_machine/wash_cycle.c:66:49: style:inconclusive: Function 'wash_cycle_window_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT wash_cycle_window_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                                ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:273:49: note: Function 'wash_cycle_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT wash_cycle_window_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                ^
samples/demo_guix_washing_machine/wash_cycle.c:66:49: note: Function 'wash_cycle_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT wash_cycle_window_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                                ^
samples/demo_guix_washing_machine/wash_cycle.c:84:40: style:inconclusive: Function 'wash_cycle_window_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID wash_cycle_window_draw(GX_WINDOW* window)
                                       ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:274:40: note: Function 'wash_cycle_window_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID wash_cycle_window_draw(GX_WINDOW *widget);
                                       ^
samples/demo_guix_washing_machine/wash_cycle.c:84:40: note: Function 'wash_cycle_window_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID wash_cycle_window_draw(GX_WINDOW* window)
                                       ^
samples/demo_guix_washing_machine/wash_cycle.c:100:47: style:inconclusive: Function 'wash_cycle_slider_draw' argument 1 names different: declaration 'widget' definition 'slider'. [funcArgNamesDifferent]
VOID wash_cycle_slider_draw(GX_RADIAL_SLIDER* slider)
                                              ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:275:47: note: Function 'wash_cycle_slider_draw' argument 1 names different: declaration 'widget' definition 'slider'.
VOID wash_cycle_slider_draw(GX_RADIAL_SLIDER *widget);
                                              ^
samples/demo_guix_washing_machine/wash_cycle.c:100:47: note: Function 'wash_cycle_slider_draw' argument 1 names different: declaration 'widget' definition 'slider'.
VOID wash_cycle_slider_draw(GX_RADIAL_SLIDER* slider)
                                              ^
samples/demo_guix_washing_machine/water_level.c:128:50: style:inconclusive: Function 'water_level_window_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT water_level_window_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                                 ^
samples/demo_guix_washing_machine/demo_guix_washing_machine_specifications.h:269:50: note: Function 'water_level_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT water_level_window_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                 ^
samples/demo_guix_washing_machine/water_level.c:128:50: note: Function 'water_level_window_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT water_level_window_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                                 ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:168:43: style:inconclusive: Function 'text_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT text_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:625:43: note: Function 'text_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT text_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:168:43: note: Function 'text_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT text_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:201:45: style:inconclusive: Function 'window_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT window_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                            ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:617:45: note: Function 'window_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT window_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                            ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:201:45: note: Function 'window_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT window_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                            ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:231:43: style:inconclusive: Function 'nested_parent_window_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID nested_parent_window_draw(GX_WINDOW *window)
                                          ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:618:43: note: Function 'nested_parent_window_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID nested_parent_window_draw(GX_WINDOW *widget);
                                          ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:231:43: note: Function 'nested_parent_window_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID nested_parent_window_draw(GX_WINDOW *window)
                                          ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:277:45: style:inconclusive: Function 'slider_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT slider_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                            ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:624:45: note: Function 'slider_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT slider_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                            ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:277:45: note: Function 'slider_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT slider_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                            ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:443:46: style:inconclusive: Function 'custom_icon_button_draw' argument 1 names different: declaration 'widget' definition 'button'. [funcArgNamesDifferent]
VOID custom_icon_button_draw(GX_ICON_BUTTON *button)
                                             ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:622:46: note: Function 'custom_icon_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_icon_button_draw(GX_ICON_BUTTON *widget);
                                             ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:443:46: note: Function 'custom_icon_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_icon_button_draw(GX_ICON_BUTTON *button)
                                             ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:508:46: style:inconclusive: Function 'custom_text_button_draw' argument 1 names different: declaration 'widget' definition 'button'. [funcArgNamesDifferent]
VOID custom_text_button_draw(GX_TEXT_BUTTON *button)
                                             ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:621:46: note: Function 'custom_text_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_text_button_draw(GX_TEXT_BUTTON *widget);
                                             ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:508:46: note: Function 'custom_text_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_text_button_draw(GX_TEXT_BUTTON *button)
                                             ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:531:36: style:inconclusive: Function 'custom_button_draw' argument 1 names different: declaration 'widget' definition 'button'. [funcArgNamesDifferent]
VOID custom_button_draw(GX_BUTTON *button)
                                   ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:629:36: note: Function 'custom_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_button_draw(GX_BUTTON *widget);
                                   ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:531:36: note: Function 'custom_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_button_draw(GX_BUTTON *button)
                                   ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:552:68: style:inconclusive: Function 'custom_multi_line_text_button_draw' argument 1 names different: declaration 'widget' definition 'button'. [funcArgNamesDifferent]
VOID custom_multi_line_text_button_draw(GX_MULTI_LINE_TEXT_BUTTON *button)
                                                                   ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:630:68: note: Function 'custom_multi_line_text_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_multi_line_text_button_draw(GX_MULTI_LINE_TEXT_BUTTON *widget);
                                                                   ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:552:68: note: Function 'custom_multi_line_text_button_draw' argument 1 names different: declaration 'widget' definition 'button'.
VOID custom_multi_line_text_button_draw(GX_MULTI_LINE_TEXT_BUTTON *button)
                                                                   ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:576:61: style:inconclusive: Function 'custom_transparent_prompt_thick_border_draw' argument 1 names different: declaration 'widget' definition 'prompt'. [funcArgNamesDifferent]
VOID custom_transparent_prompt_thick_border_draw(GX_PROMPT *prompt)
                                                            ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:626:61: note: Function 'custom_transparent_prompt_thick_border_draw' argument 1 names different: declaration 'widget' definition 'prompt'.
VOID custom_transparent_prompt_thick_border_draw(GX_PROMPT *widget);
                                                            ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:576:61: note: Function 'custom_transparent_prompt_thick_border_draw' argument 1 names different: declaration 'widget' definition 'prompt'.
VOID custom_transparent_prompt_thick_border_draw(GX_PROMPT *prompt)
                                                            ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:595:44: style:inconclusive: Function 'scroll_frame_event_handler' argument 1 names different: declaration 'widget' definition 'frame'. [funcArgNamesDifferent]
UINT scroll_frame_event_handler(GX_WINDOW *frame, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:619:44: note: Function 'scroll_frame_event_handler' argument 1 names different: declaration 'widget' definition 'frame'.
UINT scroll_frame_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                           ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:595:44: note: Function 'scroll_frame_event_handler' argument 1 names different: declaration 'widget' definition 'frame'.
UINT scroll_frame_event_handler(GX_WINDOW *frame, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:613:35: style:inconclusive: Function 'scroll_frame_draw' argument 1 names different: declaration 'widget' definition 'frame'. [funcArgNamesDifferent]
VOID scroll_frame_draw(GX_WINDOW *frame)
                                  ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:620:35: note: Function 'scroll_frame_draw' argument 1 names different: declaration 'widget' definition 'frame'.
VOID scroll_frame_draw(GX_WINDOW *widget);
                                  ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:613:35: note: Function 'scroll_frame_draw' argument 1 names different: declaration 'widget' definition 'frame'.
VOID scroll_frame_draw(GX_WINDOW *frame)
                                  ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:641:50: style:inconclusive: Function 'custom_next_button_draw' argument 1 names different: declaration 'widget' definition 'pixelmap_button'. [funcArgNamesDifferent]
VOID custom_next_button_draw(GX_PIXELMAP_BUTTON *pixelmap_button)
                                                 ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:615:50: note: Function 'custom_next_button_draw' argument 1 names different: declaration 'widget' definition 'pixelmap_button'.
VOID custom_next_button_draw(GX_PIXELMAP_BUTTON *widget);
                                                 ^
samples/demo_guix_widget_types/demo_guix_widget_types.c:641:50: note: Function 'custom_next_button_draw' argument 1 names different: declaration 'widget' definition 'pixelmap_button'.
VOID custom_next_button_draw(GX_PIXELMAP_BUTTON *pixelmap_button)
                                                 ^
samples/demo_guix_widget_types/guix_circular_gauge_screen.c:40:44: style:inconclusive: Function 'gauge_window_event_handler' argument 1 names different: declaration 'widget' definition 'win'. [funcArgNamesDifferent]
UINT gauge_window_event_handler(GX_WINDOW *win, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:616:44: note: Function 'gauge_window_event_handler' argument 1 names different: declaration 'widget' definition 'win'.
UINT gauge_window_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                           ^
samples/demo_guix_widget_types/guix_circular_gauge_screen.c:40:44: note: Function 'gauge_window_event_handler' argument 1 names different: declaration 'widget' definition 'win'.
UINT gauge_window_event_handler(GX_WINDOW *win, GX_EVENT *event_ptr)
                                           ^
samples/demo_guix_widget_types/guix_scroll_wheel_screen.c:18:51: style:inconclusive: Function 'scroll_wheel_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT scroll_wheel_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                                  ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:613:51: note: Function 'scroll_wheel_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT scroll_wheel_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                                  ^
samples/demo_guix_widget_types/guix_scroll_wheel_screen.c:18:51: note: Function 'scroll_wheel_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT scroll_wheel_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                                  ^
samples/demo_guix_widget_types/guix_widget_types_specifications.c:74:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
samples/demo_guix_widget_types/guix_widget_types_specifications.c:111:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
samples/demo_guix_widget_types/guix_widget_types_specifications.c:137:19: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
GX_STUDIO_WIDGET *widget_define;
                  ^
samples/demo_guix_widget_types/guix_widget_types_specifications.c:6038:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
samples/demo_guix_widget_types/guix_widget_types_specifications.h:688:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
samples/demo_guix_widget_types/guix_widget_types_specifications.c:6038:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_binres/demo_guix_binres.c:312:12: style: The scope of the variable 'total_length' can be reduced. [variableScope]
    size_t total_length;
           ^
tutorials/demo_guix_binres/demo_guix_binres_specifications.c:763:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_binres/demo_guix_binres_specifications.h:181:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_binres/demo_guix_binres_specifications.c:763:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_circular_gauge/demo_guix_circular_gauge.c:112:37: style:inconclusive: Function 'window_event_handle' argument 1 names different: declaration 'widget' definition 'win'. [funcArgNamesDifferent]
UINT window_event_handle(GX_WINDOW *win, GX_EVENT *event_ptr)
                                    ^
tutorials/demo_guix_circular_gauge/demo_guix_circular_gauge_specifications.h:156:37: note: Function 'window_event_handle' argument 1 names different: declaration 'widget' definition 'win'.
UINT window_event_handle(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                    ^
tutorials/demo_guix_circular_gauge/demo_guix_circular_gauge.c:112:37: note: Function 'window_event_handle' argument 1 names different: declaration 'widget' definition 'win'.
UINT window_event_handle(GX_WINDOW *win, GX_EVENT *event_ptr)
                                    ^
tutorials/demo_guix_circular_gauge/demo_guix_circular_gauge_specifications.c:701:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_circular_gauge/demo_guix_circular_gauge_specifications.h:188:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_circular_gauge/demo_guix_circular_gauge_specifications.c:701:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_drop_list/demo_guix_drop_list.c:103:43: style:inconclusive: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_drop_list/demo_guix_drop_list_specifications.h:142:43: note: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
tutorials/demo_guix_drop_list/demo_guix_drop_list.c:103:43: note: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_drop_list/demo_guix_drop_list_specifications.c:530:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_drop_list/demo_guix_drop_list_specifications.h:175:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_drop_list/demo_guix_drop_list_specifications.c:530:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_generic_scroll_wheel/demo_guix_generic_scroll_wheel.c:89:43: style:inconclusive: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
tutorials/demo_guix_generic_scroll_wheel/demo_guix_generic_scroll_wheel_specifications.h:192:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
tutorials/demo_guix_generic_scroll_wheel/demo_guix_generic_scroll_wheel.c:89:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
tutorials/demo_guix_generic_scroll_wheel/demo_guix_generic_scroll_wheel_specifications.c:1186:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_generic_scroll_wheel/demo_guix_generic_scroll_wheel_specifications.h:228:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_generic_scroll_wheel/demo_guix_generic_scroll_wheel_specifications.c:1186:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_horizontal_list/demo_guix_horizontal_list.c:159:43: style:inconclusive: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_horizontal_list/demo_guix_horizontal_list_specifications.h:156:43: note: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
tutorials/demo_guix_horizontal_list/demo_guix_horizontal_list.c:159:43: note: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_horizontal_list/demo_guix_horizontal_list_specifications.c:781:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_horizontal_list/demo_guix_horizontal_list_specifications.h:191:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_horizontal_list/demo_guix_horizontal_list_specifications.c:781:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_menu/demo_guix_menu_specifications.c:71:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
tutorials/demo_guix_menu/demo_guix_menu_specifications.c:108:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
tutorials/demo_guix_menu/demo_guix_menu_specifications.c:134:19: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
GX_STUDIO_WIDGET *widget_define;
                  ^
tutorials/demo_guix_menu/demo_guix_menu_specifications.c:1331:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_menu/demo_guix_menu_specifications.h:213:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_menu/demo_guix_menu_specifications.c:1331:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_ml_text_input/demo_guix_ml_text_input.c:237:43: style:inconclusive: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_ml_text_input/demo_guix_ml_text_input_specifications.h:247:43: note: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
tutorials/demo_guix_ml_text_input/demo_guix_ml_text_input.c:237:43: note: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_ml_text_input/demo_guix_ml_text_input_specifications.c:1329:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_ml_text_input/demo_guix_ml_text_input_specifications.h:286:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_ml_text_input/demo_guix_ml_text_input_specifications.c:1329:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_radial_slider/demo_guix_radial_slider.c:72:43: style:inconclusive: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_radial_slider/demo_guix_radial_slider_specifications.h:170:43: note: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
tutorials/demo_guix_radial_slider/demo_guix_radial_slider.c:72:43: note: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_radial_slider/demo_guix_radial_slider_specifications.c:957:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_radial_slider/demo_guix_radial_slider_specifications.h:204:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_radial_slider/demo_guix_radial_slider_specifications.c:957:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_runtime_bidi_text/demo_guix_runtime_bidi_text.c:102:43: style:inconclusive: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
tutorials/demo_guix_runtime_bidi_text/demo_guix_runtime_bidi_text_specifications.h:140:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
tutorials/demo_guix_runtime_bidi_text/demo_guix_runtime_bidi_text.c:102:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW* window, GX_EVENT* event_ptr)
                                          ^
tutorials/demo_guix_runtime_bidi_text/demo_guix_runtime_bidi_text.c:134:29: style:inconclusive: Function 'window_draw' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
VOID window_draw(GX_WINDOW *window)
                            ^
tutorials/demo_guix_runtime_bidi_text/demo_guix_runtime_bidi_text_specifications.h:141:29: note: Function 'window_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID window_draw(GX_WINDOW *widget);
                            ^
tutorials/demo_guix_runtime_bidi_text/demo_guix_runtime_bidi_text.c:134:29: note: Function 'window_draw' argument 1 names different: declaration 'widget' definition 'window'.
VOID window_draw(GX_WINDOW *window)
                            ^
tutorials/demo_guix_runtime_bidi_text/demo_guix_runtime_bidi_text_specifications.c:526:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_runtime_bidi_text/demo_guix_runtime_bidi_text_specifications.h:173:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_runtime_bidi_text/demo_guix_runtime_bidi_text_specifications.c:526:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_scroll_wheel/demo_guix_scroll_wheel.c:97:43: style:inconclusive: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_scroll_wheel/demo_guix_scroll_wheel_specifications.h:210:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
tutorials/demo_guix_scroll_wheel/demo_guix_scroll_wheel.c:97:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_scroll_wheel/demo_guix_scroll_wheel_specifications.c:990:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_scroll_wheel/demo_guix_scroll_wheel_specifications.h:247:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_scroll_wheel/demo_guix_scroll_wheel_specifications.c:990:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_scrollbar/demo_guix_scrollbar_specifications.c:793:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_scrollbar/demo_guix_scrollbar_specifications.h:159:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_scrollbar/demo_guix_scrollbar_specifications.c:793:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_transitions/demo_guix_transitions.c:221:43: style:inconclusive: Function 'BackgroundWinEventProcess' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT BackgroundWinEventProcess(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_transitions/demo_guix_transitions_specifications.h:213:43: note: Function 'BackgroundWinEventProcess' argument 1 names different: declaration 'widget' definition 'window'.
UINT BackgroundWinEventProcess(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
tutorials/demo_guix_transitions/demo_guix_transitions.c:221:43: note: Function 'BackgroundWinEventProcess' argument 1 names different: declaration 'widget' definition 'window'.
UINT BackgroundWinEventProcess(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_transitions/demo_guix_transitions.c:272:44: style:inconclusive: Function 'settings_win_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT settings_win_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                           ^
tutorials/demo_guix_transitions/demo_guix_transitions_specifications.h:212:44: note: Function 'settings_win_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT settings_win_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                           ^
tutorials/demo_guix_transitions/demo_guix_transitions.c:272:44: note: Function 'settings_win_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT settings_win_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                           ^
tutorials/demo_guix_transitions/demo_guix_transitions_specifications.c:73:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
tutorials/demo_guix_transitions/demo_guix_transitions_specifications.c:110:23: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
    GX_STUDIO_WIDGET *widget_define;
                      ^
tutorials/demo_guix_transitions/demo_guix_transitions_specifications.c:136:19: style: The scope of the variable 'widget_define' can be reduced. [variableScope]
GX_STUDIO_WIDGET *widget_define;
                  ^
tutorials/demo_guix_transitions/demo_guix_transitions_specifications.c:1566:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_transitions/demo_guix_transitions_specifications.h:245:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_transitions/demo_guix_transitions_specifications.c:1566:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_vertical_list/demo_guix_vertical_list.c:157:43: style:inconclusive: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_vertical_list/demo_guix_vertical_list_specifications.h:159:43: note: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_handler(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
tutorials/demo_guix_vertical_list/demo_guix_vertical_list.c:157:43: note: Function 'main_screen_event_handler' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_handler(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_vertical_list/demo_guix_vertical_list_specifications.c:813:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_vertical_list/demo_guix_vertical_list_specifications.h:194:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_vertical_list/demo_guix_vertical_list_specifications.c:813:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_widget_animation/demo_guix_widget_animation.c:190:43: style:inconclusive: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'. [funcArgNamesDifferent]
UINT main_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_widget_animation/demo_guix_widget_animation_specifications.h:135:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
                                          ^
tutorials/demo_guix_widget_animation/demo_guix_widget_animation.c:190:43: note: Function 'main_screen_event_process' argument 1 names different: declaration 'widget' definition 'window'.
UINT main_screen_event_process(GX_WINDOW *window, GX_EVENT *event_ptr)
                                          ^
tutorials/demo_guix_widget_animation/demo_guix_widget_animation_specifications.c:471:45: style:inconclusive: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'. [funcArgNamesDifferent]
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
tutorials/demo_guix_widget_animation/demo_guix_widget_animation_specifications.h:168:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
                                            ^
tutorials/demo_guix_widget_animation/demo_guix_widget_animation_specifications.c:471:45: note: Function 'gx_studio_widget_create' argument 1 names different: declaration 'storage' definition 'control'.
GX_WIDGET *gx_studio_widget_create(GX_BYTE *control, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent)
                                            ^
ports/win32/src/gx_win32_display_driver.c:1907:0: style: The function 'WinMain' is never used. [unusedFunction]

^
common/src/gx_canvas_composite_create.c:78:0: style: The function '_gx_canvas_composite_create' is never used. [unusedFunction]

^
common/src/gx_display_driver_8bpp_glyph_3bit_draw.c:78:0: style: The function '_gx_display_driver_8bpp_glyph_3bit_draw' is never used. [unusedFunction]

^
common/src/gx_display_driver_8bpp_rotated_glyph_3bit_draw.c:76:0: style: The function '_gx_display_driver_8bpp_rotated_glyph_3bit_draw' is never used. [unusedFunction]

^
common/src/gx_system_active_language_set.c:71:0: style: The function '_gx_system_active_language_set' is never used. [unusedFunction]

^
common/src/gx_system_bidi_text_disable.c:73:0: style: The function '_gx_system_bidi_text_disable' is never used. [unusedFunction]

^
common/src/gx_system_bidi_text_enable.c:73:0: style: The function '_gx_system_bidi_text_enable' is never used. [unusedFunction]

^
common/src/gx_system_dirty_list_remove.c:72:0: style: The function '_gx_system_dirty_list_remove' is never used. [unusedFunction]

^
common/src/gx_system_dirty_list_trim.c:157:0: style: The function '_gx_system_dirty_list_trim' is never used. [unusedFunction]

^
common/src/gx_system_event_remove.c:72:0: style: The function '_gx_system_event_remove' is never used. [unusedFunction]

^
common/src/gx_system_language_table_get.c:74:0: style: The function '_gx_system_language_table_get' is never used. [unusedFunction]

^
common/src/gx_system_language_table_set.c:76:0: style: The function '_gx_system_language_table_set' is never used. [unusedFunction]

^
common/src/gx_system_screen_stack_reset.c:71:0: style: The function '_gx_system_screen_stack_reset' is never used. [unusedFunction]

^
common/src/gx_system_string_get.c:84:0: style: The function '_gx_system_string_get' is never used. [unusedFunction]

^
common/src/gx_system_string_table_get.c:74:0: style: The function '_gx_system_string_table_get' is never used. [unusedFunction]

^
common/src/gx_system_text_render_style_set.c:72:0: style: The function '_gx_system_text_render_style_set' is never used. [unusedFunction]

^
common/src/gx_system_views_update.c:76:0: style: The function '_gx_system_views_update' is never used. [unusedFunction]

^
common/src/gx_touch_driver_generic_resistive.c:876:0: style: The function '_gx_touch_driver_generic_resistive_calibrate' is never used. [unusedFunction]

^
common/src/gx_touch_driver_generic_resistive.c:331:0: style: The function '_gx_touch_driver_generic_resistive_setup' is never used. [unusedFunction]

^
common/src/gx_touch_driver_generic_resistive.c:701:0: style: The function '_gx_touch_driver_generic_resistive_update' is never used. [unusedFunction]

^
common/src/gx_utility_math_acos.c:72:0: style: The function '_gx_utility_math_acos_5_4_0' is never used. [unusedFunction]

^
common/src/gx_utility_math_cos.c:73:0: style: The function '_gx_utility_math_cos_5_4_0' is never used. [unusedFunction]

^
common/src/gx_widget_back_link.c:74:0: style: The function '_gx_widget_back_link' is never used. [unusedFunction]

^
common/src/gx_widget_draw.c:75:0: style: The function '_gx_widget_draw' is never used. [unusedFunction]

^
common/src/gx_widget_text_draw.c:81:0: style: The function '_gx_widget_text_draw' is never used. [unusedFunction]

^
common/src/gx_widget_text_id_draw.c:78:0: style: The function '_gx_widget_text_id_draw' is never used. [unusedFunction]

^
common/src/gxe_accordion_menu_create.c:82:0: style: The function '_gxe_accordion_menu_create' is never used. [unusedFunction]

^
common/src/gxe_accordion_menu_event_process.c:76:0: style: The function '_gxe_accordion_menu_event_process' is never used. [unusedFunction]

^
common/src/gxe_accordion_menu_position.c:75:0: style: The function '_gxe_accordion_menu_position' is never used. [unusedFunction]

^
common/src/gxe_animation_canvas_define.c:76:0: style: The function '_gxe_animation_canvas_define' is never used. [unusedFunction]

^
common/src/gxe_animation_create.c:70:0: style: The function '_gxe_animation_create' is never used. [unusedFunction]

^
common/src/gxe_animation_delete.c:73:0: style: The function '_gxe_animation_delete' is never used. [unusedFunction]

^
common/src/gxe_animation_drag_disable.c:77:0: style: The function '_gxe_animation_drag_disable' is never used. [unusedFunction]

^
common/src/gxe_animation_drag_enable.c:76:0: style: The function '_gxe_animation_drag_enable' is never used. [unusedFunction]

^
common/src/gxe_animation_landing_speed_set.c:74:0: style: The function '_gxe_animation_landing_speed_set' is never used. [unusedFunction]

^
common/src/gxe_animation_start.c:79:0: style: The function '_gxe_animation_start' is never used. [unusedFunction]

^
common/src/gxe_animation_stop.c:77:0: style: The function '_gxe_animation_stop' is never used. [unusedFunction]

^
common/src/gxe_binres_language_count_get.c:74:0: style: The function '_gxe_binres_language_count_get' is never used. [unusedFunction]

^
common/src/gxe_binres_language_info_load.c:74:0: style: The function '_gxe_binres_language_info_load' is never used. [unusedFunction]

^
common/src/gxe_binres_language_table_load.c:78:0: style: The function '_gxe_binres_language_table_load' is never used. [unusedFunction]

^
common/src/gxe_binres_language_table_load.c:146:0: style: The function '_gxe_binres_language_table_load_ext' is never used. [unusedFunction]

^
common/src/gxe_binres_theme_load.c:76:0: style: The function '_gxe_binres_theme_load' is never used. [unusedFunction]

^
common/src/gxe_brush_default.c:70:0: style: The function '_gxe_brush_default' is never used. [unusedFunction]

^
common/src/gxe_brush_define.c:73:0: style: The function '_gxe_brush_define' is never used. [unusedFunction]

^
common/src/gxe_button_create.c:82:0: style: The function '_gxe_button_create' is never used. [unusedFunction]

^
common/src/gxe_button_deselect.c:75:0: style: The function '_gxe_button_deselect' is never used. [unusedFunction]

^
common/src/gxe_button_event_process.c:75:0: style: The function '_gxe_button_event_process' is never used. [unusedFunction]

^
common/src/gxe_button_select.c:72:0: style: The function '_gxe_button_select' is never used. [unusedFunction]

^
common/src/gxe_canvas_text_draw.c:223:0: style: The function '_gxe_canvas_aligned_text_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_alpha_set.c:78:0: style: The function '_gxe_canvas_alpha_set' is never used. [unusedFunction]

^
common/src/gxe_canvas_arc_draw.c:80:0: style: The function '_gxe_canvas_arc_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_block_move.c:78:0: style: The function '_gxe_canvas_block_move' is never used. [unusedFunction]

^
common/src/gxe_canvas_circle_draw.c:76:0: style: The function '_gxe_canvas_circle_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_create.c:85:0: style: The function '_gxe_canvas_create' is never used. [unusedFunction]

^
common/src/gxe_canvas_delete.c:76:0: style: The function '_gxe_canvas_delete' is never used. [unusedFunction]

^
common/src/gxe_canvas_drawing_complete.c:79:0: style: The function '_gxe_canvas_drawing_complete' is never used. [unusedFunction]

^
common/src/gxe_canvas_drawing_initiate.c:77:0: style: The function '_gxe_canvas_drawing_initiate' is never used. [unusedFunction]

^
common/src/gxe_canvas_ellipse_draw.c:79:0: style: The function '_gxe_canvas_ellipse_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_hardware_layer_bind.c:78:0: style: The function '_gxe_canvas_hardware_layer_bind' is never used. [unusedFunction]

^
common/src/gxe_canvas_hide.c:77:0: style: The function '_gxe_canvas_hide' is never used. [unusedFunction]

^
common/src/gxe_canvas_line_draw.c:76:0: style: The function '_gxe_canvas_line_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_memory_define.c:77:0: style: The function '_gxe_canvas_memory_define' is never used. [unusedFunction]

^
common/src/gxe_canvas_mouse_define.c:77:0: style: The function '_gxe_canvas_mouse_define' is never used. [unusedFunction]

^
common/src/gxe_canvas_mouse_hide.c:74:0: style: The function '_gxe_canvas_mouse_hide' is never used. [unusedFunction]

^
common/src/gxe_canvas_mouse_show.c:74:0: style: The function '_gxe_canvas_mouse_show' is never used. [unusedFunction]

^
common/src/gxe_canvas_offset_set.c:79:0: style: The function '_gxe_canvas_offset_set' is never used. [unusedFunction]

^
common/src/gxe_canvas_pie_draw.c:80:0: style: The function '_gxe_canvas_pie_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_pixel_draw.c:73:0: style: The function '_gxe_canvas_pixel_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_pixelmap_blend.c:79:0: style: The function '_gxe_canvas_pixelmap_blend' is never used. [unusedFunction]

^
common/src/gxe_canvas_pixelmap_draw.c:78:0: style: The function '_gxe_canvas_pixelmap_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_pixelmap_get.c:72:0: style: The function '_gxe_canvas_pixelmap_get' is never used. [unusedFunction]

^
common/src/gxe_canvas_pixelmap_rotate.c:85:0: style: The function '_gxe_canvas_pixelmap_rotate' is never used. [unusedFunction]

^
common/src/gxe_canvas_pixelmap_tile.c:76:0: style: The function '_gxe_canvas_pixelmap_tile' is never used. [unusedFunction]

^
common/src/gxe_canvas_polygon_draw.c:76:0: style: The function '_gxe_canvas_polygon_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_rectangle_draw.c:73:0: style: The function '_gxe_canvas_rectangle_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_rotated_text_draw.c:79:0: style: The function '_gxe_canvas_rotated_text_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_rotated_text_draw.c:150:0: style: The function '_gxe_canvas_rotated_text_draw_ext' is never used. [unusedFunction]

^
common/src/gxe_canvas_shift.c:78:0: style: The function '_gxe_canvas_shift' is never used. [unusedFunction]

^
common/src/gxe_canvas_show.c:78:0: style: The function '_gxe_canvas_show' is never used. [unusedFunction]

^
common/src/gxe_canvas_text_draw.c:78:0: style: The function '_gxe_canvas_text_draw' is never used. [unusedFunction]

^
common/src/gxe_canvas_text_draw.c:145:0: style: The function '_gxe_canvas_text_draw_ext' is never used. [unusedFunction]

^
common/src/gxe_checkbox_create.c:82:0: style: The function '_gxe_checkbox_create' is never used. [unusedFunction]

^
common/src/gxe_checkbox_event_process.c:76:0: style: The function '_gxe_checkbox_event_process' is never used. [unusedFunction]

^
common/src/gxe_checkbox_pixelmap_set.c:85:0: style: The function '_gxe_checkbox_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_checkbox_select.c:74:0: style: The function '_gxe_checkbox_select' is never used. [unusedFunction]

^
common/src/gxe_circular_gauge_angle_get.c:73:0: style: The function '_gxe_circular_gauge_angle_get' is never used. [unusedFunction]

^
common/src/gxe_circular_gauge_angle_set.c:74:0: style: The function '_gxe_circular_gauge_angle_set' is never used. [unusedFunction]

^
common/src/gxe_circular_gauge_animation_set.c:75:0: style: The function '_gxe_circular_gauge_animation_set' is never used. [unusedFunction]

^
common/src/gxe_circular_gauge_create.c:78:0: style: The function '_gxe_circular_gauge_create' is never used. [unusedFunction]

^
common/src/gxe_circular_gauge_event_process.c:76:0: style: The function '_gxe_circular_gauge_event_process' is never used. [unusedFunction]

^
common/src/gxe_context_brush_default.c:72:0: style: The function '_gxe_context_brush_default' is never used. [unusedFunction]

^
common/src/gxe_context_brush_define.c:74:0: style: The function '_gxe_context_brush_define' is never used. [unusedFunction]

^
common/src/gxe_context_brush_get.c:71:0: style: The function '_gxe_context_brush_get' is never used. [unusedFunction]

^
common/src/gxe_context_brush_pattern_set.c:73:0: style: The function '_gxe_context_brush_pattern_set' is never used. [unusedFunction]

^
common/src/gxe_context_brush_set.c:70:0: style: The function '_gxe_context_brush_set' is never used. [unusedFunction]

^
common/src/gxe_context_brush_style_set.c:72:0: style: The function '_gxe_context_brush_style_set' is never used. [unusedFunction]

^
common/src/gxe_context_brush_width_set.c:77:0: style: The function '_gxe_context_brush_width_set' is never used. [unusedFunction]

^
common/src/gxe_context_color_get.c:72:0: style: The function '_gxe_context_color_get' is never used. [unusedFunction]

^
common/src/gxe_context_fill_color_set.c:71:0: style: The function '_gxe_context_fill_color_set' is never used. [unusedFunction]

^
common/src/gxe_context_font_get.c:72:0: style: The function '_gxe_context_font_get' is never used. [unusedFunction]

^
common/src/gxe_context_font_set.c:75:0: style: The function '_gxe_context_font_set' is never used. [unusedFunction]

^
common/src/gxe_context_line_color_set.c:72:0: style: The function '_gxe_context_line_color_set' is never used. [unusedFunction]

^
common/src/gxe_context_pixelmap_get.c:77:0: style: The function '_gxe_context_pixelmap_get' is never used. [unusedFunction]

^
common/src/gxe_context_pixelmap_set.c:76:0: style: The function '_gxe_context_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_context_raw_brush_define.c:78:0: style: The function '_gxe_context_raw_brush_define' is never used. [unusedFunction]

^
common/src/gxe_context_raw_fill_color_set.c:72:0: style: The function '_gxe_context_raw_fill_color_set' is never used. [unusedFunction]

^
common/src/gxe_context_raw_line_color_set.c:70:0: style: The function '_gxe_context_raw_line_color_set' is never used. [unusedFunction]

^
common/src/gxe_context_string_get.c:79:0: style: The function '_gxe_context_string_get' is never used. [unusedFunction]

^
common/src/gxe_context_string_get.c:149:0: style: The function '_gxe_context_string_get_ext' is never used. [unusedFunction]

^
common/src/gxe_display_color_set.c:75:0: style: The function '_gxe_display_color_set' is never used. [unusedFunction]

^
common/src/gxe_display_color_table_set.c:77:0: style: The function '_gxe_display_color_table_set' is never used. [unusedFunction]

^
common/src/gxe_display_create.c:80:0: style: The function '_gxe_display_create' is never used. [unusedFunction]

^
common/src/gxe_display_delete.c:77:0: style: The function '_gxe_display_delete' is never used. [unusedFunction]

^
common/src/gxe_display_font_table_set.c:75:0: style: The function '_gxe_display_font_table_set' is never used. [unusedFunction]

^
common/src/gxe_display_language_table_set.c:262:0: style: The function '_gxe_display_language_direction_table_set' is never used. [unusedFunction]

^
common/src/gxe_display_language_table_get.c:143:0: style: The function '_gxe_display_language_table_get_ext' is never used. [unusedFunction]

^
common/src/gxe_display_language_table_set.c:154:0: style: The function '_gxe_display_language_table_set_ext' is never used. [unusedFunction]

^
common/src/gxe_display_pixelmap_table_set.c:75:0: style: The function '_gxe_display_pixelmap_table_set' is never used. [unusedFunction]

^
common/src/gxe_display_string_get.c:137:0: style: The function '_gxe_display_string_get_ext' is never used. [unusedFunction]

^
common/src/gxe_display_string_table_get.c:147:0: style: The function '_gxe_display_string_table_get_ext' is never used. [unusedFunction]

^
common/src/gxe_display_theme_install.c:75:0: style: The function '_gxe_display_theme_install' is never used. [unusedFunction]

^
common/src/gxe_drop_list_close.c:74:0: style: The function '_gxe_drop_list_close' is never used. [unusedFunction]

^
common/src/gxe_drop_list_create.c:85:0: style: The function '_gxe_drop_list_create' is never used. [unusedFunction]

^
common/src/gxe_drop_list_event_process.c:74:0: style: The function '_gxe_drop_list_event_process' is never used. [unusedFunction]

^
common/src/gxe_drop_list_open.c:74:0: style: The function '_gxe_drop_list_open' is never used. [unusedFunction]

^
common/src/gxe_drop_list_pixelmap_set.c:77:0: style: The function '_gxe_drop_list_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_drop_list_popup_get.c:79:0: style: The function '_gxe_drop_list_popup_get' is never used. [unusedFunction]

^
common/src/gxe_generic_scroll_wheel_children_position.c:74:0: style: The function '_gxe_generic_scroll_wheel_children_position' is never used. [unusedFunction]

^
common/src/gxe_generic_scroll_wheel_create.c:82:0: style: The function '_gxe_generic_scroll_wheel_create' is never used. [unusedFunction]

^
common/src/gxe_generic_scroll_wheel_event_process.c:74:0: style: The function '_gxe_generic_scroll_wheel_event_process' is never used. [unusedFunction]

^
common/src/gxe_generic_scroll_wheel_row_height_set.c:75:0: style: The function '_gxe_generic_scroll_wheel_row_height_set' is never used. [unusedFunction]

^
common/src/gxe_generic_scroll_wheel_total_rows_set.c:74:0: style: The function '_gxe_generic_scroll_wheel_total_rows_set' is never used. [unusedFunction]

^
common/src/gxe_horizontal_list_children_position.c:79:0: style: The function '_gxe_horizontal_list_children_position' is never used. [unusedFunction]

^
common/src/gxe_horizontal_list_create.c:84:0: style: The function '_gxe_horizontal_list_create' is never used. [unusedFunction]

^
common/src/gxe_horizontal_list_event_process.c:75:0: style: The function '_gxe_horizontal_list_event_process' is never used. [unusedFunction]

^
common/src/gxe_horizontal_list_page_index_set.c:75:0: style: The function '_gxe_horizontal_list_page_index_set' is never used. [unusedFunction]

^
common/src/gxe_horizontal_list_selected_index_get.c:74:0: style: The function '_gxe_horizontal_list_selected_index_get' is never used. [unusedFunction]

^
common/src/gxe_horizontal_list_selected_set.c:75:0: style: The function '_gxe_horizontal_list_selected_set' is never used. [unusedFunction]

^
common/src/gxe_horizontal_list_selected_widget_get.c:74:0: style: The function '_gxe_horizontal_list_selected_widget_get' is never used. [unusedFunction]

^
common/src/gxe_horizontal_list_total_columns_set.c:71:0: style: The function '_gxe_horizontal_list_total_columns_set' is never used. [unusedFunction]

^
common/src/gxe_horizontal_scrollbar_create.c:77:0: style: The function '_gxe_horizontal_scrollbar_create' is never used. [unusedFunction]

^
common/src/gxe_icon_button_create.c:81:0: style: The function '_gxe_icon_button_create' is never used. [unusedFunction]

^
common/src/gxe_icon_button_pixelmap_set.c:75:0: style: The function '_gxe_icon_button_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_icon_create.c:83:0: style: The function '_gxe_icon_create' is never used. [unusedFunction]

^
common/src/gxe_icon_event_process.c:76:0: style: The function '_gxe_icon_event_process' is never used. [unusedFunction]

^
common/src/gxe_icon_pixelmap_set.c:74:0: style: The function '_gxe_icon_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_image_reader_create.c:74:0: style: The function '_gxe_image_reader_create' is never used. [unusedFunction]

^
common/src/gxe_image_reader_palette_set.c:74:0: style: The function '_gxe_image_reader_palette_set' is never used. [unusedFunction]

^
common/src/gxe_image_reader_start.c:74:0: style: The function '_gxe_image_reader_start' is never used. [unusedFunction]

^
common/src/gxe_line_chart_create.c:78:0: style: The function '_gxe_line_chart_create' is never used. [unusedFunction]

^
common/src/gxe_line_chart_update.c:74:0: style: The function '_gxe_line_chart_update' is never used. [unusedFunction]

^
common/src/gxe_line_chart_y_scale_calculate.c:70:0: style: The function '_gxe_line_chart_y_scale_calculate' is never used. [unusedFunction]

^
common/src/gxe_menu_create.c:82:0: style: The function '_gxe_menu_create' is never used. [unusedFunction]

^
common/src/gxe_menu_event_process.c:74:0: style: The function '_gxe_menu_event_process' is never used. [unusedFunction]

^
common/src/gxe_menu_insert.c:74:0: style: The function '_gxe_menu_insert' is never used. [unusedFunction]

^
common/src/gxe_menu_remove.c:74:0: style: The function '_gxe_menu_remove' is never used. [unusedFunction]

^
common/src/gxe_menu_text_offset_set.c:76:0: style: The function '_gxe_menu_text_offset_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_button_create.c:80:0: style: The function '_gxe_multi_line_text_button_create' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_button_event_process.c:78:0: style: The function '_gxe_multi_line_text_button_event_process' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_button_text_id_set.c:79:0: style: The function '_gxe_multi_line_text_button_text_id_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_button_text_set.c:76:0: style: The function '_gxe_multi_line_text_button_text_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_button_text_set.c:140:0: style: The function '_gxe_multi_line_text_button_text_set_ext' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_backspace.c:76:0: style: The function '_gxe_multi_line_text_input_backspace' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_buffer_clear.c:76:0: style: The function '_gxe_multi_line_text_input_buffer_clear' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_buffer_get.c:78:0: style: The function '_gxe_multi_line_text_input_buffer_get' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_char_insert.c:80:0: style: The function '_gxe_multi_line_text_input_char_insert' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_char_insert.c:156:0: style: The function '_gxe_multi_line_text_input_char_insert_ext' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_create.c:87:0: style: The function '_gxe_multi_line_text_input_create' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_cursor_pos_get.c:76:0: style: The function '_gxe_multi_line_text_input_cursor_pos_get' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_delete.c:76:0: style: The function '_gxe_multi_line_text_input_delete' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_down_arrow.c:76:0: style: The function '_gxe_multi_line_text_input_down_arrow' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_end.c:76:0: style: The function '_gxe_multi_line_text_input_end' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_event_process.c:78:0: style: The function '_gxe_multi_line_text_input_event_process' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_fill_color_set.c:84:0: style: The function '_gxe_multi_line_text_input_fill_color_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_home.c:76:0: style: The function '_gxe_multi_line_text_input_home' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_left_arrow.c:76:0: style: The function '_gxe_multi_line_text_input_left_arrow' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_right_arrow.c:76:0: style: The function '_gxe_multi_line_text_input_right_arrow' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_style_add.c:77:0: style: The function '_gxe_multi_line_text_input_style_add' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_style_remove.c:77:0: style: The function '_gxe_multi_line_text_input_style_remove' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_style_set.c:77:0: style: The function '_gxe_multi_line_text_input_style_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_text_color_set.c:84:0: style: The function '_gxe_multi_line_text_input_text_color_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_text_select.c:79:0: style: The function '_gxe_multi_line_text_input_text_select' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_text_set.c:78:0: style: The function '_gxe_multi_line_text_input_text_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_text_set.c:141:0: style: The function '_gxe_multi_line_text_input_text_set_ext' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_input_up_arrow.c:76:0: style: The function '_gxe_multi_line_text_input_up_arrow' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_view_create.c:82:0: style: The function '_gxe_multi_line_text_view_create' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_view_event_process.c:80:0: style: The function '_gxe_multi_line_text_view_event_process' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_view_font_set.c:76:0: style: The function '_gxe_multi_line_text_view_font_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_view_line_space_set.c:77:0: style: The function '_gxe_multi_line_text_view_line_space_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_view_scroll_info_get.c:77:0: style: The function '_gxe_multi_line_text_view_scroll_info_get' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_view_text_color_set.c:82:0: style: The function '_gxe_multi_line_text_view_text_color_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_view_text_id_set.c:76:0: style: The function '_gxe_multi_line_text_view_text_id_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_view_text_set.c:78:0: style: The function '_gxe_multi_line_text_view_text_set' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_view_text_set.c:141:0: style: The function '_gxe_multi_line_text_view_text_set_ext' is never used. [unusedFunction]

^
common/src/gxe_multi_line_text_view_whitespace_set.c:77:0: style: The function '_gxe_multi_line_text_view_whitespace_set' is never used. [unusedFunction]

^
common/src/gxe_numeric_pixelmap_prompt_create.c:86:0: style: The function '_gxe_numeric_pixelmap_prompt_create' is never used. [unusedFunction]

^
common/src/gxe_numeric_pixelmap_prompt_format_function_set.c:76:0: style: The function '_gxe_numeric_pixelmap_prompt_format_function_set' is never used. [unusedFunction]

^
common/src/gxe_numeric_pixelmap_prompt_value_set.c:78:0: style: The function '_gxe_numeric_pixelmap_prompt_value_set' is never used. [unusedFunction]

^
common/src/gxe_numeric_prompt_create.c:84:0: style: The function '_gxe_numeric_prompt_create' is never used. [unusedFunction]

^
common/src/gxe_numeric_prompt_format_function_set.c:73:0: style: The function '_gxe_numeric_prompt_format_function_set' is never used. [unusedFunction]

^
common/src/gxe_numeric_prompt_value_set.c:76:0: style: The function '_gxe_numeric_prompt_value_set' is never used. [unusedFunction]

^
common/src/gxe_numeric_scroll_wheel_create.c:82:0: style: The function '_gxe_numeric_scroll_wheel_create' is never used. [unusedFunction]

^
common/src/gxe_numeric_scroll_wheel_range_set.c:75:0: style: The function '_gxe_numeric_scroll_wheel_range_set' is never used. [unusedFunction]

^
common/src/gxe_pixelmap_button_create.c:84:0: style: The function '_gxe_pixelmap_button_create' is never used. [unusedFunction]

^
common/src/gxe_pixelmap_button_event_process.c:77:0: style: The function '_gxe_pixelmap_button_event_process' is never used. [unusedFunction]

^
common/src/gxe_pixelmap_button_pixelmap_set.c:76:0: style: The function '_gxe_pixelmap_button_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_pixelmap_prompt_create.c:86:0: style: The function '_gxe_pixelmap_prompt_create' is never used. [unusedFunction]

^
common/src/gxe_pixelmap_prompt_pixelmap_set.c:81:0: style: The function '_gxe_pixelmap_prompt_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_pixelmap_slider_create.c:85:0: style: The function '_gxe_pixelmap_slider_create' is never used. [unusedFunction]

^
common/src/gxe_pixelmap_slider_event_process.c:75:0: style: The function '_gxe_pixelmap_slider_event_process' is never used. [unusedFunction]

^
common/src/gxe_pixelmap_slider_pixelmap_set.c:76:0: style: The function '_gxe_pixelmap_slider_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_progress_bar_create.c:80:0: style: The function '_gxe_progress_bar_create' is never used. [unusedFunction]

^
common/src/gxe_progress_bar_event_process.c:76:0: style: The function '_gxe_progress_bar_event_process' is never used. [unusedFunction]

^
common/src/gxe_progress_bar_font_set.c:75:0: style: The function '_gxe_progress_bar_font_set' is never used. [unusedFunction]

^
common/src/gxe_progress_bar_info_set.c:74:0: style: The function '_gxe_progress_bar_info_set' is never used. [unusedFunction]

^
common/src/gxe_progress_bar_pixelmap_set.c:75:0: style: The function '_gxe_progress_bar_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_progress_bar_range_set.c:74:0: style: The function '_gxe_progress_bar_range_set' is never used. [unusedFunction]

^
common/src/gxe_progress_bar_text_color_set.c:80:0: style: The function '_gxe_progress_bar_text_color_set' is never used. [unusedFunction]

^
common/src/gxe_progress_bar_value_set.c:75:0: style: The function '_gxe_progress_bar_value_set' is never used. [unusedFunction]

^
common/src/gxe_prompt_create.c:83:0: style: The function '_gxe_prompt_create' is never used. [unusedFunction]

^
common/src/gxe_prompt_event_process.c:74:0: style: The function '_gxe_prompt_event_process' is never used. [unusedFunction]

^
common/src/gxe_prompt_font_set.c:76:0: style: The function '_gxe_prompt_font_set' is never used. [unusedFunction]

^
common/src/gxe_prompt_text_color_set.c:81:0: style: The function '_gxe_prompt_text_color_set' is never used. [unusedFunction]

^
common/src/gxe_prompt_text_get.c:74:0: style: The function '_gxe_prompt_text_get' is never used. [unusedFunction]

^
common/src/gxe_prompt_text_get.c:140:0: style: The function '_gxe_prompt_text_get_ext' is never used. [unusedFunction]

^
common/src/gxe_prompt_text_id_set.c:77:0: style: The function '_gxe_prompt_text_id_set' is never used. [unusedFunction]

^
common/src/gxe_prompt_text_set.c:77:0: style: The function '_gxe_prompt_text_set' is never used. [unusedFunction]

^
common/src/gxe_prompt_text_set.c:139:0: style: The function '_gxe_prompt_text_set_ext' is never used. [unusedFunction]

^
common/src/gxe_radial_progress_bar_anchor_set.c:78:0: style: The function '_gxe_radial_progress_bar_anchor_set' is never used. [unusedFunction]

^
common/src/gxe_radial_progress_bar_create.c:83:0: style: The function '_gxe_radial_progress_bar_create' is never used. [unusedFunction]

^
common/src/gxe_radial_progress_bar_event_process.c:78:0: style: The function '_gxe_radial_progress_bar_event_process' is never used. [unusedFunction]

^
common/src/gxe_radial_progress_bar_font_set.c:76:0: style: The function '_gxe_radial_progress_bar_font_set' is never used. [unusedFunction]

^
common/src/gxe_radial_progress_bar_info_set.c:77:0: style: The function '_gxe_radial_progress_bar_info_set' is never used. [unusedFunction]

^
common/src/gxe_radial_progress_bar_text_color_set.c:83:0: style: The function '_gxe_radial_progress_bar_text_color_set' is never used. [unusedFunction]

^
common/src/gxe_radial_progress_bar_value_set.c:77:0: style: The function '_gxe_radial_progress_bar_value_set' is never used. [unusedFunction]

^
common/src/gxe_radial_slider_anchor_angles_set.c:75:0: style: The function '_gxe_radial_slider_anchor_angles_set' is never used. [unusedFunction]

^
common/src/gxe_radial_slider_angle_set.c:75:0: style: The function '_gxe_radial_slider_angle_set' is never used. [unusedFunction]

^
common/src/gxe_radial_slider_animation_set.c:80:0: style: The function '_gxe_radial_slider_animation_set' is never used. [unusedFunction]

^
common/src/gxe_radial_slider_animation_start.c:75:0: style: The function '_gxe_radial_slider_animation_start' is never used. [unusedFunction]

^
common/src/gxe_radial_slider_create.c:83:0: style: The function '_gxe_radial_slider_create' is never used. [unusedFunction]

^
common/src/gxe_radial_slider_event_process.c:75:0: style: The function '_gxe_radial_slider_event_process' is never used. [unusedFunction]

^
common/src/gxe_radial_slider_info_get.c:72:0: style: The function '_gxe_radial_slider_info_get' is never used. [unusedFunction]

^
common/src/gxe_radial_slider_info_set.c:75:0: style: The function '_gxe_radial_slider_info_set' is never used. [unusedFunction]

^
common/src/gxe_radial_slider_pixelmap_set.c:77:0: style: The function '_gxe_radial_slider_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_radio_button_create.c:83:0: style: The function '_gxe_radio_button_create' is never used. [unusedFunction]

^
common/src/gxe_radio_button_pixelmap_set.c:86:0: style: The function '_gxe_radio_button_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_rich_text_view_create.c:77:0: style: The function '_gxe_rich_text_view_create' is never used. [unusedFunction]

^
common/src/gxe_rich_text_view_fonts_set.c:69:0: style: The function '_gxe_rich_text_view_fonts_set' is never used. [unusedFunction]

^
common/src/gxe_screen_stack_create.c:73:0: style: The function '_gxe_screen_stack_create' is never used. [unusedFunction]

^
common/src/gxe_screen_stack_pop.c:73:0: style: The function '_gxe_screen_stack_pop' is never used. [unusedFunction]

^
common/src/gxe_screen_stack_push.c:75:0: style: The function '_gxe_screen_stack_push' is never used. [unusedFunction]

^
common/src/gxe_screen_stack_reset.c:70:0: style: The function '_gxe_screen_stack_reset' is never used. [unusedFunction]

^
common/src/gxe_scroll_thumb_create.c:75:0: style: The function '_gxe_scroll_thumb_create' is never used. [unusedFunction]

^
common/src/gxe_scroll_thumb_event_process.c:76:0: style: The function '_gxe_scroll_thumb_event_process' is never used. [unusedFunction]

^
common/src/gxe_scroll_wheel_create.c:82:0: style: The function '_gxe_scroll_wheel_create' is never used. [unusedFunction]

^
common/src/gxe_scroll_wheel_event_process.c:74:0: style: The function '_gxe_scroll_wheel_event_process' is never used. [unusedFunction]

^
common/src/gxe_scroll_wheel_gradient_alpha_set.c:75:0: style: The function '_gxe_scroll_wheel_gradient_alpha_set' is never used. [unusedFunction]

^
common/src/gxe_scroll_wheel_row_height_set.c:74:0: style: The function '_gxe_scroll_wheel_row_height_set' is never used. [unusedFunction]

^
common/src/gxe_scroll_wheel_selected_background_set.c:76:0: style: The function '_gxe_scroll_wheel_selected_background_set' is never used. [unusedFunction]

^
common/src/gxe_scroll_wheel_selected_get.c:74:0: style: The function '_gxe_scroll_wheel_selected_get' is never used. [unusedFunction]

^
common/src/gxe_scroll_wheel_selected_set.c:74:0: style: The function '_gxe_scroll_wheel_selected_set' is never used. [unusedFunction]

^
common/src/gxe_scroll_wheel_speed_set.c:80:0: style: The function '_gxe_scroll_wheel_speed_set' is never used. [unusedFunction]

^
common/src/gxe_scroll_wheel_total_rows_set.c:74:0: style: The function '_gxe_scroll_wheel_total_rows_set' is never used. [unusedFunction]

^
common/src/gxe_scrollbar_event_process.c:74:0: style: The function '_gxe_scrollbar_event_process' is never used. [unusedFunction]

^
common/src/gxe_scrollbar_limit_check.c:71:0: style: The function '_gxe_scrollbar_limit_check' is never used. [unusedFunction]

^
common/src/gxe_scrollbar_reset.c:76:0: style: The function '_gxe_scrollbar_reset' is never used. [unusedFunction]

^
common/src/gxe_scrollbar_value_set.c:73:0: style: The function '_gxe_scrollbar_value_set' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_backspace.c:75:0: style: The function '_gxe_single_line_text_input_backspace' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_buffer_clear.c:77:0: style: The function '_gxe_single_line_text_input_buffer_clear' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_buffer_get.c:81:0: style: The function '_gxe_single_line_text_input_buffer_get' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_character_delete.c:75:0: style: The function '_gxe_single_line_text_input_character_delete' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_character_insert.c:79:0: style: The function '_gxe_single_line_text_input_character_insert' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_create.c:90:0: style: The function '_gxe_single_line_text_input_create' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_draw_position_get.c:78:0: style: The function '_gxe_single_line_text_input_draw_position_get' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_end.c:76:0: style: The function '_gxe_single_line_text_input_end' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_event_process.c:76:0: style: The function '_gxe_single_line_text_input_event_process' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_fill_color_set.c:84:0: style: The function '_gxe_single_line_text_input_fill_color_set' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_home.c:76:0: style: The function '_gxe_single_line_text_input_home' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_left_arrow.c:77:0: style: The function '_gxe_single_line_text_input_left_arrow' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_position_get.c:77:0: style: The function '_gxe_single_line_text_input_position_get' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_right_arrow.c:77:0: style: The function '_gxe_single_line_text_input_right_arrow' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_style_add.c:76:0: style: The function '_gxe_single_line_text_input_style_add' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_style_remove.c:76:0: style: The function '_gxe_single_line_text_input_style_remove' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_style_set.c:76:0: style: The function '_gxe_single_line_text_input_style_set' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_text_color_set.c:84:0: style: The function '_gxe_single_line_text_input_text_color_set' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_text_select.c:80:0: style: The function '_gxe_single_line_text_input_text_select' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_text_set.c:77:0: style: The function '_gxe_single_line_text_input_text_set' is never used. [unusedFunction]

^
common/src/gxe_single_line_text_input_text_set.c:146:0: style: The function '_gxe_single_line_text_input_text_set_ext' is never used. [unusedFunction]

^
common/src/gxe_slider_create.c:80:0: style: The function '_gxe_slider_create' is never used. [unusedFunction]

^
common/src/gxe_slider_event_process.c:73:0: style: The function '_gxe_slider_event_process' is never used. [unusedFunction]

^
common/src/gxe_slider_info_set.c:75:0: style: The function '_gxe_slider_info_set' is never used. [unusedFunction]

^
common/src/gxe_slider_needle_position_get.c:80:0: style: The function '_gxe_slider_needle_position_get' is never used. [unusedFunction]

^
common/src/gxe_slider_travel_get.c:78:0: style: The function '_gxe_slider_travel_get' is never used. [unusedFunction]

^
common/src/gxe_slider_value_calculate.c:73:0: style: The function '_gxe_slider_value_calculate' is never used. [unusedFunction]

^
common/src/gxe_slider_value_set.c:74:0: style: The function '_gxe_slider_value_set' is never used. [unusedFunction]

^
common/src/gxe_sprite_create.c:85:0: style: The function '_gxe_sprite_create' is never used. [unusedFunction]

^
common/src/gxe_sprite_current_frame_set.c:75:0: style: The function '_gxe_sprite_current_frame_set' is never used. [unusedFunction]

^
common/src/gxe_sprite_frame_list_set.c:76:0: style: The function '_gxe_sprite_frame_list_set' is never used. [unusedFunction]

^
common/src/gxe_sprite_start.c:75:0: style: The function '_gxe_sprite_start' is never used. [unusedFunction]

^
common/src/gxe_sprite_stop.c:73:0: style: The function '_gxe_sprite_stop' is never used. [unusedFunction]

^
common/src/gxe_string_scroll_wheel_create.c:86:0: style: The function '_gxe_string_scroll_wheel_create' is never used. [unusedFunction]

^
common/src/gxe_string_scroll_wheel_create.c:179:0: style: The function '_gxe_string_scroll_wheel_create_ext' is never used. [unusedFunction]

^
common/src/gxe_string_scroll_wheel_event_process.c:73:0: style: The function '_gxe_string_scroll_wheel_event_process' is never used. [unusedFunction]

^
common/src/gxe_string_scroll_wheel_string_id_list_set.c:76:0: style: The function '_gxe_string_scroll_wheel_string_id_list_set' is never used. [unusedFunction]

^
common/src/gxe_string_scroll_wheel_string_list_set.c:78:0: style: The function '_gxe_string_scroll_wheel_string_list_set' is never used. [unusedFunction]

^
common/src/gxe_string_scroll_wheel_string_list_set.c:155:0: style: The function '_gxe_string_scroll_wheel_string_list_set_ext' is never used. [unusedFunction]

^
common/src/gxe_system_active_language_set.c:74:0: style: The function '_gxe_system_active_language_set' is never used. [unusedFunction]

^
common/src/gxe_system_canvas_refresh.c:74:0: style: The function '_gxe_system_canvas_refresh' is never used. [unusedFunction]

^
common/src/gxe_system_dirty_mark.c:72:0: style: The function '_gxe_system_dirty_mark' is never used. [unusedFunction]

^
common/src/gxe_system_dirty_partial_add.c:76:0: style: The function '_gxe_system_dirty_partial_add' is never used. [unusedFunction]

^
common/src/gxe_system_draw_context_get.c:73:0: style: The function '_gxe_system_draw_context_get' is never used. [unusedFunction]

^
common/src/gxe_system_event_fold.c:69:0: style: The function '_gxe_system_event_fold' is never used. [unusedFunction]

^
common/src/gxe_system_event_send.c:69:0: style: The function '_gxe_system_event_send' is never used. [unusedFunction]

^
common/src/gxe_system_focus_claim.c:74:0: style: The function '_gxe_system_focus_claim' is never used. [unusedFunction]

^
common/src/gxe_system_initialize.c:72:0: style: The function '_gxe_system_initialize' is never used. [unusedFunction]

^
common/src/gxe_system_language_table_get.c:77:0: style: The function '_gxe_system_language_table_get' is never used. [unusedFunction]

^
common/src/gxe_system_language_table_set.c:79:0: style: The function '_gxe_system_language_table_set' is never used. [unusedFunction]

^
common/src/gxe_system_memory_allocator_set.c:76:0: style: The function '_gxe_system_memory_allocator_set' is never used. [unusedFunction]

^
common/src/gxe_system_pen_configure.c:74:0: style: The function '_gxe_system_pen_configure' is never used. [unusedFunction]

^
common/src/gxe_system_screen_stack_create.c:73:0: style: The function '_gxe_system_screen_stack_create' is never used. [unusedFunction]

^
common/src/gxe_system_screen_stack_get.c:73:0: style: The function '_gxe_system_screen_stack_get' is never used. [unusedFunction]

^
common/src/gxe_system_screen_stack_pop.c:73:0: style: The function '_gxe_system_screen_stack_pop' is never used. [unusedFunction]

^
common/src/gxe_system_screen_stack_push.c:74:0: style: The function '_gxe_system_screen_stack_push' is never used. [unusedFunction]

^
common/src/gxe_system_scroll_appearance_get.c:78:0: style: The function '_gxe_system_scroll_appearance_get' is never used. [unusedFunction]

^
common/src/gxe_system_scroll_appearance_set.c:80:0: style: The function '_gxe_system_scroll_appearance_set' is never used. [unusedFunction]

^
common/src/gxe_system_start.c:71:0: style: The function '_gxe_system_start' is never used. [unusedFunction]

^
common/src/gxe_system_string_get.c:76:0: style: The function '_gxe_system_string_get' is never used. [unusedFunction]

^
common/src/gxe_system_string_table_get.c:78:0: style: The function '_gxe_system_string_table_get' is never used. [unusedFunction]

^
common/src/gxe_system_string_width_get.c:80:0: style: The function '_gxe_system_string_width_get' is never used. [unusedFunction]

^
common/src/gxe_system_string_width_get.c:169:0: style: The function '_gxe_system_string_width_get_ext' is never used. [unusedFunction]

^
common/src/gxe_system_timer_start.c:76:0: style: The function '_gxe_system_timer_start' is never used. [unusedFunction]

^
common/src/gxe_system_timer_stop.c:74:0: style: The function '_gxe_system_timer_stop' is never used. [unusedFunction]

^
common/src/gxe_system_version_string_get.c:72:0: style: The function '_gxe_system_version_string_get' is never used. [unusedFunction]

^
common/src/gxe_system_version_string_get.c:131:0: style: The function '_gxe_system_version_string_get_ext' is never used. [unusedFunction]

^
common/src/gxe_system_widget_find.c:73:0: style: The function '_gxe_system_widget_find' is never used. [unusedFunction]

^
common/src/gxe_text_button_create.c:80:0: style: The function '_gxe_text_button_create' is never used. [unusedFunction]

^
common/src/gxe_text_button_event_process.c:74:0: style: The function '_gxe_text_button_event_process' is never used. [unusedFunction]

^
common/src/gxe_text_button_font_set.c:74:0: style: The function '_gxe_text_button_font_set' is never used. [unusedFunction]

^
common/src/gxe_text_button_text_color_set.c:77:0: style: The function '_gxe_text_button_text_color_set' is never used. [unusedFunction]

^
common/src/gxe_text_button_text_get.c:77:0: style: The function '_gxe_text_button_text_get' is never used. [unusedFunction]

^
common/src/gxe_text_button_text_get.c:146:0: style: The function '_gxe_text_button_text_get_ext' is never used. [unusedFunction]

^
common/src/gxe_text_button_text_id_set.c:77:0: style: The function '_gxe_text_button_text_id_set' is never used. [unusedFunction]

^
common/src/gxe_text_button_text_set.c:77:0: style: The function '_gxe_text_button_text_set' is never used. [unusedFunction]

^
common/src/gxe_text_button_text_set.c:146:0: style: The function '_gxe_text_button_text_set_ext' is never used. [unusedFunction]

^
common/src/gxe_text_input_cursor_blink_interval_set.c:77:0: style: The function '_gxe_text_input_cursor_blink_interval_set' is never used. [unusedFunction]

^
common/src/gxe_text_input_cursor_height_set.c:76:0: style: The function '_gxe_text_input_cursor_height_set' is never used. [unusedFunction]

^
common/src/gxe_text_input_cursor_width_set.c:76:0: style: The function '_gxe_text_input_cursor_width_set' is never used. [unusedFunction]

^
common/src/gxe_text_scroll_wheel_callback_set.c:74:0: style: The function '_gxe_text_scroll_wheel_callback_set' is never used. [unusedFunction]

^
common/src/gxe_text_scroll_wheel_callback_set.c:142:0: style: The function '_gxe_text_scroll_wheel_callback_set_ext' is never used. [unusedFunction]

^
common/src/gxe_text_scroll_wheel_create.c:81:0: style: The function '_gxe_text_scroll_wheel_create' is never used. [unusedFunction]

^
common/src/gxe_text_scroll_wheel_event_process.c:73:0: style: The function '_gxe_text_scroll_wheel_event_process' is never used. [unusedFunction]

^
common/src/gxe_text_scroll_wheel_font_set.c:75:0: style: The function '_gxe_text_scroll_wheel_font_set' is never used. [unusedFunction]

^
common/src/gxe_text_scroll_wheel_text_color_set.c:76:0: style: The function '_gxe_text_scroll_wheel_text_color_set' is never used. [unusedFunction]

^
common/src/gxe_tree_view_create.c:81:0: style: The function '_gxe_tree_view_create' is never used. [unusedFunction]

^
common/src/gxe_tree_view_event_process.c:76:0: style: The function '_gxe_tree_view_event_process' is never used. [unusedFunction]

^
common/src/gxe_tree_view_indentation_set.c:76:0: style: The function '_gxe_tree_view_indentation_set' is never used. [unusedFunction]

^
common/src/gxe_tree_view_position.c:74:0: style: The function '_gxe_tree_view_position' is never used. [unusedFunction]

^
common/src/gxe_tree_view_root_line_color_set.c:76:0: style: The function '_gxe_tree_view_root_line_color_set' is never used. [unusedFunction]

^
common/src/gxe_tree_view_root_pixelmap_set.c:79:0: style: The function '_gxe_tree_view_root_pixelmap_set' is never used. [unusedFunction]

^
common/src/gxe_tree_view_selected_get.c:73:0: style: The function '_gxe_tree_view_selected_get' is never used. [unusedFunction]

^
common/src/gxe_tree_view_selected_set.c:76:0: style: The function '_gxe_tree_view_selected_set' is never used. [unusedFunction]

^
common/src/gxe_utility_bidi_paragraph_reorder.c:77:0: style: The function '_gxe_utility_bidi_paragraph_reorder' is never used. [unusedFunction]

^
common/src/gxe_utility_bidi_paragraph_reorder.c:136:0: style: The function '_gxe_utility_bidi_paragraph_reorder_ext' is never used. [unusedFunction]

^
common/src/gxe_utility_bidi_resolved_text_info_delete.c:75:0: style: The function '_gxe_utility_bidi_resolved_text_info_delete' is never used. [unusedFunction]

^
common/src/gxe_utility_canvas_to_bmp.c:72:0: style: The function '_gxe_utility_canvas_to_bmp' is never used. [unusedFunction]

^
common/src/gxe_utility_circle_point_get.c:78:0: style: The function '_gxe_utility_circle_point_get' is never used. [unusedFunction]

^
common/src/gxe_utility_gradient_create.c:79:0: style: The function '_gxe_utility_gradient_create' is never used. [unusedFunction]

^
common/src/gxe_utility_gradient_delete.c:74:0: style: The function '_gxe_utility_gradient_delete' is never used. [unusedFunction]

^
common/src/gxe_utility_ltoa.c:73:0: style: The function '_gxe_utility_ltoa' is never used. [unusedFunction]

^
common/src/gxe_utility_pixelmap_resize.c:78:0: style: The function '_gxe_utility_pixelmap_resize' is never used. [unusedFunction]

^
common/src/gxe_utility_pixelmap_rotate.c:79:0: style: The function '_gxe_utility_pixelmap_rotate' is never used. [unusedFunction]

^
common/src/gxe_utility_pixelmap_simple_rotate.c:77:0: style: The function '_gxe_utility_pixelmap_simple_rotate' is never used. [unusedFunction]

^
common/src/gxe_utility_rectangle_center.c:74:0: style: The function '_gxe_utility_rectangle_center' is never used. [unusedFunction]

^
common/src/gxe_utility_rectangle_center_find.c:75:0: style: The function '_gxe_utility_rectangle_center_find' is never used. [unusedFunction]

^
common/src/gxe_utility_rectangle_combine.c:73:0: style: The function '_gxe_utility_rectangle_combine' is never used. [unusedFunction]

^
common/src/gxe_utility_rectangle_compare.c:74:0: style: The function '_gxe_utility_rectangle_compare' is never used. [unusedFunction]

^
common/src/gxe_utility_rectangle_define.c:76:0: style: The function '_gxe_utility_rectangle_define' is never used. [unusedFunction]

^
common/src/gxe_utility_rectangle_overlap_detect.c:74:0: style: The function '_gxe_utility_rectangle_overlap_detect' is never used. [unusedFunction]

^
common/src/gxe_utility_rectangle_point_detect.c:72:0: style: The function '_gxe_utility_rectangle_point_detect' is never used. [unusedFunction]

^
common/src/gxe_utility_rectangle_resize.c:73:0: style: The function '_gxe_utility_rectangle_resize' is never used. [unusedFunction]

^
common/src/gxe_utility_rectangle_shift.c:75:0: style: The function '_gxe_utility_rectangle_shift' is never used. [unusedFunction]

^
common/src/gxe_utility_string_to_alphamap.c:72:0: style: The function '_gxe_utility_string_to_alphamap' is never used. [unusedFunction]

^
common/src/gxe_utility_string_to_alphamap.c:133:0: style: The function '_gxe_utility_string_to_alphamap_ext' is never used. [unusedFunction]

^
common/src/gxe_vertical_list_children_position.c:77:0: style: The function '_gxe_vertical_list_children_position' is never used. [unusedFunction]

^
common/src/gxe_vertical_list_create.c:85:0: style: The function '_gxe_vertical_list_create' is never used. [unusedFunction]

^
common/src/gxe_vertical_list_event_process.c:74:0: style: The function '_gxe_vertical_list_event_process' is never used. [unusedFunction]

^
common/src/gxe_vertical_list_page_index_set.c:75:0: style: The function '_gxe_vertical_list_page_index_set' is never used. [unusedFunction]

^
common/src/gxe_vertical_list_selected_index_get.c:73:0: style: The function '_gxe_vertical_list_selected_index_get' is never used. [unusedFunction]

^
common/src/gxe_vertical_list_selected_set.c:74:0: style: The function '_gxe_vertical_list_selected_set' is never used. [unusedFunction]

^
common/src/gxe_vertical_list_selected_widget_get.c:73:0: style: The function '_gxe_vertical_list_selected_widget_get' is never used. [unusedFunction]

^
common/src/gxe_vertical_list_total_rows_set.c:74:0: style: The function '_gxe_vertical_list_total_rows_set' is never used. [unusedFunction]

^
common/src/gxe_vertical_scrollbar_create.c:79:0: style: The function '_gxe_vertical_scrollbar_create' is never used. [unusedFunction]

^
common/src/gxe_widget_allocate.c:73:0: style: The function '_gxe_widget_allocate' is never used. [unusedFunction]

^
common/src/gxe_widget_attach.c:73:0: style: The function '_gxe_widget_attach' is never used. [unusedFunction]

^
common/src/gxe_widget_back_attach.c:74:0: style: The function '_gxe_widget_back_attach' is never used. [unusedFunction]

^
common/src/gxe_widget_back_move.c:74:0: style: The function '_gxe_widget_back_move' is never used. [unusedFunction]

^
common/src/gxe_widget_block_move.c:77:0: style: The function '_gxe_widget_block_move' is never used. [unusedFunction]

^
common/src/gxe_widget_border_style_set.c:75:0: style: The function '_gxe_widget_border_style_set' is never used. [unusedFunction]

^
common/src/gxe_widget_border_width_get.c:73:0: style: The function '_gxe_widget_border_width_get' is never used. [unusedFunction]

^
common/src/gxe_widget_canvas_get.c:73:0: style: The function '_gxe_widget_canvas_get' is never used. [unusedFunction]

^
common/src/gxe_widget_child_detect.c:74:0: style: The function '_gxe_widget_child_detect' is never used. [unusedFunction]

^
common/src/gxe_widget_client_get.c:76:0: style: The function '_gxe_widget_client_get' is never used. [unusedFunction]

^
common/src/gxe_widget_color_get.c:74:0: style: The function '_gxe_widget_color_get' is never used. [unusedFunction]

^
common/src/gxe_widget_create.c:78:0: style: The function '_gxe_widget_create' is never used. [unusedFunction]

^
common/src/gxe_widget_created_test.c:72:0: style: The function '_gxe_widget_created_test' is never used. [unusedFunction]

^
common/src/gxe_widget_delete.c:73:0: style: The function '_gxe_widget_delete' is never used. [unusedFunction]

^
common/src/gxe_widget_detach.c:72:0: style: The function '_gxe_widget_detach' is never used. [unusedFunction]

^
common/src/gxe_widget_draw_set.c:74:0: style: The function '_gxe_widget_draw_set' is never used. [unusedFunction]

^
common/src/gxe_widget_event_generate.c:76:0: style: The function '_gxe_widget_event_generate' is never used. [unusedFunction]

^
common/src/gxe_widget_event_process.c:75:0: style: The function '_gxe_widget_event_process' is never used. [unusedFunction]

^
common/src/gxe_widget_event_process_set.c:73:0: style: The function '_gxe_widget_event_process_set' is never used. [unusedFunction]

^
common/src/gxe_widget_event_to_parent.c:73:0: style: The function '_gxe_widget_event_to_parent' is never used. [unusedFunction]

^
common/src/gxe_widget_fill_color_set.c:76:0: style: The function '_gxe_widget_fill_color_set' is never used. [unusedFunction]

^
common/src/gxe_widget_find.c:74:0: style: The function '_gxe_widget_find' is never used. [unusedFunction]

^
common/src/gxe_widget_first_child_get.c:74:0: style: The function '_gxe_widget_first_child_get' is never used. [unusedFunction]

^
common/src/gxe_widget_focus_next.c:73:0: style: The function '_gxe_widget_focus_next' is never used. [unusedFunction]

^
common/src/gxe_widget_focus_previous.c:73:0: style: The function '_gxe_widget_focus_previous' is never used. [unusedFunction]

^
common/src/gxe_widget_font_get.c:73:0: style: The function '_gxe_widget_font_get' is never used. [unusedFunction]

^
common/src/gxe_widget_free.c:72:0: style: The function '_gxe_widget_free' is never used. [unusedFunction]

^
common/src/gxe_widget_front_move.c:76:0: style: The function '_gxe_widget_front_move' is never used. [unusedFunction]

^
common/src/gxe_widget_height_get.c:76:0: style: The function '_gxe_widget_height_get' is never used. [unusedFunction]

^
common/src/gxe_widget_hide.c:72:0: style: The function '_gxe_widget_hide' is never used. [unusedFunction]

^
common/src/gxe_widget_last_child_get.c:74:0: style: The function '_gxe_widget_last_child_get' is never used. [unusedFunction]

^
common/src/gxe_widget_next_sibling_get.c:74:0: style: The function '_gxe_widget_next_sibling_get' is never used. [unusedFunction]

^
common/src/gxe_widget_parent_get.c:74:0: style: The function '_gxe_widget_parent_get' is never used. [unusedFunction]

^
common/src/gxe_widget_pixelmap_get.c:73:0: style: The function '_gxe_widget_pixelmap_get' is never used. [unusedFunction]

^
common/src/gxe_widget_previous_sibling_get.c:75:0: style: The function '_gxe_widget_previous_sibling_get' is never used. [unusedFunction]

^
common/src/gxe_widget_resize.c:73:0: style: The function '_gxe_widget_resize' is never used. [unusedFunction]

^
common/src/gxe_widget_shift.c:78:0: style: The function '_gxe_widget_shift' is never used. [unusedFunction]

^
common/src/gxe_widget_show.c:72:0: style: The function '_gxe_widget_show' is never used. [unusedFunction]

^
common/src/gxe_widget_status_add.c:72:0: style: The function '_gxe_widget_status_add' is never used. [unusedFunction]

^
common/src/gxe_widget_status_get.c:73:0: style: The function '_gxe_widget_status_get' is never used. [unusedFunction]

^
common/src/gxe_widget_status_remove.c:72:0: style: The function '_gxe_widget_status_remove' is never used. [unusedFunction]

^
common/src/gxe_widget_status_test.c:74:0: style: The function '_gxe_widget_status_test' is never used. [unusedFunction]

^
common/src/gxe_widget_string_get.c:76:0: style: The function '_gxe_widget_string_get' is never used. [unusedFunction]

^
common/src/gxe_widget_string_get.c:146:0: style: The function '_gxe_widget_string_get_ext' is never used. [unusedFunction]

^
common/src/gxe_widget_style_add.c:75:0: style: The function '_gxe_widget_style_add' is never used. [unusedFunction]

^
common/src/gxe_widget_style_get.c:76:0: style: The function '_gxe_widget_style_get' is never used. [unusedFunction]

^
common/src/gxe_widget_style_remove.c:75:0: style: The function '_gxe_widget_style_remove' is never used. [unusedFunction]

^
common/src/gxe_widget_style_set.c:77:0: style: The function '_gxe_widget_style_set' is never used. [unusedFunction]

^
common/src/gxe_widget_text_blend.c:82:0: style: The function '_gxe_widget_text_blend' is never used. [unusedFunction]

^
common/src/gxe_widget_text_blend.c:158:0: style: The function '_gxe_widget_text_blend_ext' is never used. [unusedFunction]

^
common/src/gxe_widget_top_visible_child_find.c:75:0: style: The function '_gxe_widget_top_visible_child_find' is never used. [unusedFunction]

^
common/src/gxe_widget_type_find.c:73:0: style: The function '_gxe_widget_type_find' is never used. [unusedFunction]

^
common/src/gxe_widget_width_get.c:76:0: style: The function '_gxe_widget_width_get' is never used. [unusedFunction]

^
common/src/gxe_window_client_height_get.c:73:0: style: The function '_gxe_window_client_height_get' is never used. [unusedFunction]

^
common/src/gxe_window_client_scroll.c:77:0: style: The function '_gxe_window_client_scroll' is never used. [unusedFunction]

^
common/src/gxe_window_client_width_get.c:75:0: style: The function '_gxe_window_client_width_get' is never used. [unusedFunction]

^
common/src/gxe_window_close.c:74:0: style: The function '_gxe_window_close' is never used. [unusedFunction]

^
common/src/gxe_window_create.c:81:0: style: The function '_gxe_window_create' is never used. [unusedFunction]

^
common/src/gxe_window_event_process.c:75:0: style: The function '_gxe_window_event_process' is never used. [unusedFunction]

^
common/src/gxe_window_execute.c:75:0: style: The function '_gxe_window_execute' is never used. [unusedFunction]

^
common/src/gxe_window_root_create.c:78:0: style: The function '_gxe_window_root_create' is never used. [unusedFunction]

^
common/src/gxe_window_root_delete.c:74:0: style: The function '_gxe_window_root_delete' is never used. [unusedFunction]

^
common/src/gxe_window_root_event_process.c:78:0: style: The function '_gxe_window_root_event_process' is never used. [unusedFunction]

^
common/src/gxe_window_root_find.c:74:0: style: The function '_gxe_window_root_find' is never used. [unusedFunction]

^
common/src/gxe_window_scroll_info_get.c:75:0: style: The function '_gxe_window_scroll_info_get' is never used. [unusedFunction]

^
common/src/gxe_window_scrollbar_find.c:75:0: style: The function '_gxe_window_scrollbar_find' is never used. [unusedFunction]

^
common/src/gxe_window_wallpaper_get.c:73:0: style: The function '_gxe_window_wallpaper_get' is never used. [unusedFunction]

^
common/src/gxe_window_wallpaper_set.c:78:0: style: The function '_gxe_window_wallpaper_set' is never used. [unusedFunction]

^
samples/demo_guix_home_automation/demo_guix_home_automation.c:283:0: style: The function 'fade_in_home_window' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:608:0: style: The function 'gx_generic_event_fold' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:640:0: style: The function 'gx_generic_event_pop' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:692:0: style: The function 'gx_generic_event_purge' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:499:0: style: The function 'gx_generic_rtos_initialize' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:743:0: style: The function 'gx_generic_system_mutex_lock' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:749:0: style: The function 'gx_generic_system_mutex_unlock' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:755:0: style: The function 'gx_generic_system_time_get' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:761:0: style: The function 'gx_generic_thread_identify' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:542:0: style: The function 'gx_generic_thread_start' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:789:0: style: The function 'gx_generic_time_delay' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:731:0: style: The function 'gx_generic_timer_start' is never used. [unusedFunction]

^
common/src/gx_system_rtos_bind.c:737:0: style: The function 'gx_generic_timer_stop' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver.c:1778:0: style: The function 'gx_win32_driver_thread_entry' is never used. [unusedFunction]

^
samples/demo_guix_calculator/demo_guix_calculator.c:107:0: style: The function 'tx_application_define' is never used. [unusedFunction]

^
ports/win32/src/st/gx_win32_chromart_display_driver_565rgb.c:140:0: style: The function 'win32_chromeart_graphics_driver_setup_565rgb' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_1555xrgb.c:134:0: style: The function 'win32_graphics_driver_setup_1555xrgb' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_24xrgb_rotated.c:73:0: style: The function 'win32_graphics_driver_setup_24xrgb_rotated' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_32argb.c:76:0: style: The function 'win32_graphics_driver_setup_32argb' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_32argb_rotated.c:73:0: style: The function 'win32_graphics_driver_setup_32argb_rotated' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_332rgb.c:162:0: style: The function 'win32_graphics_driver_setup_332rgb' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_4444argb.c:132:0: style: The function 'win32_graphics_driver_setup_4444argb' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_4bpp_grayscale.c:135:0: style: The function 'win32_graphics_driver_setup_4bpp_grayscale' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_565bgr.c:133:0: style: The function 'win32_graphics_driver_setup_565bgr' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_565rgb_rotated.c:135:0: style: The function 'win32_graphics_driver_setup_565rgb_rotated' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_8bit_palette.c:190:0: style: The function 'win32_graphics_driver_setup_8bit_palette' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_8bit_palette_rotated.c:74:0: style: The function 'win32_graphics_driver_setup_8bit_palette_rotated' is never used. [unusedFunction]

^
ports/win32/src/gx_win32_display_driver_monochrome.c:129:0: style: The function 'win32_graphics_driver_setup_monochrome' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

